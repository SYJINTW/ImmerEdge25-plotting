%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: cfdc9f2f514db84d961a5f8bc5a1edf9.dvi
%%CreationDate: Sun Jan 28 07:23:35 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 416 292
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\syjintw\AppData\Local\Temp\tmp6plce17o\tmp.ps
%+ C:\Users\syjintw\.matplotlib\tex.cache\cf\dc\cfdc9f2f514db84d961a5f8bc5a1edf9.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.01.28:1523
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B034250D21A5C6AF7938C40B271F1A009EB695B077F
72BA75DCFC69B0F51A459B5188EFD13F7DB0985F0A3C2E1487D41BD2468A7485
68DF2313ECAB9404016B1330269B6C9AAF3DA1026C2155022E70A7B97D5562F5
5C3CD0CFDD5E1917BE04D545FBCC6E46D7AF6CBF36A165C6A9931EECD7F7D180
5326919EE4DC25691389942B725B498D7198E266F5F60C70844F6230EDE6EC7A
CFC35B6AE123E6B03D9875FCC11919647E8B40A5A2EB1BB8C26FE9004BC127FB
7367DD9F70A15A7225049E862656873684A08E6348D7A456F78D197490EA3849
CEF79998C36FC044FD5056DED3626ADFB08748ADEC9260824BD6B2FDB327E2A3
2D14F17E59A758BD72A772E7AAFA6ED6A8582BDA6763D3B74EA124C80FF10CE4
5C02D1CE641C8300C59703A5B683324F98654398F5926CA93F4426D967EB3739
3D9E5E156CE6AFB18AB8418651E2189A750A04F8B0157396CF63CB6CB7E817C5
EFF3752CB9E8A96238CCBBB414C568D5600A2255A6F29F3C77B28DD3E4156668
7626F1BFE1935F44EE66993F690A4F40A9BAE49EA30CFB4EC5F4AF6EEEDFBF05
3EB6289CD231FB0F2775BE5212540F14F9FECA7D0779C81A9D5CD80587D7A12C
CEA64D708079138FE43119A3C863358EFE477F5206BFD21EEF76DF1F1D6A1124
08AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8676C2DD76048FBB9B8B867BEF
191661E65D79A249AA3FFCA55397E2CC27E11DCFA24B47253A03A99363DD7F86
D47360CAB18398026DBFA8A2A4B4C7D516C3D862466DCFF82529C7CE1504213E
BD9FDAE57CD482A24A540878E112CB53F9792361238817BA3548735C48CD4371
520763D6FD209A23F24B713F90024CC452D45123E022439DD1C79F8A66F62E5E
27255EFC2423976B8210EE7CCCF06B3FE91D12AE88814DDFAA3503BFA395BF97
B72A12C91CBBDB13FF3DE31109B39281A3A61CDEF69335A22D18434271D0E06D
33996EB0F75213EAE37902017E2A6BCE438DC248140FC06678F93166340A81F8
0599286293CA59BC259933A1CAFEE8B0CED8F31CEBE9B8214992F2A78A420AA4
45684F4A277165D1EE8BFE77A4056FFF15F540DAF3BE68EF36150358CDC54F88
72D881FD60ADF4DA19586F0FF2E48916DED3DD04F8D7BDE11F15D300A9968691
8E3F236FFF15C33FDF2A70B0FEAD4B367A90430046F8F328FD98B9C5F425F425
F362A913BCAB6762C97DADA07731BE3D50448B14F91217A4F6E5F707AB136CCD
CC397D5904EFD647AD58A250686C988DCD0D60AF90C8F743B36F01C6710BCC30
64B3896E28AE7389D260CF058C8C6AD163C0DF5E0BBE039E05E2833378762504
B1BFE55F731368F373A67893FEE2BCE051279788C2B84DEC2B9949EDF0284D98
93D32EC0B93813D97A5A5BE8273EF9BFE6410CEE3D00C4493AF9F83295BD8474
E4AF5A7A1EB68C7AAFD6A174B76EC9B4E80F6AAB458A36B2C37824D4C02333AB
0F9A9DDD4B765D10F4EED8DAA35F9880387B45785C2A6FED25180F4035419F93
9C705C3684DEFF82699C0F42B3D41AADEF9B662D57A9606856988E5FCA6F75FF
6986C15FD8853F68C1CB8FF0A11A29A194F787E3E726E23D8D36BA949D0D096D
862AB1F5A86D963A54BAEFD7F9B2583757C5BC68427BC374B0F39678715ED960
B829F82F3A7C8499C2AF930E0B2FC5A7BD59AC2B1170284FA71225B2BC80AC5A
EE4CC32F028980AA50C1E23A72F94F87EC7DA4FE0E0621D3DF75109410D2823A
6D1577CC0581241F048E86F717D7A2336D73BE562C85B3454E1234FB2936EBDD
120C25F5D21D6AAB4741F4873B570A741D84055713EDDC3716AAD2FBE34A7E71
0E0CED48A5B259BF541E735B13603DD4C937A63573CAA76D89855669FAC0686E
34BAB0DDEAD4670FB7C6D147F17C6B958254CAE64800556902C4AD926799835C
517EFA589455B7C075B51D6AC3F83CBCFB1B6E91C44719E420C919C6277647A6
3C74D86EFA1D7CCD2010FD6DB0DC9C5A0C16160168F6ECAE3925BB9317209E37
F0D615FDFACCCBB612308A6A8E854BCC2E53C0D1A0C107602B80FD0E86AC1399
E1549EBBB0A7298CD32219D28A03DD2CEE45112F6079ECDDEF69309EDA85DEE4
195C55455BC1F74E72341790C7D7539AF7FD11D9ECE4CB10303BCAADC846685F
254301A7A5EBA60ADFF38A98678C5E4FE02C951B474E8A28167199276330C1D9
BE93FD9E863241BAB16D3438343CA73C4397E0F057551C9914AC5CED1648CD4A
D694B191032B37C2743AD77908B0B77DA18AC90D5A796CCC0A8776C2F6D96D90
02F1D8386EB2733ACC08A043C950FD28C140B5FEC871482DB11084E021F41AE5
65E18587AEE74DA8108708C1B7903BDF610105CA3A2B95034D21730DBAD665A4
D654226B03E4DEFB70112BE7F4212FB8E2A9BA73876769BD3EBCAA2B6F925AC6
01D2358D2F60E741D6C3AC8C9C9429877A4FDB250372CF4005094B9F67493940
7820EFAC4D16FD02C19C536ABF17A956654AAA24BB133273697CD318EE0DD22A
798E66348FE702D99EC976863A409A22B2A1B061BD631FCF4C44224898CDDEAC
90ED022D7C663EE7E5552C76C8A4EDF7DEA04635279DAE2699F46725B5401901
C19322F122FBC787C9B2D95CD0A7D663523417DF9C6AB916A3E13042CA78F2DD
D02D8632B42602C9574C11295A73FE3649A98308BC5906C1DA356869FA6F8B17
45AD02A01894C458AB9007A524E4F3BEB89023D5E19A9D1C769735FB86586042
4EA7F5CD9AC218254644F4BA8AECF2933CFAD5F041561B6E99B217713DDAC9F6
A3D650579C2FC6D6C73ED842B33A93968A553317A3A65B4C4CD419C22A0535BE
BA631C1B78520E341F8D147A88D61C5990E609001B853B273DB144E56C64F6E4
BC4E3FB452F92DE7F4553BF893C52733A769C20B732AAB2589536FA3B43E9284
0BD29870227DA81ACFBA91FA58E49F57376C1D61036AF2A021FCB4165FF099E2
D5173413B3995A7DB9B4C56C828F8A8123723BB19C1FD74FD12D112FC2BB60E3
AB70FBFE96DD4F8C6045871AF6D7D5344233A142B25640DA0714A72E78561D26
48D5C9FB299244E7206F4406262F049E69436E3F4E4F21E1322C53EC350455A1
18F1A619D0F915CE2E135787095ACA9E34C4D129D8272BF483D6AB9D4C90CE23
089253F1471D419002CE2853EBF17B2BFAA43E6FA01E9502BCA8B6E796CAB5C2
BC92E5E75EABB424F4A76D7775162D04388915A627FB18F3A00A7C9BCDA908B9
826B6FA223FBE42E358D5A227E24AAA503465FE2F8371054525142EA6E8E4059
EC849B326E445CDA1CB5A9BA4C1D53A085DC2F8941025CF0A9567304F7220BD4
20CFF3B68095D869F594FD243E1FAE698D1F0F48699A2274C2FA0114E142484C
C9B8666D2EACE315A206FA71313511ED52F5ACE825EB8B0D07856FD1A62A9DAC
5314E2889642A90D429514EA2A9CD91560B291A50D75B7C803078A97DFDF53EB
3D5F54DA25ECA9329513ECA625CC1C5FC3AFB291A6B75A59326A0DF3AF3420D9
4859E53AEFC9D1DD75BF4A02A4EF592B6CB588E62804DA4A39C1EA340E6E55C2
3FC87A3D8B6E89C99A848AAAF1BD143560B559176CAF28BBC013A29DE6B7B84A
F75B80C7685B16F3F33A59C2A49FFF8E3B0CE768240F0E8CE9FF939E4B1A6365
66422E8B5673C1B4B0F44B1F08930ACC46A54A7D53A67F139F8A8EC00C8BD6EB
20AB66BC1FABC48E4ABE10DBF2F88D9725FCEA44A75FEA44CE4C991729C5792E
1F48ACCEE49E15DCFC537A774E8F036EA3BD1FB35B49AC03B02978574DDEAEB6
50F4AAB904D4645BF52AAA7CC267E0D478FDAADC38FDE58C8251C5D0FAF6B631
9C2E8169F93C1362FD1CA679E9372DD0CC0E22DE1ADB91D0CF9CB9086D116D56
152BCE329695FE8A8301263A563F05010888D8AD09FDD0EF576A9BB05860A2D5
C37680C27310CD065D11C45046EC33B07469F871F038836FD8D85DBA9094E105
CA0C6CF6C122C2ECBB711ACB05A14F2ABACB90A87376E5CD9F595A712C05C5AD
E464A27674D17659F0393B34E72C6CCA547845A2378726C4D21140028BDB77F8
E5DEC601FB46687480ABE94FC10E08E74B9EF99F6DFA38BE2AB67A2E8EFE9CB0
4860CC7CD07E19ABD3D670D728FF309E1ABBDD8EAC44147B1C4EC5B69AB30060
3DE208C51DBA95472807F69B0FBABA001A4C6678E3EAB438AE4B9A354A26C52E
AD47E736EE4ED2A73BC551E1C312D6188D585FFA65F1B9EC81442B2266D827F8
B1AD7AFDCAF519B4CF9F2C38886DB3187F017A7AE4AB7C0425A51A1AD668CC57
1AE16D327D5201D312860A6B2A00A885E1179E5D7D63E5A2950ED9ADA8C30240
1F057F579C8A4DD8D901A5B598D721639E2A82FC86698D23DFE46FF64199038C
006B74DD8D060CE5FE0B0EA9CEC078DCE94BD5D79CF87BF6B5507788FE2EDAD5
60139DE949345F7E6EB57D0509899339EBA4C997B124C1AB303E4C842B56E50D
5664C371889F0CCE7876B8D0B4C14C22C8DFD7B7C0971F32367FE3F3FFFD4F46
FEC30DC7CE5E46990ACCAB4CD9985880E59EAA23F14E5FA2392A721B59AEA35E
DB7BEDC750AFC6712A7C8D24C0DFEC96D83450947E53443B41ACD2C3388B3FC8
8BC2E1A043811D01AB475AD8FF6F8B61ADF627C4248691D5B8848F53054EDA6F
7B2ADAD496EEA596F7895019B4428C901AC43759FB850DB7C0969B05669DC240
E5DD1E46D420697A7216D3A85D7764EBB311661BEA0C37BAAC3CAD6150DD1037
E3104928DB44A0D8B9A6B7CD6B49BF587C4A2F273D026977DD95E3402F03C3CD
A72E20E712CE9EE22EF655E13D390872C20F6105DB0A26445F3A7E457AE75F0C
17FC7C0E648781A0AA0967BC1534374BE32D77B459D752EE2A8B7BD9FBF2893B
33B4E3034A9A9BA0B17E77F809C09B90B756E5F71547170DC763C733EF654E46
5931BD4C8AA9E79E5426AFE99FAD95905AA954F837C54D8625DD905AE30ABB6A
BE7F0211D19039BB4DBC0C0DE6D52D85015DABEBA52DFD6C525A3B0623E23EEA
A26299EB771D4349F8035E51371E491EF8BA1E6EAE926F436C0800A832B20378
D221A48DFF573DC1FFD3D1EF05061D80B5E3C87AC8A76D16591A345EF922BE9A
E47BAF81C8F356470C31B4F54AA5E59A52446118D146975993E68DA3E1EC6FD3
66D97EB4423CCC2E1853473BB9B7B07B3AD15D09615E225407051491FB3A7896
2C23E8072F7B2786A7DA4D8BA84D529722092660067EDD5133115C9774D28074
52E407EDC7F18152F0C9D3A2B5C4D94B5A2BCEB8AB14CA27BFE9E7F0C22B9C02
C7B4DC659BB5D2C36EABC26079DB52184C3DB7C51B407D44468B5D7B2777B461
11F1293E86EE719C9B311F1B101D4BAD254406B9982EDC37BF3AD3C22193B874
97B958399A343E7F92564A59E376E840952FBE0C6E21BC5D19BD7615BA6EF354
48AB7BF5D981498A101F1B60AF4EC56C83D6EE239D4B81B366053EC4BC677AF0
7B56A1D41C54AF54FF51351557385916B89282255057A4BD4A3AD5297DFCA76E
882D111EEAD0C3CC85C3857FFF98ACABECFF43B9EA999611BB127FC8E7B28B2F
EDE114AFAE4C5E3ECD952E3ACE3E8EF2954A2F9F19A0E6A02DF2B5A7E94C815F
A03CAF7E4F4B7596DB159D3B86A41FE449779315AA601C68BE00648DE5B033B2
6782D602AD10C3269D799DC2732040F1A77F70E79DB877A5B3EE0EBAE8E56523
78AA6CA84F0A02D1BB94956368C9556F3F88B809C282A76AD6F3347B27755DE0
4ADD599580229DFEA4CF5511833115BBD23D8863713D0D7AFC2F97E36F3B4EDE
AB41F96B40BA17195C8530C3E1E74746512D39DBE0067086733D37B07BE6BC57
76E7F48FCD60108DF6746CE916B02B0EEB0388E73526720F025F108CECEEEAF2
7226BE5516B808F53B0616DC18CDD6F3DD9C70A8BEBF5F193D86319607C6199F
5B9F7901DA2B0F7F5E84C46AF67F7A5232C0057C9007EE185EECFEF0BC79BB4E
7E5390A91F15F98D99E6A83BFE4E1C1D6C46BC5B53E1B9BDC776BF34F502C28A
6CD22A682419045EC60A8358D48D0A768B6BC3DB2BB04B722CB0A11F3967BF2C
A71AB9188936090F68E103B62CF71D52FB4AF0378DEE3F542D813C360E9E1A2B
B73B11B6F64C70933E25EF3F86F33011FB3389DD94496823885793E361651614
384D7F83AD4E6E3AF82E78054460498E4DD04FA578495E60A6438DA32127C28A
CC952428565FA1A7B9E615FF562243A1DF21916C1735A1F7758D0E48A4AF82E9
EBED6F9C849BB871875FD1FFB069FA9BA4608A36796CF2DCB4F9D8C2039DCE29
1EF45A6328D23416F10A05A2111B8927241A4E1F7E253CE14906F3B96DFCCB0A
063AD339E30EFE0A28F92CD5A19A75988A8041A4BDE052606C84012B79A9418A
3647841B8969777C3C88C96916978163EFC15F79D3C45EB5F8353C55A5FE5BCF
E16F81B259E17B231F80A434F30A29E7CA7AE699D0E5085DA46C33F6AF25F2D7
13FD0563BE0EB2B36DD94D1FAB63AB6E056C553F906E74846306E52E324E00D3
00A78B984ADD80D8B8808F0F3C2F56C6D7B86A1EF2651D54A62141A817B36F66
D278DCD15B4C783C1A33DBB537E0E982897579E05493762A7A83FD2F1415C012
F74E253D45C14DFEE42F89C86A8C6A322C7FB4E132582BFB1566DDCCBD1F58BF
948295A50384F37D44F4096D79F6080E3DE48A4F0AB453E5046A37CDCD838850
D0BD3BCCAB01017F06A4346DCF43C58316BBB5BAAC3F6E08F28D81AF1F64A14F
AA7DFCBDE63E5D3EECCDBC99204AA6AD138360F050E5BA7BB51CBBCBB705C237
20226E582EFF3AD00A0DDA6E75AF8CEAE50D32464F2AC86359A27EC9B18F3A76
85F73B4EEC2651C526EA98778FC21C2F4C497655491909591E512FB0C369D155
AB51E1D9492F409CB9723109BFF8AB50A482C2CD1B95C904F5AF081AD95A1BEB
0DBA4E3DB7B5B8C553204508619FD285485D0BCF4472FAA7AEC369CC76E20025
41E03B2451EF3870F3FFFAB92B03632E01DE0D5C3DA9A5D2EEF44E2F0B7197D0
57CB47582317147F1A687A403EE195441C0322F3CC37BF269241C0DA67E5BEC0
40A958B14BB3D7821510CDB592081CC71C6BAD6E8C7A2D807CD06926013E4242
1585C0A9DBDBE0AB9794B39616962B91597B33E3641BE8FE47BBCF8D47431FCB
1A1B0FBCB856474C1D329F241C94CF6EC2ED805E61B566B84C71FF12237BD106
74AB6CCD4C799480EF309F5DC5F12940594B7DC7F9CA97C95313D9A326327E03
F7EA237AA1625BE96300BC0E96C24A473DF73B4F903EE544DA33C45CF140EF8B
411B02EE10CE3FE132472DDC781E0813357773786FF3A19B5DB13190BDFCE9AD
171B79BFF7BACA7207A8E469C59B288F11C4B5E92735B8A7D7C3A366F0D04E32
2CC25BECFCEA238B4E1F92BC16E623DA0457B40BA6EEA726EBA19DA2EDD04A83
07DF1B6A4B5A1CECF5AE2FE329B646F5582F4DB918AA5E62E5A350CAA9676113
E3562C1BC6F685A11405B0873D4E96BD75FA245D52B352014576858A26239679
F33FD8087CEBD997DCD0AD7D91800A10C2C4EB53582CC41BE34DECB42B8BE625
2F3B9C17C2A4695BA1B32FB37B2A134C3620BD6114B3A856AED778A118A680C3
EEB870D342398CA958617215652544EF6383E6725725683323216FA32AD390A3
CCBF617F25FEA40C627BDF10032B5442DC61E235A20EAEA0D0E19D22D66A4FB6
4617BF254FA1522DA2EAADFCCD14DD61AA40404BFD6BD739FEB4B951EEF8BB47
8549CA38964428AB3C9A630B8EA5842454F022B2C1289E66AFD134A189FA44CF
EE3AD65B4D725C42975E68E4CD33BA231E9FE7859DFB593102590F00068A38D2
3C8C7C6802FB318B5FB6380256F0A419EB919413EBC925011A317071CFBBF980
085DCEB051E53D6B99C0256A4C3792CB3310A7C7673E30B4483EAD74128F1AEF
115099640DC03A559B95193445E4E4F719F49CDBF85BB4520B3D1C3201062B9A
2FDF5DB72D720A37C5D060EFF6958A43C81F7267EA25EB64795AE2954FF41A20
22AC83BE890E8FC5CFDDE4F9B48568A1F2675F794BCEC6361673853B40FF2D42
5FAD94B834074C25D0FD73C9AC4437AE94EA563F9CB6C43FE96580EA512F9097
599AAD4EE55393019EEE61EF4B3796F6F20F5347BB6F0D74C8BA15DB4002E194
1504FE6D3AA62C4F5A179E936B007A5B0E360136BA4C9CD37FB26769ADA21026
6090CC61CEF424A54E62107D2ADA1C19405B9CB4C13CD22116889221A826EC20
AC4384A8CFF8CECF07A593921F67C50DA54B5B97820B88A18B6F5E9C82246C7F
9AD1935CB69A5A2AA3AE147AEBDDBAEC2278DEF6B3A25646408B1FFD3230CB86
CC47C82291767018909002301CF10E2566D3586E219C55EC4EA46E42986A204F
0B48F7E44AC04ED9FC46A680DE6AD3D0BBF5EF644A3A2A34D12784C8265FA634
F542804658D30A5BDE1F29C1EF9022B1FE441533543693B08E585F25B7A66FF8
5EB86075607DCD7651007626E9D2EFFD007A8E985FEC263E6C90B803B63D130A
372615FC146FDC42E30ACDEADBC6A675A2D87DF5D96EDC72B7B9B4BCC12F4209
B1951AF23FF686F1FC44433646464B14AD779F841DBEE0DFE07848BB39C28C73
0DE39B00D7F8837386F411D43436184B2C55A334042E14145FBA3E66F5BBB20D
E0CA382A28B90AA37AF8CE24FE63A6960D7A4B69673538755F135C333B87D339
E8C580C44EC9A7A30B62EC8CAB1C44FF9287F2F4E623565955106A2FFAFEC1FE
E8401D3D7510A603C11F10C71B0B547B7C363BD515F353CF1E33F6EC39837B20
4FDD6937F45C869DD22CA78BE54DCF5364857EA20DB515C86F99D9F39C0C4E36
8DA07DAB38EA66E305A8046E2428CAFCE7E6EB689A0B182A369CF06A6E34DF08
4EBBB3DAF7B5D21F6CFD57C2307885B4B88F3D8CE2F5A68FDC19A564D2F5B924
69B9DD823DD68C5C8F24ACF262A36A8205C68AA0B892E2BDF3F609B350BB5369
DCCC0739E563C6E1FE10E8C70497C9BBD40780F65DF7035403CA0F72E4CBC217
33BDE36173040E1AE9E09BE98DA43549127E31A4D9C996E3FC25A671D75F43C6
AAB7520FD896CEAA4303C754CDB848EC5FEA68702B37475078B1996A96CD87EC
14D634DE5869D5E3F9E03738F1CF843107B67CC7F6C981A5F92E653AAF9CC951
A3385396491BE6C582C7FA09872A69B4F472B079D57D905123FC2324DA12CB97
D7C9EE17F8B1C1124DC9B2B6C25A3BEC76C53037F66957159A569F64874BF688
99ABA96ECD0A5A2CA10F4BD0385F4B6F58345BF970811A77AFC0858B0891E10C
66EF859E5866B19808EBF05438BFFE1247D12B80B6A14D2E4803A47DDC45AB81
94BE9FC82F69A41721C04A609CE77F624BF3C8CAF224558BD0C63844B72D0B77
98D38091A3CEDBE91B068D1E432A2C5BD724EAF39BDC40B3CE28A9BFF70E85FB
E7E7CFB5E76C77A51343E5403003C28CF53047A07DC8A48FD12C2F3A28DC2D80
36D8F84AA6C643DB5351F70F30E7F138E988DEDEE5B9B0965C52B191AE01721D
88A03BF5FAA2C6D0F9B46C0E793DADEE301792A7EF4CE1047C153C87C51E845A
AB02B7FB07FD785518D695E1B816FEC3D358A9A791F01AA014C05AC133EB07E2
7FBE8323FA2FFF9F864BD99F608F2C8A5A6AF3CF47CA99ED30F4CDD5C08077E0
1644CD4C3FFCF1E23BABF322E115CB79657D91D6706FDD2051BEA644871B11BE
44463195D56642A713F9F3E63CF74052A3424F1B7995A97253C8F822C11204E3
40652B38E1E00967BB5EDC8B761635A25AB894750A1AB42A3E853CF83CEDE843
6846C7B54B31A4FAD0CE1D74B32F7BA00770B3B2BC5AE5ED8E320805352B76AF
A193266F540642EBA7AFBEC1642E9E50448D5EADC369B18AA8EB4E84870290E8
B25282E4539B4301B03EADCF20926FE7ECEAB7A0AD94E733479FAF8BDA091603
5765C0A1BCCCB61E98BF09F7F88ED011F8C5B56B799139DC0E13DDC6876B91B9
7D32FACAE65F7C86DC01CB4CD07C035AD25EACC9AE031CE1F359EAFDBC4DD8ED
2FA8C29E58361EC07D30AF91FC49A53A3812D7DBF4EDBEDF5BE61A30FA1FEB53
454F4B46F7C66653F042AC1F598A5843D1CA48307B42931726D5F66FAFCF4EF1
7304295D4EE0A7EF420DC4DEEBBC479F613CE7BAC183F779A2C0B3DFBB2074E4
6D5CE7AAF27F20047C12271FD1045B41CB42EDDBA6372F097B8C15F10ACC2AA4
646AA70225AEE6FACF2948A7C4CEB41D8964D4FC29175ECABE854D416BAF857B
8B17C6E757783E4C14F6F3AF3180DAF4C938976042B03213FC36C3408CD5F4A3
813CE3349E7E42F2D901698F29691F0883F5E00D201FBF4C6B3463681D42136E
51AF1ED496CD2F04EAFCFE876CCF9764D3AF574454E9B5D17FE56B0A26124607
7FE2994292CE6285E53A4FEB95A0B6F592F57DD9173B9F2BD6C4C9C2B9F448CE
E80070A398388BC6E94EB2CC2729DB99516CC3D3CF54050FA6D14C030203AA12
B8ACFB121A535016C05CE1A06E957827E12CCB69430672E0AAE0373B09505F85
47EFA74D913528DE77219DAFD0E416EE5658F1ED7C47239A7BDD08D838270D7D
4C186CC68526D6CE0EFCEB51C3C6A33E088CCFA4230189B44CE4A49025910A8E
19BBB2006D6D6CAB0A90A689A7D45B212AB18551B003426C91519315DAEA82AE
DDF8327A316832E8314946B9724F75FE701288B835FDB7C9EA3069B51A36C84C
99EFB8214BFB3F4B511B9F42595275D08DA346530401FE4EBF37B1FEDF8AE178
F6213F8C286BAEA36C6A503A83C579746C5BF26FCAC4DE546D1F68BB451C7C03
536BB86B709EC7218311A950789C939C286974884521AB82832C0F9BDCE0AABC
09D1B6E256C26CF88AF0A026B6AAB502E84AB08C5C746D6F832D2348E3069139
B41454B7A5BBC34E4DB566339F048A10CAF3C42F24D44CCEE10D9BA4149F9360
5BA3D6E4241334A8507D00EF0A60ADCCFC3C71429CC1F4B7278DC6E7E3085EEE
3AB10339AB902F4C625866EC32C797B8B1C84BFF6653009B1E291DD3FE2BE682
D0DC109441A6F5F1044BB88E0D4FA370EF8A045FCEE4AACEF18A24367D6CE86F
A5BFA9EDA6E34CD6543B1F646ECF9B4079C80C44F8C59B1AA5C239F01DCC5594
0A982D427FB2B63839AFEB0312058CD7EC2C362D1C537ABA73DB73373C3843AC
96117ED18FFB55CA382239436A46A207F1487B89C537D9D8FB3B493BEE119EB1
F7629EA142FFCDFE89FA6DC0C45DB3C7282D0A91F760899E9BF794775C9940A4
2D1D24FA359F7FC22FDEE9AA28320C37480815E585B50A50A8AA06169F5EADFF
70FBF1B641E8B204F3CE845383C4815701ADDA8C57F95E8028E1D1DF16D6654B
35AA75E6748613067C7BAD7C98F5F3C37F017F1C6EBE98244079E0C1BBE42D4E
A733CA80E6B5428B21D0C966E903B31982DEC031102899F2CF4A14D82145BDFB
0610281FF49906EEE1795DECCE08CFE9ACF52B3212E0C4F35021EE0993ABD049
24B68D342D7D25AA2C50E9AC470996ED720C814C53541DF8B471C3C18A23DF0B
0B84B7EF4FC4F9CE76181A948AED880675A4B9F14B57DF89B713A6A059FEE482
13F41AD5994C0F793BE081BCFA817C602CB45CE6995D1226B6DE30BE9E7E1A6B
E80580BFE3E1B11723DC20D7F94E3F5AE753DDECDF66A9DC9CE30C93C9C5C7AC
C02E7F5FD51C8CBE8256C1B6E393872EA12320869613B9BAFE02900BE9F98612
734F0B6A369572976998904F052A50EF8441769C41DE2DB1C5A2353721C81F20
945683C8DC8A4BA94579E594DDE2FFEEC1C5788C7087B4BA4623695FD8DB8B76
20D692BC21CAF769B61B6D5F1CCF350E39ABE7EFCF6812EA18CC144191EDEBBF
A7B62C055C9EDE205B43C32EEDBBA6F054BEC4362C3466C15C1DF28A71B3D3A1
0CAA0E0ACC977AB3EDB11EC8C99652A7482892391143BE88C709DE87ED83ED20
948F444EFCEC8912DD403187792267FF555B1120324DC10AD7661D787E47D4CD
63431BB162A52A16E63761B71E1B1ADB7FC6E96E974BBB71F314DCA4C72F7D7E
08BF948CA8D29DA6079AA07EB96D90703551FD949A9DA487B74962C80C190F56
73C42C8466A9542F01C041A0E29BAC57031DE4E1329379E2364605AEC54D0F70
5C62A245324239363919B474AE0A92A80E416E58DB80AE746B4977AD0A6653F4
3B2F09F41F793D6C4840A2B9B09F0064A5AE7B09B82C593F493202987D40C663
99B39FD5BFE6C2E08D9C1C1ADD745B02A7F4F977B383CBF3A882C3E5FF0BD76D
A5B325B8212DE30B477999BEE14E66A62573ADD9FB0615467BB55D55261B6049
8D90A4D6AAA503589F587048C80AED57E590563271DE58FA74ADF8DB0B8DEF62
7070E8FEF90387D76B87B75327F8CD56EA5CA427207E8147A98740CF869F43E8
EF4F653BA7DDB931B5368C099B59A711E99FBFA974318E49412CC0BA68D21512
36B6CBEE43B653E5627C3DD612DAD9059A3D7F99C5130A84B93D8980AB3CA20B
AA4A9C8B8C6CDD80C38A9E3B1FA85435F5DC1A5ACAD0E7F71184FC51B0C803C9
F9C06B1E5A9AB5FD2878A3DA5D98E355628EF75F0D1BD632ECBC4E0CE3AE36C6
1B991C7DA7A3A36E614514D8223031FE4A0F8CBE98BD39F46E739D024E843BA3
2E0879C58516AC146EF73F9A840B062FA2E4B46F00600B9BE11FBAEDEFC7F325
D1A1AE2B4BB54A97B7CDE5FFC4777190F094CCAB8554490D81FA58ABD115278C
BC1851A8F6B196F9D9AACE101CD99D728510A7D19CDE6690E56DF8086B2D382F
1386A15CEBD69EE97729A3FF8DD905E495C709DDDBFE108078395F7F08296C53
80A8D61E4BC2FF9030D4906E099229821F095E86EC545B249F6BAFAFD0F04943
A1EE2AFA8811A63D2F939F64D5C73F6178D8590FC7F53DC746FDDEC1EA3ABE55
590F9DF970F709F3283DF440B661C5FE7745F2217EE930B17BED5F966DA5F78D
8BCFEDAD3D2CC7E1CA775248D4CD98796E9118A61EB7F9D552E3A407DD5225DA
D211F5C78962EE06921DF094A2A832297A05D9F1719825C0DE400D76A87FF3FA
108FD479F60A1E654BB3018EC0BE332F698A96BF87AF3C3C05A532DA3A18CBD1
F8C7637797AFD726A02B5BB738824C544638FE7965FF8AD851FE3ACF11E2C0C6
6C737658B5ABAB2F96F335B8BA1347153DADDE3C7DF20A17C3D8F80762C71E87
5DB926F786F08D8838B87715E773D41EF554621FA6B22F97C6E96342E35542C2
6B2255EF4F613F57370A3B2CC77EEE172308CCA274691B0B9207460A45EF7707
45E90E85386B5D7FEEFA44F718B4CE7AD137CC910B7ED0E993DEE8EFE8249796
D3B86C7141878F2CF09AC5CDE96057978CD0158419742AAAC709D53B7FF2941A
B0B7C54080394843618A22B7532EAC4326AFCC7D8BA8BAA39618C3CA595EF433
894F90358D4ABAF5792E1ECE13745BD83FD87E69D7D9BE667ECDE4804ADB4789
7B28BB3C1A517EC388DD3A72F41A4F147859A790C501E55951C6EE8EAF5F5353
B9408ABC9A484352D3F9C2072CC24F58E68D6381587E7D9339BB06E5FAE4900E
71656622764F35CD92BA9BDFBFE3B71B65C421FD089846FAF660C3EE0D3E09C2
40B2E9C9A67BB53CC264F661D5C9C26CD56D6FCE3779C173F6B629D6A3F7C12D
1A8C1E2BC3721EB127C9E6E27C70B08EA51D63E455C9CECEA95AB909717902B5
060654DD42D5E1C5A6E1BAF99904E93A72BFBB166F7DF5C05A0A2DB3BBE0D9BE
13F0B0EDD1AC2BADA45050BFE134885644480023D1879316236284A571A5A3AE
833FA818EF50C3156729C45CB54C767DCC9883714E0F0B131284654657B9FF5B
E343C3C113F254B10DBB63CD7272701FFA6ADAA70717DC0709D4401FDCF70EF2
D8F12E3C46EFB9C24B92D1E51D82C318959FB7EF1328A4D289A159920CEA4FA2
349222F46289470BFA940CE39264CF35C8E4078110C7B341E9737EA481A1D4B2
49CEDAC4F913181311ACB0C3314A042EA4C9FE0FED3864EE1E4F067A167D9E0F
C8EBA8E6EA7114FDC7E8D532D803EB9E0B0C4B59A9809FF40B933D3BF3063ECC
75CC2C5D1A5864B28CA99786D0B9CF3F9A807C0CF1480AFE7BA4CCE9CC63573E
8D2CCD4E4C1AE8C88379E352496AD671C76990480899244BF27C35C240B86264
1A3E1978D41A717E3949B5110D10286B6B3901BDB6AD2EB3EE28C2B0140F3272
3D6E0709F7982B98B39F1E9BAA720F9B1726F59C179C54725552297951DF2DAF
49734121E2A196317E7C8B5D150CB3584CB2DD39C380BDC2323DE63D5637ED71
0A11E5BC4D125B5CDF9B50628A39EDFA3903B7EB31DC9A1B27B5ADD8DC0BCE62
84142CF4D1980E55885F52843B10CF963C10546A340F836D6037427C26AD48B7
297D54441D6A5656BFE1F5727483852779A8853618803733E8711A72919ADF
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 27303893 19181974 1000 600 600
(C:\Users\syjintw\.matplotlib\tex.cache\cf\dc\cfdc9f2f514db84d961a5f8bc5a1edf9.dvi)
@start /Fa 138[75 2[50 3[75 2[75 1[42 5[66 1[66 12[91
1[100 1[83 5[58 5[108 68[{ TeXBase1Encoding ReEncodeFont }12
149.44 /NimbusRomNo9L-Regu rf /Fb 133[85 3[95 2[74 64
1[95 95 95 149 53 2[53 1[95 1[85 2[95 14[106 6[117 8[127
9[95 95 95 95 95 95 1[95 1[95 6[64 64 40[{
 TeXBase1Encoding ReEncodeFont }26 190.951 /NimbusRomNo9L-Regu
rf /Fd 139[23 32 28 1[42 1[42 65 23 4[42 28 37 1[37 1[37
13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }14 83.022
/NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1833 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1833 a -600 1833 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 90.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]](psmarker13)[[13(bl)1
0.000000]]14 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1833 a @beginspecial 0 @llx 0
@lly 416 @urx 292 @ury 4160 @rwi @clip @setspecial
%%BeginDocument: C:/Users/syjintw/AppData/Local/Temp/tmpko0vsfl2/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: compression_size_scene.eps
%%Creator: Matplotlib v3.7.1, https://matplotlib.org/
%%CreationDate: Sun Jan 28 15:23:34 2024
%%BoundingBox: 0 0 416 292
%%HiResBoundingBox: 0.000000 0.000000 415.067337 291.600219
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
415.067 291.6 0 0 clipbox
gsave
0 0 m
415.067337 0 l
415.067337 291.600219 l
0 291.600219 l
0 0 l
cl
grestore
gsave
73.067337 59.192457 m
407.867337 59.192457 l
407.867337 276.632457 l
73.067337 276.632457 l
cl
1.000 setgray
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
139.013 59.1925 o
grestore
gsave
133.284 36.657 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
240.467 59.1925 o
grestore
gsave
234.739 36.497 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
341.922 59.1925 o
grestore
gsave
336.193 36.497 moveto
(psmarker2)
show
grestore
gsave
151.504 7.2 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
73.0673 59.1925 o
grestore
gsave
31.696 51.264 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
73.0673 113.552 o
grestore
gsave
31.696 105.624 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
73.0673 167.912 o
grestore
gsave
31.696 159.984 moveto
(psmarker6)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
73.0673 222.272 o
grestore
gsave
31.696 214.344 moveto
(psmarker7)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
73.0673 276.632 o
grestore
gsave
31.696 268.704 moveto
(psmarker8)
show
grestore
gsave
22.736 115.543 moveto
(psmarker9)
show
grestore
4.000 setlinewidth
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 265.542709 m
189.740064 260.831524 l
291.19461 260.831524 l
392.649155 260.831524 l
stroke
grestore
0.750 setlinewidth
0 setlinecap
1.000 setgray
gsave
334.8 217.44 73.067 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 -4.5 m
1.193414 -4.5 2.338109 -4.025852 3.181981 -3.181981 c
4.025852 -2.338109 4.5 -1.193414 4.5 0 c
4.5 1.193414 4.025852 2.338109 3.181981 3.181981 c
2.338109 4.025852 1.193414 4.5 0 4.5 c
-1.193414 4.5 -2.338109 4.025852 -3.181981 3.181981 c
-4.025852 2.338109 -4.5 1.193414 -4.5 0 c
-4.5 -1.193414 -4.025852 -2.338109 -3.181981 -3.181981 c
-2.338109 -4.025852 -1.193414 -4.5 0 -4.5 c
cl

gsave
0.298 0.447 0.690 setrgbcolor
fill
grestore
stroke
grestore
} bind def
88.2855 265.543 o
189.74 260.832 o
291.195 260.832 o
392.649 260.832 o
grestore
1.500 setlinewidth
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 265.542709 m
88.285519 265.542709 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
189.740064 260.831524 m
189.740064 260.831524 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
291.19461 260.831524 m
291.19461 260.831524 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
392.649155 260.831524 m
392.649155 260.831524 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[16 6] 0 setdash
0.867 0.518 0.322 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 215.274416 m
189.740064 212.366865 l
291.19461 212.366865 l
392.649155 212.366865 l
stroke
grestore
0.750 setlinewidth
2 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 73.067 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
2 setlinejoin

0 setlinecap

0 9 m
-2.020626 2.781153 l
-8.559509 2.781153 l
-3.269441 -1.062306 l
-5.290067 -7.281153 l
-0 -3.437694 l
5.290067 -7.281153 l
3.269441 -1.062306 l
8.559509 2.781153 l
2.020626 2.781153 l
cl

gsave
0.867 0.518 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
88.2855 215.274 o
189.74 212.367 o
291.195 212.367 o
392.649 212.367 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.867 0.518 0.322 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 215.274416 m
88.285519 215.274416 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
189.740064 212.366865 m
189.740064 212.366865 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
291.19461 212.366865 m
291.19461 212.366865 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
392.649155 212.366865 m
392.649155 212.366865 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[4 4] 0 setdash
0.333 0.659 0.408 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 226.319831 m
189.740064 220.791216 l
291.19461 220.791216 l
392.649155 220.791216 l
stroke
grestore
0.750 setlinewidth
0 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 73.067 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
0 setlinejoin

0 setlinecap

0 9 m
-9 -9 l
9 -9 l
cl

gsave
0.333 0.659 0.408 setrgbcolor
fill
grestore
stroke
grestore
} bind def
88.2855 226.32 o
189.74 220.791 o
291.195 220.791 o
392.649 220.791 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.333 0.659 0.408 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 226.319831 m
88.285519 226.319831 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
189.740064 220.791216 m
189.740064 220.791216 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
291.19461 220.791216 m
291.19461 220.791216 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
392.649155 220.791216 m
392.649155 220.791216 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[12 5 6 5] 0 setdash
0.769 0.306 0.322 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 155.997726 m
189.740064 150.504426 l
291.19461 150.504426 l
392.649155 150.504426 l
stroke
grestore
0.750 setlinewidth
0 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 73.067 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
0 setlinejoin

0 setlinecap

0 -12.727922 m
12.727922 0 l
0 12.727922 l
-12.727922 0 l
cl

gsave
0.769 0.306 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
88.2855 155.998 o
189.74 150.504 o
291.195 150.504 o
392.649 150.504 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.769 0.306 0.322 setrgbcolor
gsave
334.8 217.44 73.067 59.192 clipbox
88.285519 155.997726 m
88.285519 155.997726 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
189.740064 150.504426 m
189.740064 150.504426 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
291.19461 150.504426 m
291.19461 150.504426 l
stroke
grestore
gsave
334.8 217.44 73.067 59.192 clipbox
392.649155 150.504426 m
392.649155 150.504426 l
stroke
grestore
0.800 setlinewidth
0 setlinejoin
0.000 setgray
gsave
73.067337 59.192457 m
73.067337 276.632457 l
stroke
grestore
gsave
407.867337 59.192457 m
407.867337 276.632457 l
stroke
grestore
gsave
73.067337 59.192457 m
407.867337 59.192457 l
stroke
grestore
gsave
73.067337 276.632457 m
407.867337 276.632457 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
187.140245 68.192457 m
395.267337 68.192457 l
397.667337 68.192457 398.867337 69.392457 398.867337 71.792457 c
398.867337 120.957041 l
398.867337 123.357041 397.667337 124.557041 395.267337 124.557041 c
187.140245 124.557041 l
184.740245 124.557041 183.540245 123.357041 183.540245 120.957041 c
183.540245 71.792457 l
183.540245 69.392457 184.740245 68.192457 187.140245 68.192457 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
190.740245 111.057041 m
208.740245 111.057041 l
226.740245 111.057041 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -3 m
0.795609 -3 1.55874 -2.683901 2.12132 -2.12132 c
2.683901 -1.55874 3 -0.795609 3 0 c
3 0.795609 2.683901 1.55874 2.12132 2.12132 c
1.55874 2.683901 0.795609 3 0 3 c
-0.795609 3 -1.55874 2.683901 -2.12132 2.12132 c
-2.683901 1.55874 -3 0.795609 -3 0 c
-3 -0.795609 -2.683901 -1.55874 -2.12132 -2.12132 c
-1.55874 -2.683901 -0.795609 -3 0 -3 c
cl

gsave
0.298 0.447 0.690 setrgbcolor
fill
grestore
stroke
grestore
} bind def
208.74 111.057 o
grestore
gsave
241.14 104.632 moveto
(psmarker10)
show
grestore
1.500 setlinewidth
[6 2.25] 0 setdash
0.867 0.518 0.322 setrgbcolor
gsave
190.740245 85.574749 m
208.740245 85.574749 l
226.740245 85.574749 l
stroke
grestore
1.000 setlinewidth
2 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 6 m
-1.347084 1.854102 l
-5.706339 1.854102 l
-2.179628 -0.708204 l
-3.526712 -4.854102 l
-0 -2.291796 l
3.526712 -4.854102 l
2.179628 -0.708204 l
5.706339 1.854102 l
1.347084 1.854102 l
cl

gsave
0.867 0.518 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
208.74 85.5747 o
grestore
gsave
241.14 79.275 moveto
(psmarker11)
show
grestore
1.500 setlinewidth
1 setlinejoin
[1.5 1.5] 0 setdash
0.333 0.659 0.408 setrgbcolor
gsave
299.07175 111.057041 m
317.07175 111.057041 l
335.07175 111.057041 l
stroke
grestore
1.000 setlinewidth
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 6 m
-6 -6 l
6 -6 l
cl

gsave
0.333 0.659 0.408 setrgbcolor
fill
grestore
stroke
grestore
} bind def
317.072 111.057 o
grestore
gsave
349.472 104.632 moveto
(psmarker12)
show
grestore
1.500 setlinewidth
1 setlinejoin
[4.5 1.875 2.25 1.875] 0 setdash
0.769 0.306 0.322 setrgbcolor
gsave
299.07175 85.574749 m
317.07175 85.574749 l
335.07175 85.574749 l
stroke
grestore
1.000 setlinewidth
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -8.485281 m
8.485281 0 l
0 8.485281 l
-8.485281 0 l
cl

gsave
0.769 0.306 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
317.072 85.5747 o
grestore
gsave
349.472 79.149 moveto
(psmarker13)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 1833 a
 /End PSfrag
 -600 1833 a -600 -181 a
 /Hide PSfrag
 -600
-181 a -1285 -124 a Fd(PSfrag)20 b(replacements)p -1285
-93 685 4 v -600 -90 a
 /Unhide PSfrag
 -600 -90 a -695 46 a
  {
 -695 46 a
Black 0.000 0.000 0.000 TeXcolorrgb Fb(4)p Black Black
-695 46 a
  } 0/Place PSfrag
 -695 46 a -695 188 a
  {
 -695 188 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fb(6)p Black Black -695 188 a
  } 1/Place PSfrag
 -695 188
a -695 327 a
  {
 -695 327 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(8)p Black Black -695 327 a
  } 2/Place PSfrag
 -695 327 a -2083 507
a
  {
 -2083 507 a Black 0.000 0.000 0.000 TeXcolorrgb -41
x Fb(Compression)50 b(Le)-5 b(v)m(el)p Black Black -2083
507 a
  } 3/Place PSfrag
 -2083 507 a -886 646 a
  {
 -886 646 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fb(800)p Black Black -886 646 a
  } 4/Place PSfrag
 -886
646 a -886 788 a
  {
 -886 788 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(825)p Black Black -886 788 a
  } 5/Place PSfrag
 -886 788 a -886
929 a
  {
 -886 929 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(850)p Black Black -886 929 a
  } 6/Place PSfrag
 -886 929 a -886
1071 a
  {
 -886 1071 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fb(875)p Black Black -886 1071 a
  } 7/Place PSfrag
 -886 1071 a -886
1211 a
  {
 -886 1211 a Black 0.000 0.000 0.000 TeXcolorrgb
-4 x Fb(900)p Black Black -886 1211 a
  } 8/Place PSfrag
 -886 1211 a -1390
1391 a
  {
 -1390 1391 a Black 0.000 0.000 0.000 TeXcolorrgb
-41 x Fb(Size)47 b(\(bpg\))p Black Black -1390 1391 a
  } 9/Place PSfrag

-1390 1391 a -766 1501 a
  {
 -766 1501 a Black 0.000 0.000 0.000
TeXcolorrgb -2 x Fa(DJ)p Black Black -766 1501 a
  } 10/Place PSfrag
 -766
1501 a -783 1609 a
  {
 -783 1609 a Black 0.000 0.000 0.000
TeXcolorrgb Fa(PR)p Black Black -783 1609 a
  } 11/Place PSfrag
 -783 1609
a -918 1721 a
  {
 -918 1721 a Black 0.000 0.000 0.000 TeXcolorrgb
-2 x Fa(T)-5 b(rain)p Black Black -918 1721 a
  } 12/Place PSfrag
 -918 1721
a -952 1833 a
  {
 -952 1833 a Black 0.000 0.000 0.000 TeXcolorrgb
-2 x Fa(T)g(ruck)p Black Black -952 1833 a
  } 13/Place PSfrag
 -952 1833
a 2867 1833 a
 currentpoint grestore moveto
 2867 1833 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

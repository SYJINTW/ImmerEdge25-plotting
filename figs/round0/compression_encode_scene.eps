%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: 68028049fee78cc800b0e3c4f7d88c3c.dvi
%%CreationDate: Sun Jan 28 07:23:37 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 587 284
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\syjintw\AppData\Local\Temp\tmp9ivncskp\tmp.ps
%+ C:\Users\syjintw\.matplotlib\tex.cache\68\02\68028049fee78cc800b0e3c4f7d88c3c.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.01.28:1523
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B034250D21A5C6AF7938C40B271F1A009EB695B077F
72BA75DCFC69B0F51A459B5188EFD13F7DB0985F0A3C2E1487D41BD2468A7485
68DF2313ECAB9404016B1330269B6C9AAF3DA1026C2155022E70A7B97D5562F5
5C3CD0CFDD5E1917BE04D545FBCC6E46D7AF6CBF36A165C6A9931EECD7F7D180
5326919EE4DC25691389942B725B498D7198E266F5F60C70844F6230EDE6EC7A
CFC35B6AE123E6B03D9875FCC11919647E8B40A5A2EB1BB8C26FE9004BC127FB
7367DD9F70A15A7225049E862656873684A08E6348D7A456F78D197490EA3849
CEF79998C36FC044FD5056DED3626ADFB08748ADEC9260824BD6B2FDB327E2A3
2D14F17E59A758BD72A772E7AAFA6ED6A8582BDA6763D3B74EA124C80FF10CE4
5C02D1CE641C8300C59703A5B683324F98654398F5926CA93F4426D967EB3739
3D9E5E156CE6AFB18AB8418651E2189A750A04F8B0157396CF63CB6CB7E817C5
EFF3752CB9E8A96238CCBBB414C568D5600A2255A6F29F3C77B28DD3E4156668
7626F1BFE1935F44EE66993F690A4F40A9BAE49EA30CFB4EC5F4AF6EEEDFBF05
3EB6289CD231FB0F2775BE5212540F14F9FECA7D0779C81A9D5CD80587D7A12C
CEA64D708079138FE43119A3C863358EFE477F5206BFD21EEF76DF1F1D6A1124
08AA6E4C3BA7FCD1B57B6C8CBEDC362955795BB6A79D1D02CA37991A009E37FA
148F086E89DBC59BA02A0CA7652FED3182C977BBE8C062BF46DDEF90135672D7
007235CBFB28A0F53F0390D36BF39EA66B386DE19F31F3A1923FA3C5F52078C0
FE50208DD163A3CA1D6AE84A3410C0472EC1E32B25B7EE65EFAF0115F3E0E97B
EA51AFCD8146598DFD0BC9FA696B91086A61A0C67FE6B44FE2279FAFE139BBBE
2AEEAE276D9068F6448D0445C280E6CD1FD996E1C3198ED853ECEA2E1DF0780C
E47BBE54EA7E917FB266E0244C6EE94EF3422858AD9C1FD3F762C8143A538484
7E26F0829136986749969FCF8EFC9DC8C16CD77225DF91E490DF30E5C68667C0
DDA575B44F8CE8CB67BC77FF034746D4AF3FE8E4A61F72B56377153D0B890971
A82677DB13E2A460620B8ED0372A76B058E4BC1F616F6DA9B38ABAD05F87B9D8
982EBA496C82416E28E0478656371A52F99FF290E8438626FB5F6088590EF3CB
909254695BCC2FA76C09DC21A6FFE886214DF47B13C23C5BE99A2F7451518F48
211A04F42864A28D936044B329EF0CD6495A7D1F18FC4E184AB0138C55F58EE0
B3E463FB99578B809358856ECE728A50D905E76C8D81247A17C1064CB861B8DA
499C29699E63A013EBB169A85BE703193033CEC9EBB904C13D024F070A5C6AFE
88F80719C82BC1FFDDE76BCF6AA658EE2DDDDF061BD9FB849E7E46502B22D03F
DD49FF3E35B268108D00CEC1E7A8ECAE2D9AF56FC2B01600365BCB500250AFB7
BBDB3272AC987A692BD61A648A921C99095E30008705B50817DA17CD52F19E8B
3B26DDD2C7B6A521F3D12614AD4B9345154955D981A08AA153E57F9FB7E26BB1
730B9E3B03982F0297A1FE852B945B1187AE0A2CFD33813965D88BC90326B742
9F014356232F1DC8E05DB6D173A1213F53DFFDCC9A06088B42CE232740D8C458
88D4A0CF8AE610E7017E11E78CF5E16869BEF559CA683A3E78C4F44F1B60E65A
13C4E5F809D12ACB834856A2A46D83CC900DFF2B519493C9E834DCE1486937FE
85441BC8E861EB348CDF8229A2AD81BA138014A4F744CA3897AE5E0C66DE09FE
538B27A3997CDAEBC1CE52CC8015865AA46773CFDEA40376BA72EE6F2AB3C4CE
836E99DE737D65C139751395274216163BF84F021D964E14685ACD81A73BC813
AEEF3795C69DE57744CC1DAED7F6F64E66E6A0D6C0A0CB97EB2F78739F2B7CF0
003D3C198AF167A7725902F9C815A156E6D3EEB66530BC69D497F075509F64E9
9903A1F92648C63F668B70DDF92B30D3B11A37F6D6273F407835CEA0FFF5AC0E
E7858DB8B92721BB2C161A883A7CB554B3ECC22C20C251ADF4D2FF8EA9332368
4233A56A24176BB616D65C8906BAF0C8DA43F794C3FC8F00B55F72A0BFC7FC80
D659F49B8568C54726444BC416487B8840500EAA0CF741F39FCDDBF10E184725
875766A5CEF97F0764926B84A880CE02E306C3B2455AFA34AC68D1DEE2E4EEFF
55699D724B6A550A868D0C17E574D17D4C7FCA6EBA7CEC199D9D01DDBE90C7AC
5FAC85AC5F4DC1B358CE61FA4BEC8B7993AD22FE34E752C214920792EBB1C9D5
71BBF37532CA6C54255AC3CE51E835858ED8B7FC381BC4D9FF8DFCC35D42045E
5CEEBA8EABCC292D3920883C966C6C3201BE5FAD01BE4440E44FAB6BA40102F0
F13104AD668D5D842FB8581A22FE803AFB2171834227811C3F96EF0F71FA5A23
35237265BBBF8EEE7BBF2B155755EE3632EBC537DEA97CD40A51E3D468D4C0E5
2E2A213976557631B7F9899D3ED866A73E56D6007D1386EBDC364E0495D8BFCE
CB22F491844FC4C966AC526CEF3F361649E132617CD607CFB446BADE475404EC
30FAB6DB38ED251F58D1C088EBF772CC56194A7DF0C8DFDD76EC409B7349A11E
7591C6922DD8EA0C158D91E4794CCA0401E1B6D9CD198D90FEFCEED4476E35C0
19B5DEA80937FCDBA9FE0446AE6AFE07A1F5553AE4F0B9542628F1E41C94D992
8885FADD5A7E59CB42872E6AA782BB276706EC7C748A40418CD85FD323D46131
B9284F7031045937D9CEF904EDEC7E3FF4F84F8E91857303625369C62C10CE19
B162CFE936DB9D99F0279F6755E232910785447E5084827304252CD9B297D319
5ABFECEE20800E1EEB85DE3CC0F1D5F7DDE7912BA8FB7B10EE95DB49A69F2D1E
BABE41504B111B459B89FD80B2BB2E2C8F5E0304486FF4EA1D0A668FF731A43F
7E85F640CFA5E7F8BDC7A641B0951BF1781785213D442C049956A04CB4C3DD6B
B7B6CF3F71B4C23DC40447A2D21270DD055EA707AD507608A231AE5E966D8E84
C6EBDB5B2C97057E98511191DBAD092BB709FCF1D2F42F6F1D7FAAE03EA53CB6
9DA95FB6020B097082E73509B70F0C64694B73BFF34288BCE1FD1B1BF12FB534
F7899E4912EFE1B93D0891F3EEC97D77DAA0D2DAC29A0339A42F6A342FAFA1F3
8C3CC199450346ADEBEFECD59D1A435C79BA92CEB9A6268AC96F7091245F034B
D65542DF47BC7BBAD0B70221EFBEC908EF7DE25BC5A014E43E107F0611BE0901
05EA9F2C66500DD9691644C9687E096E18CF9161690D8525EF5A5B34BD7C03CD
EC68276DFFF4415C9B45B497368EC29ED24D1FB7B4A08ADDC4000DC9B924D8FD
15D20E1CD606419D43D1241C04E278698BB17CB6118EFD7067BFF213A366649B
63B48BE7A9DAA9F9DF735F7D0A195027DB020897E28D2E21F01425A50C1B69D0
465E0FBAB6C9EF7D73EC68C047311B7C07C17737870959A30F13050FF7785178
F82277403C5DCEF5419BF9E7988FF39084FE11179550923EBCD43B2E84A1733A
37D9AF92BB876C31884A9C956DBF260E9D7376CD185CF86CE5FBF7B16DF2CEB7
CF3B3CBE68E33BC97B8CB4D4511A329B3B6E0D9EA3FD40352DA628BAE9A5B9A3
F7C56D759091B6D8E2FB8EA7FD32D0845F7A7A3B928F070C913E3D68FDF48B6F
356B51DB9899CE3773C908F3E559F6800682AB3706F2CB09C4E5BE50A6418FBA
42AF1EB2E96BD97B653E6EB9DC384EE2F2C60B048CC84B830E248828265A87D7
F68B569EC47F2052A1E604F5C5C0F1B1EED3C5AE4E1DB6DFA510A2F18F3D631B
755B2E1A616B8CCB6E75689101E98FD9DAE4EE8F80846530A88228B1F44C73E8
CF8FF1E99D5CD6319BCF78C8BF7556BF51AAB5AD4B903096F164D605D49298D8
07D2ACA57AB52253DD323B75170FB57B15AFAED3D3D8FE7A74E85A68531FFB57
B3DF725DA36BB9B27EED75F22A4799C741EF0E366457EFC5B4DF8217D67F4EA7
3AEBEF22A27A8BCEA4E344C196954CA7095D14BAA0FCD33A038BDF794449F803
5E51371E418F39EFA71A0DDCE149E75A28461D686F83297FAA906469BF76C5EE
35D36E883E3362E8151A38AD6FA6AF555AD1447A7FE4282BA1294BCEEA64B7B3
BFDC1BC17A6C4FDB613F7AE8C953FBA3414C1695FA437CA48E4B07BB163A248F
9A2052CB8980119F3F2EFECCCF270DE102840E68ACF691393E6A3ADF983C19E9
9524F245A5D95DFD4919A4DD41821FD46846D3AB009D9E8F3C51E31DD40C6035
8C55E4CC8E22EDE7B3F23ECBDA863E099C2762CD95B4BE8C22431014B5455137
8F52F29CBF641A327A584B58E7A2A0FE2D471C13CEF005E0FA17F80DE05DF51E
5FE8366CFD8F54F98AD732625A2D058F575C22F3AFD528812D427D8360132875
BA12887B4679449BA3781D3C8599058807D8F5742ACCA8440740EA5B72955E32
DA4A1FEB4790678E6A6F9F351717597F3EF0F5744F1AC77F377AC83CFF168375
34BE82310A8F45140EE4FAED5426D5175E66EC9D1E98995562DACE57A09F962C
EA1EA443B9AE2ACFFB374247724A3901FD546D465B4A49473C626F4867F7D0CE
0CAD7375E1B49ABF7C9AE4DF4BCAD737A9FCF044197DBC16DBEA0104499889F7
D0C124297F844A7DC46DFC69EB87707F86AF53C52A2981A86863D290C360EE42
BECF7E09B4B09DAB95801AFD77C6EF59B766C8988B74FD5A8683FE06B61783BE
9BFA812E4B4BD053CE75CD5B062388F8F03E97DE40656F7E7B9833F446A211E1
F49193C2827663F254F102AF0A1E8CB96B340F4C0FC6F655BB11C27048CBFBEE
AA0EADF2050B71A79D61B7325F4AA2ED4E09E32A482026D3180EBE8F03A38A5E
98518F3DB193425614E326853BEDE444C0BD672102A106EE060A35161A714F07
0388D9C01BE101E9796D98FBB817C9C75D027348A06F7B37A2EB553D4C2E65C7
CD5562A3801011A84FFF3E298B6EBD898780D14AF39403B1DDCA19E22A2D4011
D077B678F9DBDA3953CCDB9CC0E73C0A50A2AB1BEBBB9BB4A33C452CA0085F3E
2CCAF865D3A9F35ADEA501A48BC074516C87018E9FCA82845390A413FF9FF10C
FE04F29E2E89131F91532162978DD1B835840FEA2A1D89133343BD308ECFA058
EF582CEA8D6D8DED5E7E60517A45301DF17C3317016EF9992FAFBAB342E4A18A
883B9ED4CA1344BF4406642BE1ADDC7C9B86BA5F68257D75A455702AF781874F
B82B92C8D2192861A764848DF913B8B063CBF5A09FC8B20CD220E7055884F654
7950F009EF31932167FD41B20517366F4234A45127EA1B3F197A23D5BC971300
FA22873E89B7467BC89A9E8173AB0912B7133842A2E755239D1F1AC6164A1999
6FEC662782374F68F96F2BC5A46D3EBCB2ABCA92BF22C85FD89DDAF97AF25C53
09578444EF7121E8BB71FFAF895B2BD164A5F1EEA400A8AEDBA5B7CF9B8858AF
EBB47DF734DFA46BC25CAD911EACF7A15746C2164C223EF20F62ADC63D8C2DF4
FF9FD4AFC08D3CB8634BE356B7A715D88297DD30D76ACFA1FC9FF4C1D98BA42A
A91660B2AE39F7BAA5A9077FB466C6397DFF3DA3EAF20FD08453F7D3A3463ABF
03C400DD9084CAA1BF17BBFA4E9D98849E6AB20FAEFA93C3F0A6E439F5B7D569
EEAB36866911271B0732F968ADFF062594F122A48C54AF55E251D94CAC9D33FC
49E85E5D48BFA37C43077D52984F789778A54B893EEDB4718BE8263DB9D9C890
F1973AB31BC642F8DF025571B590181B46255131C8BC2D6A454B0717C5CC75BD
CC6D1A2528C3E2D81F48F04CB3ADC4D57FD72D71A74CBB81B40D136C2A16CBB0
52084E38084C990FEC8EBB6C66B998AFDD35245CC823F51640C701A22BE74690
B4C8DD2CBBBEE05F8CFE4B12D0BA4D51324C944BC0EDA4C897BC2F68F19638C8
7E0F8518C798D8D908BB64631F9DBFA10626295EC37A502CE782AF0BE2A24379
E0179C54AECE263369EFFCBD6C440BC38A33A77026A5F7BFFFB3FEAED5C16287
F5E818ABBFC4C83F88315F0545E31B06F84777F5F2081B9FC16E776C572F82B5
EEF1B534EA17ACEEAE950383A021B9E3E55B3A4F0B070C596A04D917378A5FC4
700E312A6D8E6087A687C9856F2CBDCD72294B73C9167DE7CC5434B7077ABA4C
F5B327D21FF8A4F845D136CDF92657E8BD74FE9892AF56CAA782B3B2BBB9F3E6
526AFD58333B551D1907126E0FF3D8FCAD40CC60758F37F1B4CB61B37C3230FF
3B6E50CEAD45ED2C08E19EBBA21208B5CDE5E910DEFDA01AFBA1113B2A1369D6
55E995A962D99275B8392A5679E32B90D3209091D801E9C03C685ADF934B27BC
DE6A8C36B1FBC0C637C71563450AC3D449CB17DB68283E861CD22FF7ACF1CAB0
F59BD5CAC6A25311AF86D139455D13659B59A64AF28CC6238E0083DEB0F75DAD
B32BA528754CDEA3B351810035009B64C4CCBA115B7FF459AFA4D2192D110D08
3804ED58D04859966AAFE52F8694CEE1A5F5B26FC8966A28ACB4EA7A8824045B
88C5088B8BADCC6844D208035D62265FF97C702E0398F740D8BBD3FDE9DDBE0A
9F966EB9261170ED84A2C84C53F9294CEBB267A57EB9BD63F7A65790B08D3911
3E2D0A3F5DF0E393FD4FBA4FEDCB0CF235848C4DD27F0BC5838E5864D8C886E0
D09DFD0B9837176FFBCBE1C6CBD481F54BED9B70E43C40FE594674D7277F721E
78E32FAA220B2E140195B927432EC240462CB26E81B7D60E1C009BED2E59870E
CF42B5D18046630E7D4488151DFEFAE3688EE58E70A92972603BE53DD284DF89
32B9D0AB247A8CCDE885DE7D90CC0A216D6231998B736C8B046344B5BE989B47
2C4E591534EA5CD29BC3BDBFC132A31584A4B4A4CC421E1C58EC8D662C0D68BA
EAE099A9133A5E0614078912B55CDC72C59608F55AF52A77B673E26A68999731
A8847C24DBDB3EB1BFE5034F8849CDE775D64BD63E250047E910F5587847B9B4
F6BC43874C19E26371AC95C993BF2A625BDF1D49FAB3AFF04E87198581D36D25
AC400CEDBA37A55CF4BD0B7750116063CB5E3233F7EB95A02F86E9BC231EE5FC
58FDC990C3DDD60F1A57771D1E94A269173938DC242F0812442BE5663CFF0828
548474134736DC80EF55BB1D5A1D7873601FA4C2306671526361ED2C379A528B
A81DFF14211B6E58D3E91ADFD645C10EC243BAE0616440569E30DB3C9AEB423A
569709BAB270C0C778E788C7C5B548739931070DE3749F005F243D8705CB8421
CE498F87523A90B3C438EFB1B7F3AAEB8776622FF3C96C68D4FFEC43F58F00F5
AF0E18A39AC1729BBE1D6E5204F3689196C63272344D7DC8EF0FD5AF6AFF6AE4
41161A1A6DB7254CFC65A52386FC69EBEE8A21B6BB0175C513E842F42BFBD3DC
7B2215B167D98A8BDC23D19BDFE910DD0A6C4325D56B6CEDC3186652B6AE3402
CB9870AC9245A6551F147268DAF2DDCACC6FAA4537E58953C0ABFEF776280307
968B69EC9FE5E27D58D7401B256644823CE510D5EC096514A030EA64CB9EAE76
8EAD6410381D60DD9CD3EDA89D267A5E9B422F54D963FD99472B21FDF47C3D09
76A5B2CAC668D4D0759AC9F82277403C5DCEFC2E9A0DD4F1417EBD89F5137975
F8E5DCCB8B33D8D65FD16A56F848DF4B8C33F95133C72EA83EE493A476511A84
B567209418ECE7B6C3D02F92CE75A5DBCA388B710C61C63032E320FEF720BA48
0BAC6DAB0D20C17FB3AD2A3D7A6DEB9D13F4685DAD304C19B18F3C1B381FA9B5
4CC419D63FEA5A18D3D49515C0647BE953C1FA5A97C51B0C1A3E5D3CE0E1F146
F40795406E2C818A4EF6E289FB9D7217848556F4C74B120B4755842A5CAC70B1
A8AB7740B0B4EA875E5990E9B86AFF35495E4177466C150A0B5876F92B95ECCF
029A6B182FEAA4C57A53F1FF43D59710673988CAF059815183A27FE648B940FA
5F2CEBF23C4F8FC94B68D59BEA8DCE159D0A38B6E11934676DD97F53C0D68A34
2F6947F1D7124522F959376360439FD0A7648715A0EB3D50009F2C48758AE926
2BE6A397B22B97B16A03F7A514B75CE19B93F392D9943297694561A0997FA018
67F8A40AE99490E34B31E4467F6B14BE9CA6799C0962E6BD7BCBE4CC7F8E9674
1F532DE5BF0DA704808D7B0878A09BF1DCA721854E8BFA13BF6CBA03C00D2BB8
0CB291F8E334678484A16D27427DA66C39EA6587B515F5CA50C4118F1635FDE9
1E21CDB950C284946E38EEE01ED2B8953E00E3309342340AFD47D9CFB5889A4B
A3B11B95C5F3FBD988E450757E83259513CB628C39CCA07DB2E3C9A7B9B96454
10CFCFFF5C182B94CCD735FBCA5D056342C1BE65B0A99E55506F3032F0A95E8B
F57C0C4F2813F2EE42B467021CD13C465C2372CBA92F21E545E09862C40A4BA1
6C651AE6C80C65E287960C7B2995D1A75D1554C0B40A884D56620D6A3BA934EB
0E18FC469B4D8D363D5DDA95A6835D6AE7A2AC0360C1E939CEB65DA45E9A4E9A
5B2B808890A43D9E7F59104AADCF7974D7769822962D39A30A3D5D4331979C91
4CDACD8E52AB964C05803F4C580F80546B2D997B174FD53FA4041B0877FCE489
87D716DCFB6FAFBEAA28B0A27F096F99C841C49FF4C694C124E3C0345394D2AC
A81933F3C9923BF24958E7DD8A6BA568E04DBF11A5A431F7134EE52F84F1796E
BCDD68CC1860B3EAEAA564961A7F9523E1DDB68B7F5C82DEDAC7AF97962EBECE
DD21DEF42A0ACB73580D0CFE45BEFA7D935A4FD76D7A9CF080E34D19836FAB5C
268BE18A8C0973844C950B9BDA89959372A2D1D83AD882CF0BFAF40BD9C5A865
2C95246A640E9625BCB3CB6F2F65DF0FE34CEC934F99C14E909440B5457AE748
7224AE7E35AA0F3A213360EB7C2C60EF8FA8F3AAD3ABA241E43625A28A20C7E3
2793E2DDA8ED6D90F8041298B7A26C36072495E724E633F2433A5ED9413970F9
1DBF8F6705131679BF791A6809164532D7CE3126709FF083B86BD37D57BC905B
9A03FF4E214C11868573EF0809580747962158A61BC7211F164A664AB4471EB5
6899C79C3B6BBCFF68B84FB1820439E0E8AE43B43A1481F6B5D02B86273D30CE
80C4D803BD810E34E7CB9B36174B5858DF579C7A43F3EC9AD09B1BC65436F629
B7793C8FDACE927C8FBE090DFFAEFF608336E713D6978B315F723A7E8296AFBF
EE1989A09F9F9F7F2D3A563F05010888D8AD09FDD0EF576A9BB05860A2DD5557
77F048D317210A6791D432094998B144BC6FC5655C0F9D2C2DB0A0E3EE99F740
06929E48045A055B960AC14C98B028B708C01494CFB36F5239D236E560C661C7
D3048C2190616F793DB31310AA0A8F45140EE4FAED5CB02F5C93A198B5A109CA
9D14EB30F6F4C1B85C7C57B54730E256A366A29BE5ABE7879DB7FFB127700DFE
735F7EC985BA26DD7650B28A326F8B92F4E100749B38E1A6E9188DFB0C7375A6
9EAE631BC9900C4729B4D91C24B6109AD2F4308068FA72E47E611ACD8A387FD8
136A7C899552E33AAE83E984389A3B3720FF0128C29E7F9F5490DFE4423EB154
09AB90833C95FB4AC4154790429EFC5DAF53DE81C970AA806564F9D3437A03AE
B428548031F5D1B00F3C41E627B1DB9876EE658C50AB2E6A01F5A47A0BB7B6AD
8195784D191E67D53DE337F1D1C0535E4D302F0411B5ABF7662DBC092ECEC172
A8C59173B673B15E14AAF7B91CA4ACEA106DBFC30B8CE946578931E3CB077A9C
53CD1D79202D3AB929B32AEC0947D1ECB82B90FB04F177FF7CA806711890C1AC
5997F21A14E7523CEDB295474BF056FDFC1D6678376BA32ABBD39841AE090FAF
C229B950A1C56E468BEAE99C6135BB2A0DBC9C1EFBBB97B92A8F1A5B74E8F163
3C58C6C2770DC561F2703F8A109E6F880A99E05CB7FD9193FE38A8A810228AD1
E71520E0E7FF248905711E015CA1115B60CDC9EAD5BD6FE18081661057BD85A3
7B1F3D63ECFC9C885D638355D76EA01306173DFA3E58651B2FA8827ABE229BA9
94FB4A0185E386085A416902FC22B7ABDC397E50AD6499394EE2DB30D98F20E7
10DB3D3C578C86CDBBDC0A2BE5F6D17EDD30D86619D09253A010AEDEACE01E30
D3CB3FE2944C3A15D19D28E4E3C0CDE38FB5E7950A37326A09C2311705AC32F8
8901300D51C912BE7CBA6297E68387A161F72C87504FE4D833EF1073BC902817
ACEB8D723B1868C5ED5B38008AE13B19B08630E5B4945F61D09DCBD7E32C0027
AEE9DE828C75A26D72A2F390B82C2FEBF42189E3F4FEB340DDC07C06BCD09D85
29FD28B5750B8218ED41D5D6D965663679FF1E970B1AC8F924CC957EAF406D44
70F4B831F1FF08C8F7C2C7442886B355EC09503BF1AFD8E46C57FCB68098276C
8CB3C4FE00A100DA1247CA40B181BDCE7CE9727052DA8DF2D4BF8CBA1B5D093A
89BD6B4D8287469F25EA6FEE94AD26E8EC56FB859D4BB6D96CF9314CC3D7E9AE
66AE5B6003B468D77E05D397EE97155ED0A8522CCFD8EB2F796C0F267E8DEF0D
49E1C87AEA81BD486450E31C0B2DE32673D145722C05644840865A7E1334B6B0
DF159E3A1B3368175E0E035C198226CD3248C812BD4323EB0203A0BB089ECAAB
5105D036B502F3B8FBF2DB0ED029787D91D21F73301FF4440BAA959ECD267814
FBFB0F83DA0CB88ED67D6083044418CE6B42557F10461D77E5C99D14468EA841
AE96B09B205DA6CF67746351A3046AF58ED29F64257FFA0AFA05C21801C64366
1D2B328F7BB9D2760421A3DF224C0728C7A77CB06D15F07AD79DFCFA72B80FE6
CEDFC75455859A1965F478522ADFFB92B016B450ECE1B67AA3503C3C9D19B57F
88675B5741351912F529FF0960FCAF2B2D1525CF224DADBB8493F26BD892876D
095F3610928A0CB7E478740F6E791A88D1FEB75A10AB66C6AD54B4490C9A968C
40DA1E0D1A40239B2FBE5A49AF8A38EB3AA06C7D4C4275E7C3FA0F6F9E222912
C3E0A4D7F8E1631175BF941E338BE1B57CFFFACCCBB612308A6A99A172959AA1
DE8A43AF7188072915D70EB455D20E4C34F4D728E9E820AD4364F287544A528C
562BBD9A3CE8A8B0B9D730B656F785FE50E8724E528A079BA978329846B01AA1
6D4C1826ACBD026C1E8BE3B9EC45589B444FC72C244AD9F858A1DEC2DA03CE27
73D3E62040106BFFCAA0892F95549FD9B4765C4405FAA27787C4377B88770492
6FEADB8D474E2EF4A7BA2612F343D8ACADDD0BF569F8914EDAE50781543BE264
29553116FC15FDF323A7899AB4EAF9305290FF3D83FDBB7CE5BC77CEA287D2E9
610363C3E3609E8397C2DA3E0FACE72FB43D24B3A47B5E2D0B6AC49C5F9DED8E
EA4D414A75BB0393A01228F3E418632477F5CCACDAC7160D5E2C38BD640DD722
5F9D5C6EE124D811BFF32006D49527320283C493881042CED24BF27AA32805A5
BBC3E25D1108156B4776FD3B2AB810AA327B3C464A6FAAD61A3828113C1644F9
79BD00610F6394B36FB58DC117FDCAB567CE067DBFF322F58F4F4FD09A5E47FA
1EBEC9B086F8C5DD092FA058580D83BB7DE5904AEA3706F752D8D968C282AFF6
4CACD4242C17FD7731C9683AAFA8FCE10FC3D09D97F44DF1AF91739F47040475
69F5657BE15283A55D4E6657BFFF3390B16D0CD086123F6834DD77263F2BC1EF
438FAB2436BD8FF2B903B62A79CDFC02EB6CB975F8DB90E5D6D4B93988C0E006
0315137B1EB5B1EF607D126D328BFB05741B7C77A6F5B2055E80694CAFD83747
C4DC9A780E3211EFB72B5079C20F84B8EE6562FFC0A59B25D6A63F4B2A3756F8
DC920C91E6DF15400F35673BFB3A82D86ABABBEB4D495D802A66650ED9794E44
0B8639C9491A7F63402D793FF61A393D1F5CA91D723E8398042228E72DD7E362
B012CDCF8A388CD2F215284FEBCC716213E0C1F7437B770B60827BC3FE61B8B0
433F2186EDC1A9119E6B212581A5231D27FB9E172259E6F1F4A2DF46FBB1C6DB
BB6474042607733C2EDC5BC03B4B9080DDE5FBCCBCDEDC08E00B8E347EB85B4C
076E39E32D4ADA3442C35453D9B3D77CEF7E3624D0E4A2692EEB606DBF081796
AB66B35BEEF2A08D16C3441D8F64A3614A4C4443BC4E4ADDFBAF8C5A679F34E0
C32DDA8321525C9A2A405261C9338A6D4533E174784D21CA938B92E663034748
3E86754FB628C41C8E84213562702D2F36A5932570D905A90F247B04D0915A52
0A4BA17F617FFCC74BEF42776BCA6CED7A62A01A41FE10C44F9B001196D03B63
C97F5182D62B2FDE73A7B1FD13038B4A5B0B3D64DAFB6BE62B37DF7EB293602F
A16F0345B8E4564A3C96B4D0DFBC1F4EF5D07FC4545C52EB5DB94FB9FA78D41E
7CFBEBEE758A97913D2E62AB8560EBF888B5EFCE1AAAFE70D67F5A822C9501DD
2825C6525918BEE489B84BC2310A1540E5A0B095C2264540350C9C419E648BBA
98DEDA8101486A40ABF99D571AE59821CBD379D30CB62763F54165F6A60CD104
9B8B8CD0E1A5836D583B90152163FFE325FA8826B5CD10691FB92B5153ED9F89
0606163D0D1A50006486C9C328DFB87DD3C0C398ACE7F8A4CB9C066A4B9A75BA
E1B69B722D0A23D00C101C8E599599C2EEF903F42A5648E6561C1265946A8A9D
F01CEE99A0B6312187151DBE5FD32E409CA371AA8B149A6D1719B947FC0CA98B
982F90419AF3B06678AFD35F5D00A1EBD46BC8B942FD7E7FE25AE005C812B3DD
05604A03016E53B1E4C7A9ACD520928B229B2AF94D20061BB4EA50A652B08B0B
B40003232DD62F9A7F1D8B12B80D3F3FD44CA8A24493204C69E3BA8391C12811
48BC03970D0EACE756DB2D46A83A157F688C73924D391C0A544468EDD96BA602
DB9BD18F209A365F92B46E6CFC2DD1271051AD7AC124762CF0B01E18E3AC84B8
20B7D1965C4D9F3BA89CBE186CA8051F2807F32224FEBA5711098F25D0F8A3B2
AC6F0EC24C70429EE2B363DF0FA82000ADEEF4A95BED07B42E95800721D9D2BF
BD18F15F4276BC7D13399DC60C2EE4FADE0F3E237A4DE1006137FB9BA2860C81
182F8919D1DE9EB6A3B33161939993D297F5FB76A979E33DE563CAB53BA93A15
B889E0837073D842F1F6E6BD52CFD1A0C40F7905798C1ADFCD55F960008DEDA9
7F64F6F3486F17377EE0D601A52221CCF88B2E4665A1A4FF0AABD3F00E338B52
0264A0BAF482198A65AD54EF30245D907AF7C9A891B46265902734DB1C0A43A9
B7660EE6F51EDB10A828153D626A8126EA32C81D12F0D9B8FB44B24C97B739C3
3B5FE4AAF6ACEC762E9D7E5954CCD5828A34913BC1B876A1B18F88BC747DC251
A811EAFEF64F3711546E425A69185718217378CF035E77FB4033C92914C1A642
CDDE10051C048912B4E7B99228FC332110A72824956016D64E5C83B75989ACE7
7DD80019A5C7EF8794E993F54A8C9CA90178AD9D0F277779749A9722F8EC54B6
E14B02A75F9F562B712943A17D642215BAE22E02ECF199CA85B6F4DC5272B51B
559241260466F30AD0FD7B8A3403D78F8ACC16D7E64AB55AC7B95F065F2DCDD2
070EB64A62114CC1BBD9CA2965C0A794CE3536F3170B3A217A98669AB934E5DE
BFA09C83F97C3F868844AB008C757AF111A96A9F403302B5358F1E6F682FF685
185EC331F8EEE886D61D3C3017C6C92571B90698EBA982AFA14F2600FBC4043D
248627B8813732BBBB9C4DCA6E1746B4A3F54F70A06F61F6855CE1BAAD376F80
8029CFFD5880713E4ACB0B51B9030064B54448F0B15C402D2B254AD51EC71998
0E73841F84F59EAD80D74D2C2611B71D4CA67F6C4EEF520A7F6037695A6E8654
DB5887F24322B5464D10640CDC719E24F27EC3A431541AD921FF38419F5E9309
CE534D92FC61DFE45C73ACBD6A9742E60490F5BFB3988BE8D698C302B804D9C1
76AD88675DB4E9E25C50E25E1F0970B7F3C7964EFE4FBE36A3C797C0061FC211
301AF33F3330A9B0CDA1509D95CA3AA8BD0DC5578A704BD6E148AD39B929C9B6
4C757CF49A5ABD55B397CEB820D3AA4DF067A70FCDCC2C6E51CCDBD3419CE70C
48790921DE581D0577B75E0BB5D92CE1556251EA3854B80C32DEA586BEC29AF1
EB01905386B53D960491E348F4B7BD379B921472ECF6043845909A4364CBB5B1
42E5B834332E38FC67C4E6CF336D7D4FC8B7B1DB56D7D838FC89629EB0E205FA
DB21A0BCC625F34A16127D3333CA0C1552405E7228282CF330384DBAADE47223
2F95808D1BE2EBDB6AD322D62A01FC21DBE6686C8ACF2C6986A41E093FCDE852
34634CAB5E3DC07DC441D35837D36E2CCE4022CBE77529605095D13CFB53BEDB
368C935C0A79E49A826C96843256FA5E2BD71F34F109F67FAF344EBC83B63A88
05D068511FF0B32B6AD0E322C8B48408A6D0AEEAD19E77E6DC836B8DB56D1B04
5AD2EE488B0094
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 38561101 18671026 1000 600 600
(C:\Users\syjintw\.matplotlib\tex.cache\68\02\68028049fee78cc800b0e3c4f7d88c3c.dvi)
@start /Fa 137[95 95 1[74 64 1[95 95 95 149 53 95 1[53
1[95 1[85 95 85 1[85 12[117 1[127 1[106 3[117 1[74 4[117
138 127 10[95 1[95 95 95 2[95 95 6[64 64 40[{
 TeXBase1Encoding ReEncodeFont }32 190.951 /NimbusRomNo9L-Regu
rf /Fc 139[23 32 28 1[42 1[42 65 23 4[42 28 37 1[37 1[37
13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }14 83.022
/NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1767 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1767 a -600 1767 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 90.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]]11 0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1767 a @beginspecial 0 @llx 0
@lly 587 @urx 284 @ury 5870 @rwi @clip @setspecial
%%BeginDocument: C:/Users/syjintw/AppData/Local/Temp/tmpuuu7n_it/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: compression_encode_scene.eps
%%Creator: Matplotlib v3.7.1, https://matplotlib.org/
%%CreationDate: Sun Jan 28 15:23:36 2024
%%BoundingBox: 0 0 587 284
%%HiResBoundingBox: 0.000000 0.000000 586.198012 283.832457
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
586.198 283.832 0 0 clipbox
gsave
0 0 m
586.198012 0 l
586.198012 283.832457 l
0 283.832457 l
0 0 l
cl
grestore
gsave
95.981409 59.192457 m
430.781409 59.192457 l
430.781409 276.632457 l
95.981409 276.632457 l
cl
1.000 setgray
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
161.927 59.1925 o
grestore
gsave
156.198 36.657 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
263.381 59.1925 o
grestore
gsave
257.653 36.497 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
364.836 59.1925 o
grestore
gsave
359.107 36.497 moveto
(psmarker2)
show
grestore
gsave
174.418 7.2 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
95.9814 119.156 o
grestore
gsave
43.153 111.228 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
95.9814 221.186 o
grestore
gsave
31.696 213.258 moveto
(psmarker5)
show
grestore
gsave
22.736 68.524 moveto
(psmarker6)
show
grestore
4.000 setlinewidth
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 192.369024 m
212.654137 229.205899 l
314.108682 189.075499 l
415.563227 194.50349 l
stroke
grestore
0.750 setlinewidth
0 setlinecap
1.000 setgray
gsave
334.8 217.44 95.981 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 -4.25 m
1.127113 -4.25 2.208214 -3.802193 3.005204 -3.005204 c
3.802193 -2.208214 4.25 -1.127113 4.25 0 c
4.25 1.127113 3.802193 2.208214 3.005204 3.005204 c
2.208214 3.802193 1.127113 4.25 0 4.25 c
-1.127113 4.25 -2.208214 3.802193 -3.005204 3.005204 c
-3.802193 2.208214 -4.25 1.127113 -4.25 0 c
-4.25 -1.127113 -3.802193 -2.208214 -3.005204 -3.005204 c
-2.208214 -3.802193 -1.127113 -4.25 0 -4.25 c
cl

gsave
0.298 0.447 0.690 setrgbcolor
fill
grestore
stroke
grestore
} bind def
111.2 192.369 o
212.654 229.206 o
314.109 189.075 o
415.563 194.503 o
grestore
1.500 setlinewidth
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 190.361076 m
111.199591 194.763462 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
212.654137 192.393512 m
212.654137 266.748821 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
314.108682 186.45129 m
314.108682 192.067016 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
415.563227 187.589944 m
415.563227 204.008595 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[16 6] 0 setdash
0.867 0.518 0.322 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 151.687663 m
212.654137 150.124565 l
314.108682 151.993753 l
415.563227 195.736011 l
stroke
grestore
0.750 setlinewidth
2 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 95.981 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
2 setlinejoin

0 setlinecap

0 8.5 m
-1.908369 2.626644 l
-8.08398 2.626644 l
-3.087806 -1.003289 l
-4.996175 -6.876644 l
-0 -3.246711 l
4.996175 -6.876644 l
3.087806 -1.003289 l
8.08398 2.626644 l
1.908369 2.626644 l
cl

gsave
0.867 0.518 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
111.2 151.688 o
212.654 150.125 o
314.109 151.994 o
415.563 195.736 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.867 0.518 0.322 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 150.295057 m
111.199591 153.116081 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
212.654137 148.697371 m
212.654137 151.341067 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
314.108682 149.724608 m
314.108682 154.830184 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
415.563227 177.790992 m
415.563227 215.937931 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[4 4] 0 setdash
0.333 0.659 0.408 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 71.002418 m
212.654137 70.76979 l
314.108682 71.079961 l
415.563227 69.561756 l
stroke
grestore
0.750 setlinewidth
0 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 95.981 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
0 setlinejoin

0 setlinecap

0 8.5 m
-8.5 -8.5 l
8.5 -8.5 l
cl

gsave
0.333 0.659 0.408 setrgbcolor
fill
grestore
stroke
grestore
} bind def
111.2 71.0024 o
212.654 70.7698 o
314.109 71.08 o
415.563 69.5618 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.333 0.659 0.408 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 69.410752 m
111.199591 73.377674 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
212.654137 69.427077 m
212.654137 72.112504 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
314.108682 69.773978 m
314.108682 73.402162 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
415.563227 69.076094 m
415.563227 70.022931 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[12 5 6 5] 0 setdash
0.769 0.306 0.322 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 163.102768 m
212.654137 164.943387 l
314.108682 162.111037 l
415.563227 208.408125 l
stroke
grestore
0.750 setlinewidth
0 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 95.981 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
0 setlinejoin

0 setlinecap

0 -12.020815 m
12.020815 0 l
0 12.020815 l
-12.020815 0 l
cl

gsave
0.769 0.306 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
111.2 163.103 o
212.654 164.943 o
314.109 162.111 o
415.563 208.408 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.769 0.306 0.322 setrgbcolor
gsave
334.8 217.44 95.981 59.192 clipbox
111.199591 161.180525 m
111.199591 165.461699 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
212.654137 159.464688 m
212.654137 170.938664 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
314.108682 159.323581 m
314.108682 165.339263 l
stroke
grestore
gsave
334.8 217.44 95.981 59.192 clipbox
415.563227 177.2033 m
415.563227 239.612949 l
stroke
grestore
0.800 setlinewidth
0 setlinejoin
0.000 setgray
gsave
95.981409 59.192457 m
95.981409 276.632457 l
stroke
grestore
gsave
430.781409 59.192457 m
430.781409 276.632457 l
stroke
grestore
gsave
95.981409 59.192457 m
430.781409 59.192457 l
stroke
grestore
gsave
95.981409 276.632457 m
430.781409 276.632457 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
446.881409 127.989632 m
574.398012 127.989632 l
577.464678 127.989632 578.998012 129.522965 578.998012 132.589632 c
578.998012 260.532457 l
578.998012 263.599124 577.464678 265.132457 574.398012 265.132457 c
446.881409 265.132457 l
443.814743 265.132457 442.281409 263.599124 442.281409 260.532457 c
442.281409 132.589632 l
442.281409 129.522965 443.814743 127.989632 446.881409 127.989632 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
451.481409 247.882457 m
474.481409 247.882457 l
497.481409 247.882457 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
0.298 0.447 0.690 setrgbcolor
fill
grestore
stroke
grestore
} bind def
474.481 247.882 o
grestore
gsave
515.881 239.672 moveto
(psmarker7)
show
grestore
1.500 setlinewidth
[6 2.25] 0 setdash
0.867 0.518 0.322 setrgbcolor
gsave
451.481409 215.321751 m
474.481409 215.321751 l
497.481409 215.321751 l
stroke
grestore
1.000 setlinewidth
2 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 3 m
-0.673542 0.927051 l
-2.85317 0.927051 l
-1.089814 -0.354102 l
-1.763356 -2.427051 l
-0 -1.145898 l
1.763356 -2.427051 l
1.089814 -0.354102 l
2.85317 0.927051 l
0.673542 0.927051 l
cl

gsave
0.867 0.518 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
474.481 215.322 o
grestore
gsave
515.881 207.272 moveto
(psmarker8)
show
grestore
1.500 setlinewidth
1 setlinejoin
[1.5 1.5] 0 setdash
0.333 0.659 0.408 setrgbcolor
gsave
451.481409 182.761045 m
474.481409 182.761045 l
497.481409 182.761045 l
stroke
grestore
1.000 setlinewidth
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 3 m
-3 -3 l
3 -3 l
cl

gsave
0.333 0.659 0.408 setrgbcolor
fill
grestore
stroke
grestore
} bind def
474.481 182.761 o
grestore
gsave
515.881 174.551 moveto
(psmarker9)
show
grestore
1.500 setlinewidth
1 setlinejoin
[4.5 1.875 2.25 1.875] 0 setdash
0.769 0.306 0.322 setrgbcolor
gsave
451.481409 150.200338 m
474.481409 150.200338 l
497.481409 150.200338 l
stroke
grestore
1.000 setlinewidth
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -4.242641 m
4.242641 0 l
0 4.242641 l
-4.242641 0 l
cl

gsave
0.769 0.306 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
474.481 150.2 o
grestore
gsave
515.881 141.99 moveto
(psmarker10)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 1767 a
 /End PSfrag
 -600 1767 a -600 62 a
 /Hide PSfrag
 -600 62
a -1285 119 a Fc(PSfrag)20 b(replacements)p -1285 150
685 4 v -600 154 a
 /Unhide PSfrag
 -600 154 a -695 290 a
  {
 -695 290 a Black
0.000 0.000 0.000 TeXcolorrgb Fa(4)p Black Black -695
290 a
  } 0/Place PSfrag
 -695 290 a -695 431 a
  {
 -695 431 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fa(6)p Black Black -695 431 a
  } 1/Place PSfrag
 -695 431
a -695 570 a
  {
 -695 570 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fa(8)p Black Black -695 570 a
  } 2/Place PSfrag
 -695 570 a -2083 750
a
  {
 -2083 750 a Black 0.000 0.000 0.000 TeXcolorrgb -41
x Fa(Compression)50 b(Le)-5 b(v)m(el)p Black Black -2083
750 a
  } 3/Place PSfrag
 -2083 750 a -982 892 a
  {
 -982 892 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fa(5000)p Black Black -982 892 a
  } 4/Place PSfrag
 -982
892 a -1077 1031 a
  {
 -1077 1031 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fa(10000)p Black Black -1077 1031 a
  } 5/Place PSfrag

-1077 1031 a -2174 1211 a
  {
 -2174 1211 a Black 0.000 0.000 0.000
TeXcolorrgb -42 x Fa(Encoding)50 b(T)-7 b(ime)47 b(\(ms\))p
Black Black -2174 1211 a
  } 6/Place PSfrag
 -2174 1211 a -812 1349 a
  {
 -812
1349 a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fa(DJ)p
Black Black -812 1349 a
  } 7/Place PSfrag
 -812 1349 a -834 1485 a
  {
 -834
1485 a Black 0.000 0.000 0.000 TeXcolorrgb Fa(PR)p Black
Black -834 1485 a
  } 8/Place PSfrag
 -834 1485 a -1007 1626 a
  {
 -1007 1626
a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fa(T)-7 b(rain)p
Black Black -1007 1626 a
  } 9/Place PSfrag
 -1007 1626 a -1049 1767 a
  {
 -1049
1767 a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fa(T)g(ruck)p
Black Black -1049 1767 a
  } 10/Place PSfrag
 -1049 1767 a 4292 1767 a
 currentpoint grestore moveto
 4292
1767 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: d5d7943497db2af6620ad6a503478637.dvi
%%CreationDate: Sun Jan 28 07:23:38 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 575 284
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\syjintw\AppData\Local\Temp\tmp9ejqycyw\tmp.ps
%+ C:\Users\syjintw\.matplotlib\tex.cache\d5\d7\d5d7943497db2af6620ad6a503478637.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.01.28:1523
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DEB6892874B4D6B35F4BA2895
2DDF4C9B8200B32D7368EC950C963D1DE798F32708041E395A94A27CF34DA94C
B1F8A8AE4E95E3D9D23DBB28D017F1A5A232B2533A21F4FAF71C5CD8623B1DB3
75DEDBBC846759B3DDBACBD0BB9FE882315994E7704F25655F9332C1ACC7C130
53510645FF66168961B7D66288CF36C97474DF121FE8E9B9CDC1B4F27BDAD2A0
4EAFC90D9DEE76C678DB7E7DEAAC1AE5F0C5AA20C9489CF6BF32D2A3CAD6BD84
A5074B5832023E809B80408BB9B61C23FD31B10B777D6D0303D8672E44415545
1033CEE160F9FBE554BD27786B870B25727E7084BEA8B53016FD85CF9289DF78
EE12F3DEB4E33DCD967D167E99036FF3B1B8EA0380FFD69361F81BAF8D677E07
6CEC52D4E5526B66BC38B0CC9669D8D3BCEAEC9258D51D73C33A4D4F1488C39A
AE61A41BAC6A15727CE914A10335A0A09DDE121A580DC892423613708F967186
E210792D9EA463C2FB76BC889370A04D8682D0AE03DE6338AA0D62613C595D1E
9AA52AAD14BB8222997715DC16BB65D88A7AAD93961976DE90E40187EA775CC4
040046CF004AF4D76C8434E66ADB72B6710A1830B017A9711B886A186DB61E3F
985EEFDAD748E35BA0325B034250D21A5C6AF7938C40B271F1A009EB695B077F
72BA75DCFC69B0F51A459B5188EFD13F7DB0985F0A3C2E1487D41BD2468A7485
68DF2313ECAB9404016B1330269B6C9AAF3DA1026C2155022E70A7B97D5562F5
5C3CD0CFDD5E1917BE04D545FBCC6E46D7AF6CBF36A165C6A9931EECD7F7D180
5326919EE4DC25691389942B725B498D7198E266F5F60C70844F6230EDE6EC7A
CFC35B6AE123E6B03D9875FCC11919647E8B40A5A2EB1BB8C26FE9004BC127FB
7367DD9F70A15A7225049E862656873684A08E6348D7A456F78D197490EA3849
CEF79998C36FC044FD5056DED3626ADFB08748ADEC9260824BD6B2FDB327E2A3
2D14F17E59A758BD72A772E7AAFA6ED6A8582BDA6763D3B74EA124C80FF10CE4
5C02D1CE641C8300C59703A5B683324F98654398F5926CA93F4426D967EB3739
3D9E5E156CE6AFB18AB8418651E2189A750A04F8B0157396CF63CB6CB7E817C5
EFF3752CB9E8A96238CCBBB414C568D5600A2255A6F29F3C77B28DD3E4156668
7626F1BFE1935F44EE66993F690A4F40A9BAE49EA30CFB4EC5F4AF6EEEDFBF05
3EB6289CD231FB0F2775BE5212540F14F9FECA7D0779C81A9D5CD80587D7A12C
CEA64D708079138FE43119A3C863358EFE477F5206BFD21EEF76DF1F1D6A1124
08AA6A1B7C9AF629B6230BFD81E2AC57A8E54B8676C2DD76048FBB9B8B867BEF
191661E65D79A249AA3FFCA55397E2CC27E11DCFA24B47253A03A99363DD7F86
D47360CAB18398026DBFA8A2A4B4C7D516C3D862466DCFF82529C7CE1504213E
BD9FDAE57CD482A24A540878E112CB53F9792361238817BA3548735C48CD4371
520763D6FD209A23F24B713F90024CC452D45123E022439DD1C79F8A66F62E5E
27255EFC2423976B8210EE7CCCF06B3FE91D12AE88814DDFAA3503BFA395BF97
B72A12C91CBBDB13FF3DE31109B39281A3A61CDEF69335A22D18434271D0E06D
33996EB0F75213EAE37902017E2A6BCE438DC248140FC06678F93166340A81F8
0599286293CA59BC259933A1CAFEE8B0CED8F31CEBE9B8214992F2A78A420AA4
45684F4A277165D1EE8BFE77A4056FFF15F540DAF3BE68EF36150358CDC54F88
72D881FD60ADF4DA19586F0FF2E48916DED3DD04F8D7BDE11F15D300A9968691
8E3F236FFF15C33FDF2A70B0FEAD4B367A90430046F8F328FD98B9C5F425F425
F362A913BCAB6762C97DADA07731BE3D50448B14F91217A4F6E5F707AB136CCD
CC397D5904EFD647AD58A250686C988DCD0D60AF90C8F743B36F01C6710BCC30
64B3896E28AE7389D260CF058C8C6AD163C0DF5E0BBE039E05E2833378762504
B1BFE55F731368F373A67893FEE2BCE051279788C2B84DEC2B9949EDF0284D98
93D32EC0B93813D97A5A5BE8273EF9BFE6410CEE3D00C4493AF9F83295BD8474
E4AF5A7A1EB68C7AAFD6A174B76EC9B4E80F6AAB458A36B2C37824D4C02333AB
0F9A9DDD4B765D10F4EED8DAA35F9880387B45785C2A6FED25180F4035419F93
9C705C3684DEFF82699C0F42B3D41AADEF9B662D57A9606856988E5FCA6F75FF
6986C15FD8853F68C1CB8FF0A11A29A194F787E3E726E23D8D36BA949D0D096D
862AB1F5A86D963A54BAEFD7F9B2583757C5BC68427BC374B0F39678715ED960
B829F82F3A7C8499C2AF930E0B2FC5A7BD59AC2B1170284FA71225B2BC80AC5A
EE4CC32F028980AA50C1E23A72F94F87EC7DA4FE0E0621D3DF75109410D2823A
6D1577CC0581241F048E86F717D7A2336D73BE562C85B3454E1234FB2936EBDD
120C25F5D21D6AAB4741F4873B570A741D84055713EDDC3716AAD2FBE34A7E71
0E0CED48A5B259BF541E735B13603DD4C937A63573CAA76D89855669FAC0686E
34BAB0DDEAD4670FB7C6D147F17C6B958254CAE64800556902C4AD926799835C
517EFA589455B7C075B51D6AC3F83CBCFB1B6E91C44719E420C919C6277647A6
3C74D86EFA1D7CCD2010FD6DB0DC9C5A0C16160168F6ECAE3925BB9317209E37
F0D615FDFACCCBB612308A6A8E854BCC2E53C0D1A0C107602B80FD0E86AC1399
E1549EBBB0A7298CD32219D28A03DD2CEE45112F6079ECDDEF69309EDA85DEE4
195C55455BC1F74E72341790C7D7539AF7FD11D9ECE4CB10303BCAADC846685F
254301A7A5EBA60ADFF38A98678C5E4FE02C951B474E8A28167199276330C1D9
BE93FD9E863241BAB16D3438343CA73C4397E0F057551C9914AC5CED1648CD4A
D694B191032B37C2743AD77908B0B77DA18AC90D5A796CCC0A8776C2F6D96D90
02F1D8386EB2733ACC08A043C950FD28C140B5FEC871482DB11084E021F41AE5
65E18587AEE74DA8108708C1B7903BDF610105CA3A2B95034D21730DBAD665A4
D654226B03E4DEFB70112BE7F4212FB8E2A9BA73876769BD3EBCAA2B6F925AC6
01D2358D2F60E741D6C3AC8C9C9429877A4FDB250372CF4005094B9F67493940
7820EFAC4D16FD02C19C536ABF17A956654AAA24BB133273697CD318EE0DD22A
798E66348FE702D99EC976863A409A22B2A1B061BD631FCF4C44224898CDDEAC
90ED022D7C663EE7E5552C76C8A4EDF7DEA04635279DAE2699F46725B5401901
C19322F122FBC787C9B2D95CD0A7D663523417DF9C6AB916A3E13042CA78F2DD
D02D8632B42602C9574C11295A73FE3649A98308BC5906C1DA356869FA6F8B17
45AD02A01894C458AB9007A524E4F3BEB89023D5E19A9D1C769735FB86586042
4EA7F5CD9AC218254644F4BA8AECF2933CFAD5F041561B6E99B217713DDAC9F6
A3D650579C2FC6D6C73ED842B33A93968A553317A3A65B4C4CD419C22A0535BE
BA631C1B78520E341F8D147A88D61C5990E609001B853B273DB144E56C64F6E4
BC4E3FB452F92DE7F4553BF893C52733A769C20B732AAB2589536FA3B43E9284
0BD29870227DA81ACFBA91FA58E49F57376C1D61036AF2A021FCB4165FF099E2
D5173413B3995A7DB9B4C56C828F8A8123723BB19C1FD74FD12D112FC2BB60E3
AB70FBFE96DD4F8C6045871AF6D7D5344233A142B25640DA0714A72E78561D26
48D5C9FB299244E7206F4406262F049E69436E3F4E4F21E1322C53EC350455A1
18F1A619D0F915CE2E135787095ACA9E34C4D129D8272BF483D6AB9D4C90CE23
089253F1471D419002CE2853EBF17B2BFAA43E6FA01E9502BCA8B6E796CAB5C2
BC92E5E75EABB424F4A76D7775162D04388915A627FB18F3A00A7C9BCDA908B9
826B6FA223FBE42E358D5A227E24AAA503465FE2F8371054525142EA6E8E4059
EC849B326E445CDA1CB5A9BA4C1D53A085DC2F8941025CF0A9567304F7220BD4
20CFF3B68095D869F594FD243E1FAE698D1F0F48699A2274C2FA0114E142484C
C9B8666D2EACE315A206FA71313511ED52F5ACE825EB8B0D07856FD1A62A9DAC
5314E2889642A90D429514EA2A9CD91560B291A50D75B7C803078A97DFDF53EB
3D5F54DA25ECA9329513ECA625CC1C5FC3AFB291A6B75A59326A0DF3AF3420D9
4859E53AEFC9D1DD75BF4A02A4EF592B6CB588E62804DA4A39C1EA340E6E55C2
3FC87A3D8B6E89C99A848AAAF1BD143560B559176CAF28BBC013A29DE6B7B84A
F75B80C7685B16F3F33A59C2A49FFF8E3B0CE768240F0E8CE9FF939E4B1A6365
66422E8B5673C1B4B0F44B1F08930ACC46A54A7D53A67F139F8A8EC00C8BD6EB
20AB66BC1FABC48E4ABE10DBF2F88D9725FCEA44A75FEA44CE4C991729C5792E
1F48ACCEE49E15DCFC537A774E8F036EA3BD1FB35B49AC03B02978574DDEAEB6
50F4AAB904D4645BF52AAA7CC267E0D478FDAADC38FDE58C8251C5D0FAF6B631
9C2E8169F93C1362FD1CA679E9372DD0CC0E22DE1ADB91D0CF9CB9086D116D56
152BCE329695FE8A8301263A563F05010888D8AD09FDD0EF576A9BB05860A2D5
C37680C27310CD065D11C45046EC33B07469F871F038836FD8D85DBA9094E105
CA0C6CF6C122C2ECBB711ACB05A14F2ABACB90A87376E5CD9F595A712C05C5AD
E464A27674D17659F0393B34E72C6CCA547845A2378726C4D21140028BDB77F8
E5DEC601FB46687480ABE94FC10E08E74B9EF99F6DFA38BE2AB67A2E8EFE9CB0
4860CC7CD07E19ABD3D670D728FF309E1ABBDD8EAC44147B1C4EC5B69AB30060
3DE208C51DBA95472807F69B0FBABA001A4C6678E3EAB438AE4B9A354A26C52E
AD47E736EE4ED2A73BC551E1C312D6188D585FFA65F1B9EC81442B2266D827F8
B1AD7AFDCAF519B4CF9F2C38886DB3187F017A7AE4AB7C0305AE4434AA09AB58
599AF55025C580888521594C4AB64A4DD3329C11D438C1A870AF1419DC5C70BF
EDBAD5B6494BEDC9B93B32125609E73D2688AF8ACA466BE1020BA7C5A5644557
706C5DE5417AE41C59114929063ACD50A454863FC28CDD650336305C4998EC50
D882303C5484F4B0AAECEAEBDDF39019471D590F75517B75529772E30AFA1A83
3AAB4BD8CB89125A86152F4E5F550CE9F130752655850B48AC0F32991B733F8A
C91FDEBDF9FBC66005A1999A95B5B8A42DE5BB1384878378F1C62A8C13005E66
A31AAAAFCAE6A03034E2281BEC8D06F7B41B0F7AB8889658F8649182BA4D5D18
60214EBEA6CB736B9DAF78508923FB4AF9CE6C8A0219D128D3FDB15075E1A6A4
34BB56668110E5E8E6A0B9A6A14A624CE60A6E3DD5B8629023DDDD021B6315D8
E511735EE061159166DD345CDE1D1B7E202FB67ECB593D89B8947159FB060F59
0C7BD589DB78A9BE7005B11BC046CDABDF99E80B85CC005E9F38AE9A61C6A3E9
D4BD3AD710BCBFEE6A59B9B386BE9C3B49C3C94D1FD9ACE5DCF6A944920C2BE3
6820C33BACF07CDB6519AE02130C77A48AB24EEAA0E659B2CFBD47230C9CD93B
74C35D073D78706987C9BF257404EB65E2585DD7181AE09F8158EF47436C5CC4
80B696EA5437DB036ABD86AE3EEC9E7B25E4C4C59ECD558CC0770215FD2A6C2F
5F38D97C4892F96B4F3FA9B6A691792CC86551B61136109F0882A6F15D27F407
22B46BB397952C22F5CEF718AB3E16447F3AB9CDEEC504E5B827D9700758EAA5
B2C901EB33A279F7E58379CFA54EFE3B68E676713AD26409B0FD516DB84C9511
84224CC3E87106F54FD5EC8FEA30F04635C5C40B4C62288AD8D91F2AE6AA15F9
635E667FEA067BF35CE781B7BAE122BBE1D9048DFFC40A5B2231EC937A3B42A3
6A76451BD57D238DD6D493F273BBA80092B2A70E7AFB9EE8832D60E91796C916
FAFE58F51818B80BBA57CA11F8EC42A55A21F2525A8CDD9D762EDD8A41EE4E5F
23A453A1067BAD45E3F4249AACD8AE81CEC8190320BAB06E31BEA649BA44E0D0
D3F672C5DD642799672615EEE9EA10B3EB59A224995A5899B0DEAB86EF868036
BB2C22F843DC9DEF3D9AD665E2A1D853C701509B8DAF0ADC8C949987274114C8
7D1650FB3E898887DBF8B69689C2E8C64F6E572793E7A6C09E2E8FBD40A8C86A
12C7211F164A664AB4471ABD516FA553023825560F2A47EBB86A7DB68B7EDCB0
E67478809CA0B8B5F8FD83C8F01D314781691BBAB97312696F1FDE872D43B198
62BAE7F32BD1C2EB1CAFEBACD2C3AF0C1B302A1EB4C0DFC4FF2243137D785270
5E5721472FBDB205FA901B21E502A8353C50BB0FD1CF2313F1EDA1F754EAC752
CC11E503CB8364EB4345774ABD146B245BBB3D45B3BA9AA26AC22DD822E1A78F
3ECFC2B41EEB8E26B97BE07E1C9CD174760AEDB95ABD6BDA0F9CE3B05FE61A64
BF5DD9D10FB5EC3B34DF5EBB3885DD93F596F6DEEB8D178E31A50D8E9A3B91AC
7AD30851E6ADE3488D1332A5452E61E272EC95038F690A22C84F21C0D4CF2477
C5FE356FABC7C519EED19577F644AAE52B17D6C2F443F272BA82573C00E33093
42340AFDD4DF9670E52D7342ADCC3CF24F0E2EBBEC84C9D839CF9231D4DE942B
7951DF1C59D04EE52B94A43FCB541391F4157C675DBF6435A39B07B08605ED1E
2CB6E07E53E253380154B270FA7C180D3C75E4E97576E4E233C47FB1D3742157
06BAB9E96762A4205CEBB60292C95281521F1879DCE35629CE680C2CB522DDF6
D31A83BBB45B47982A30F4E1A20596334ADEBFFD6326FCFEB0F4AA1AB03E729B
FC04CA6261D6F618620DDD511B6A9D5A0C7D486E365695F62E89B545CC8CE844
061FDAA949C019B2A9D595E26E133E012707E70838FD9A365515AC21C4095336
AE4AF891492A616CA35A39F54A755FAC27BCF0318D084C216AAE4D8724E649F9
FC87745CACA5F606F01E046C5D055FF7C6F42E0BDB28F0DD250E49BF134990EF
215B151FD8B9753F9A368AA737526FD85DB582C6B573815A3AA97B5426AE2228
81AC3979608E0F6D54C13A7FC2FE188BC2EDBB6BDBA64A16832ED1A51180EB5F
4907DDD6F7B6FC8AF714703346234243C1E96943FCFBE173A4F35BFE75D36A70
33833DF75864D200B51CA212C4C1A58D6F400C4EE0A8BC0BA268ED06E7866A95
5F580CE5ED6644CA87BB8582591BF7C8B4151420EB35CADAD85F8CADDFF3C1BB
7D707BE14EE4DDB9C019479E7993280F0682860FDDE22904D76F966910254484
8D518CC4549884F482C30D1201E367C524702A8CFB5FBD9EAF321A2AF2256EA0
675264922F9A98E6FBC6A4A8F0B89AE754BF7F8203F0C857CFAE8A868BC65843
9FA0DD449577EBDC00412F2189F2FF6EC30EC7E3EB3898E3D0A526643E1D0F81
D86CB8595D09B1A874789AEE574509F53229A3A1A11491A2B9C1C4DD2D5EAE1D
794E947C3EB1AD965E8A5A3ECEEBF44790D57FFB857764AB744E71574015D490
A70F55BE1A6C135C1123CB216D77DBAFA40D35153C336C37E21E3E82144C358B
1B12E2576B96D7BC6E2945F28F1190BE3F8E827A2C45FC0D458862FDEC5D4C29
6513355284167021769DB33FEE92536D6EACA3ADF556AD35A422B57F2F96695E
1B7AF2209A9F760CD738AECD03815FD28E46480B0DD91583A46211BADAE8BB74
A7AE285D1056E9AA326C57BC14E73DE7F8CF94103AC36D2E1E5348F7B21595E7
D6B4DDED7C64E3B041A69B244304F5D53C4E9A9865887D4EF8AA7A6B733C8554
4D5156545CE3B764E3D4B5C994BB09FDAB03798D1A8F33B0F3A5B440875045EF
A355DA1239E801156C79113FC7B3227EE1AA1952CF163F5276A6A2AB59D25202
D8EBD49B1FFA740383650449040A6B987EE7A515136B0C318D24B27769411E25
0F791BE1D5A2B2F5F734F31C7B60FF9DB2883436956E4FC7FD9492E43D4BB95C
F70387C6270755A3BE7042F6E114D3CA0E54A50A66A7F0E606D1ED7577FF4552
9994A6962337E2BBC4518671B8D6440A282859DB641ED9F940FE498BF7B7E81E
FAF7223E9D7B39DEF7203248BB6D5ED9A60D5F7136CA6F57BB4D643B1ACD9B23
552B3DECD6C2D0FAAB985B0E4EC4A6B774FFC70BB2B2BF33844A8AFC99172FFB
C1DAF9211AC4DEF1EC12BF577FA14894599075C8F6C39BF0BA5A856038C66FF8
D05E8150706DB680A18F21C80DACF9BC45510FF7DA8B60F5E3A02C8C888125B1
BE5D07B435D9A2B7956D40A05A12865BBD9A102972038E3EAAA9B441F5418A96
5743DFF98E13A1421078A897B2769C8ABD0E1D2DB2A42248C0B46A51D65D864A
A64BA7D533B5846074A53BF7AD5EFD18475BA1B1C4C450003AA088CAF6974587
4369F338D8DFB0DC8EBB851F8D3A0BFC1A2CCE0285A31CA798AAEDB0A82F7897
27E96AE4B9E37C2C07EEE672915B13F0216E0F7E246C6A0D4B52798E463A1095
00B93B15E5B0ADF8353B8551846D5D5DE99982279DA33F642F5DE54FE7B7BF4C
8CBF53A7FD78362CFB2AD31954A1FF65B886158F4EBCCF7BA65CBB6605D4D72E
11338D87D5B0283A427FFEFA417DE903CEA643F86CCD91AD68231294DA53449E
C4DB5B0EF2EF5BF3CDBC4423FB43E438072C9B0E5AC8791A6AC47989F9FC9DB3
41D041445C1A28388446B7F4833C840CB1841127CC2A33364BBEA0A2926D9BF8
CAA1073503210F4458873499037177F9D80023F80B356316C2248132101596C3
94DB816AC15644DC7FB53864148DAFA20108DFB5B9419F33CAB465215954A65A
1D12A29330A7A80AADD39028DD39C90D8384525885DBBB444FB4437F53346540
515D2DCFB7CDF2A9BE36AE1214FE78D7655957F1D1D4A08DA1653959BD6F18A5
93F7F2F727BAE27D7A662029399C84BC310080CD8484A858274DF1A5A232B253
3A2295F0963344C2A01874EBC120B8A728EC0011B6E29D3470044195851A0A7F
AB1BB9286229CC3069BE68899BAEC3E019E37CF0B527D14F008E134FA0711FE4
0BC8A926EBB52E3630FC1D9B1FFB3BFFAA6D0A20C0381ADF48E4D901BCB4CBA0
88D3922EEE7150107E3A46EAF7928ABBBD8713EFAEF12DDF571ABDB6295AFC0E
2909211E814D3DBC8D8D7589DAF8148D380D77F8E7DE4DAE00D18C92B17B96BB
4B92ED7DBAD6C2DC672BF913ED44A41A2D1CFF154864AF6B9D3EA5F9A3659664
24B74C146E164A7004ABC616CE73F6320E7FBCE9F21123F70792CF315BA9FE42
77CD2041DEBCB1FC8F4F3B288515CE437135700AE71EE1BE6D51D46599D8C2DD
FE94A2105FC2D898DF5FA520397B3E63A1C38B55B74C9B0A9A6BD49C275E97C0
09F3BDE45B9E7C914E0074C4F6D3A398A33A4BBBB1AAE1D70B225FA38BB516F3
DCF11B96F0A32E97E31CF409C756D57A4F3BF0C1B89EBBF3868AA9226BA29D1F
A9304070A0998C44F8AD14BB8222997715DC0FC964B4253D61A9F5AB6BB0C8DF
6703385206BAD842DBED047CA3AAC740FB5DDA67480BEA1EAE5734897477BA5B
FECD08F2E9B0678F1C75B4349EB32477B037B0FBA022555B0FCC1421A0B660B7
381809FCD034531A21651E03B5EE5C4FB7CDAF903BC5C04FD202711D985DCF7F
1E0ADA46FD65F0C02BA7606C632D584395672FC8D34605CAE39C1DBE132F9DF6
682D0A24963EAC7489FC2A842A1398CD00188333431902E82B66A7E9B18B0626
96D70B11E726BCB1551DC4A3348F9E297669D5738F398882D84DB4F253934557
C4E1D8CAE8DF97B10825C22E2C93B0CC107A3B52EDD9A66A32D8509F3D057C6F
2A7D77A990393CA5CBCA996BE2E5186292AE603172DC7604785D8DFB04B19ADA
8AB86DC029E9A4E7364F6C12A911BCBE921B6481C78754B67CD39A57B6212EB8
CFEFA0376F2EDCB7189D780C435427C9861CC7439ADC930CF4984877DC526ACB
DE6C44C7E79D8AD2F983C118F3C09698E11262B6683E14ED09E3E7A0FF3C557E
9947EEE2B94EBC03B25993FC39020072C76100FCB46EF1BC917105F07880B030
5D319780E3AA16BDEBE29D419638563A1B51C0CB351EAA748840D9533BC0CCC8
EBCE3518939CBBFA912C3C00E2C7584E5A8209660FB71704D2F4FE4379473A94
A929D3FC55C12E99857D1CE11333FF9EC1DAE69F73676308A07F230EDB999021
32CA5B6E0E95558764F5C06C812437F4652FC3F2D13B57FAA8454EEB264E6620
BF46DD1ACB500ED7F8880BB8CA52C667FF8F76A79B4F0C4614B011A11D2BAD11
6266894AFBA1C099D37DC99A4BC658B8D7EDBF8D085F082F84A35063986A42B5
47E2F4A47BCD48D90A81E8FD1B80C98FE3E0C0D3075913FE201BFC42B80B297A
3DB0DA138A7622A931DA293B0F8141482CB85FD4D24DB03D753F260A585D552C
DC9E1A768D4CDA153DC7E4B034607AFF88F73C5C8DDE321B1A8C04E3455921CA
39D69ECB4D0391BE0894F486DF1F5610866A46728049B116F1096AD998FE4B93
525C3596EDD533D8FD589EC2438A167DD3799972464CE75AAB769EF04C868510
8FED42F6736BD633979FC177BF35A0C7CDDA021818D172D0B301289648A50038
8A82DB4B4AE40B4EC3BD0689656726A6B409C00F85426E37C3B5EE1F64791350
F9904C67F3EE4D176E0ACB74ABA92F787EB0C7ADD36B09C1B2AC6B34A79E0D13
1D24EDE0B62E88412AD2AD0D7155A362E33380499DDCC5A34150641C3F730293
FCA8CAD6BD29E7A56CA6C72090624BB22393DDCFA0DEABB55FDABE2185D319A0
D6521A18E0988F4FBBF1F7E05C107FAE98A06B0B2171F71059CB88A65819C362
63837C286D95B74CF2C1B749C83E5659A675DE5D69B059AED17AD3428FF653B6
D7A3577C061FADC52762873AB2E3D30133869E760494BBF700032AE60CA837F1
565F93C6A55EEAA151CB594FD18436343E2368691757288141764F6059C1CB9F
53CE18AE86B143AB0A7B3B823494E5338AB2A33D233E742AB7A3D3E9B8AEDA35
A02982DFE077B0EDAF7128387ED7DAE314131F73CEEBD31B685E284040428A1B
02D5B6A9A3C7FB8B5B783D2B072F2947A4B48948F5212C2422491794B7D074EB
B80EC2B9BFFF5D80A570E60FB5B9C8B2306700778714A8D73AB7067C928CEE76
076614554A8A4BD86ABDC4C9CAEE406C6D00145827F9D1308A8AB43EC6FD9462
AB4F9299CDBC1878B99B18F0DB38802E26096411BEDDE2D2E009BA42B766817C
FAD053A33161B724B58CB4DB8DA992EF8E687CB8C8C9ABBA2509CA54C0A1277E
33156A49A2E357FDA997B47A98692DBD32CFFADA218F5C8BDAB83AD72AF6DE40
2C14D50A0C07A1775D99BE47E459BFDE27410CF1220E3C10751861C97B184170
D76F6725FAABA0BA75AEEE48D9D15A6A6B4A8E7F10C06183E0564799D5CF2248
9D750E1F90D7D83393C5458BD47674FBF991C141BB4DB4C9A0FAA9B153DD079F
F9C37AC8279D98CC147BCF97DEEB1C47BA7688CBC8A1BF4D4EE236657A32128F
11F44BEEEA3895088CEABFB13763E23F7A0632EEEC9761788E2ADA7FE364EAB9
512F676D6751D0AE2AB43E7BE327F8EDCCCDA12D3AF4DA7D492F59512FEBB187
BCEE95F77B140C4E1569FDAFBA3FEBFED303955BD6D07BE3C04779BDBA9DB600
C3F76C0B1157E28DD3226CC98D868B701CCFD802110C806D610735E555355DB1
8A6ADBF9A26DA7B9041F707B1129C0542014747841061307BF8162C46B7FA4BD
0E3136177AE5F2D7680B5AC4F1E8AFC53632FABE0EC4C3E00E05A20FBF0CBC98
ABE4787F0C930A50CBA3BB09EDBDD21748571BC36B2B23CA50237ECEE61FA870
B5E85FE638A6DA6768F5259A8FB8E43053F166FD91499D6930D8F402E2B47EE5
F256887E252E8CA463349473A74C77D9A907DE846C700A361E17338C38E8EDF8
7144ADE9C387731AB6401118F01005382D31E5A81535F9CE0B7E6B5F8618D50E
13BDAC1E5B01A98389E4459F4A115524D2B9BA8A76DEFB511C7C5CFE34EC50FB
54E60686FCDE11D06DB1DD34BBB15096D6BEF484DCEB99A4D0F2BB0F06B090FE
DA3DAB617CA8B941DAF09BED2DA9480A4FABD02A8ECEA2629175A4E20501DE9D
3DDE9F3B04019CE0429D795B6DAA96BF93F98D6D7E5BB01CF50D7250A67C5586
AEA13283716F280CA41893ACE89FCF54B0DB548383DC9E4D7270F2D7AE47DA60
8A10A28DCC97C19EDB72B353A7CEE8FAA2264989271CCA4DA32D528C095A06E9
27B6A54E3DBDB13194ACC872FE96196AB633FCDBAAFF462689F3F8B0085D6E32
5AA6DAA779367EA6EFBF66E92CAB692688BB2C92A3DFA43116B5D4703D24AA35
C80512E08E3D6ACBE78D9DF95801B949F9239FE99ABEFD042FB433C40727E0EF
2EC45D278BFE5AF6B9594F71D1AA98ADD2B1FCE5C56C3DBCA56A7A23815C4282
4C8E8D07EB36E2C02406F91150E72A72AC6033F543ED44CA27921367AC9D055F
CE0E10AC3B20EF66824634E30399D6E9823434BFCFE218A416606473F7FDAC68
C34527396D477DF5DA02B8E850E7E33BD873E89803E08064DE271EC6D9CD0AD1
725C647869CB59C325039D7B4B66F1511532CDFAC19DB453EBD42A52CAAB7D65
D7647D9DCE39CAEB487A7F68E5A7BBBDC84CEAA1C542108DF48F1E54558A774D
C01D44CA878013BAC333BB85423F1D3B60CE1AF9D6898F0615B055AD66344EA8
2E1C150C950CF2894F6A1FE887762319F0C538AC37DF738FC67E499ECC72A5AB
F054FCA653908606A501B4A1296E0959E0B45F39D796E529135135F8975D11C3
ACD43DDE897135EA0DBA28ACD6D62DAEE44336FC9DA7B20402941E2A6E62E350
6914D39177F466F9EC1FC230C8E96FA6F8704003D6109121889E9B166E2A0701
E068F175E4A7A7BA934AA94D14460357F6774E9941C942A3DE67AE8736B61CD8
A451F084ADD6C1690F728B25FB5F2C40B52BE00F21532431D4BDFA5D5F30C197
6391B2BF4475A6DF0DD7125BDFDD1DA8E941740F945C1C44D8321AD262BA1A67
7E992EBE73868D7DC93AE8128A316C9936CA898408CD58C89B4782AC67FFFB8B
56A870DCE6A9861EA3D513C44963E0C511DB492C8112987965CC2B262AF0D9FE
A47C5E153F0B30D510A26AD4F332D30B807B2AD6BF1F40F6A5AF9761DDDEA7BA
5B540FF8D63FE63EAF6A40C028E4DA28F1C2C1E9EFD4E332C0EDD8A9ACEAC372
B2ED60320110F1BBA0754742838DAC1E7E5FA269D63905376327E57110CC96D0
E9D7C44F42F3E381CD46D728B26CAB764A88339D1CC48F4BC0A964E89E0D58E8
CB387E2135DFE8CFA9D70992C1F31DC6E96CDD5EAF217ECF92E07FF8136BC14C
665B7BC757AE3B8E9161D5E62D1AEE5ACCF0934CC847B6E820560107B7E6CF97
66E53E0A3939E96832CF37FEDC3562E7267FFD4865A4AFF118B8306BA77EDA3F
071F2D1ECCB4AE8D8FD27767696AD7C2B00A12F6ECCDE8CD6343DD350719D605
B19618B8C56819C4F925FA1E30D483A13FFF563634315BCB7DF8AB5E8FB0DCC0
09FA8F49F0ACBB8073A89CE87B707D5230422F24D52F77F673C8857C4C548C41
F9852B8439F58B851E3D590052588B1F5D2556472D6B14FF3AE11E1647D37136
37F879B4E4B6E26022BFE9B21C2DD35B82AE880163A6B70A0EF9B34D445FF8B7
4EE2911052818AEBC8D7044217DB8C848060E8B6A281E109DFBA7236545ECE75
1B1C3D80D47E65F96B10680C9958895ADBE5ECC712AEC5D00334A25AB8A8BF53
9E7C65C5DBDEBFFC79C8876ED85E4CD274974298FD04EF020771DC1625EE71AF
76BDC4B04D4D6BCBB69DA84A1F1CD1E050925DAA03063CA42FCDDF54D6926368
92F4AB1B5291D55EB91450BCA8703FA87FB6ED0DFFBC1632057C0359DD705C9E
50F20E4F4C0BBA2ED84E478DFE9F154411D1ECA405CB7B296A3287CE0CDE5ABB
990002240421D5CC1982688F90E48251E0FB29D37B6A6416DEAB2ABCAB8A5DD2
E82B98562114A97BD6BF37F4553C6953C131528570DF12A892DAFBC84546E491
82D99911A676838FE17CD08C9DE10BA782752E6F2DDEE408E891F3B5933CD591
8D39C64B0B338F1DAE95596D50301259C3E6DEA2A937C265CC28A83E5D191264
F60530F8C630CFC37B4FA7F0DD62426C746C684FEBEFE922B50F26913AE81AA9
62F5928E8D0AE3ED989032C0E77CF7187D7C4B6DA502B9DD37E88E604E1D6311
B5E25C24724B377A0AF7B5B547B392A858D3BFC82B31ACE8EB47667E85D03D18
85D01F9F6E5FE67208E35BBD63F6E5038F8D7B646D901FD9C065EBCF87CF5809
A48C5FDED8DB1484EE65BAF874894B2CF3AE712E3D82C36B6B30A4B0806C5B77
4CF545AA6AE674D39A1A4D77AA69F7FE1AD9742B065DC01D953688F400BDBB94
5474A96B29A309C8C67EFDF05CD655D5597974214FB30A8341EE704041B0234A
25D81DA09DC8D00CD6069FA5FC6F975B55F2AEE3431FA9FC52962A0CFCBD3BCE
474C69E8A9E555F3B5614676BE9610015AED33C2B11045FF72F6A026600C681A
801856CB8C9C9CF0112C9BD7B7B6A608DA5D4D1309
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 37807469 18671026 1000 600 600
(C:\Users\syjintw\.matplotlib\tex.cache\d5\d7\d5d7943497db2af6620ad6a503478637.dvi)
@start /Fa 137[95 95 1[74 64 1[95 95 95 149 53 95 1[53
1[95 1[85 95 85 1[85 12[117 1[127 1[106 3[117 1[74 5[138
127 10[95 1[95 1[95 1[95 1[95 6[64 64 40[{
 TeXBase1Encoding ReEncodeFont }30 190.951 /NimbusRomNo9L-Regu
rf /Fc 139[23 32 28 1[42 1[42 65 23 4[42 28 37 1[37 1[37
13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }14 83.022
/NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1767 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1767 a -600 1767 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
90.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]]12 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 -600 1767 a @beginspecial 0 @llx 0
@lly 575 @urx 284 @ury 5750 @rwi @clip @setspecial
%%BeginDocument: C:/Users/syjintw/AppData/Local/Temp/tmpvon84qtu/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: compression_decode_scene.eps
%%Creator: Matplotlib v3.7.1, https://matplotlib.org/
%%CreationDate: Sun Jan 28 15:23:38 2024
%%BoundingBox: 0 0 575 284
%%HiResBoundingBox: 0.000000 0.000000 574.740976 283.832457
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
574.741 283.832 0 0 clipbox
gsave
0 0 m
574.740976 0 l
574.740976 283.832457 l
0 283.832457 l
0 0 l
cl
grestore
gsave
84.524373 59.192457 m
419.324373 59.192457 l
419.324373 276.632457 l
84.524373 276.632457 l
cl
1.000 setgray
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
150.47 59.1925 o
grestore
gsave
144.741 36.657 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
251.924 59.1925 o
grestore
gsave
246.196 36.497 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
353.379 59.1925 o
grestore
gsave
347.65 36.497 moveto
(psmarker2)
show
grestore
gsave
162.961 7.2 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
84.5244 93.6528 o
grestore
gsave
31.696 85.725 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
84.5244 156.702 o
grestore
gsave
31.696 148.774 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
84.5244 219.752 o
grestore
gsave
31.696 211.823 moveto
(psmarker6)
show
grestore
gsave
22.736 67.894 moveto
(psmarker7)
show
grestore
4.000 setlinewidth
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 161.077821 m
201.1971 211.97132 l
302.651646 167.155786 l
404.106191 173.139176 l
stroke
grestore
0.750 setlinewidth
0 setlinecap
1.000 setgray
gsave
334.8 217.44 84.524 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 -4.25 m
1.127113 -4.25 2.208214 -3.802193 3.005204 -3.005204 c
3.802193 -2.208214 4.25 -1.127113 4.25 0 c
4.25 1.127113 3.802193 2.208214 3.005204 3.005204 c
2.208214 3.802193 1.127113 4.25 0 4.25 c
-1.127113 4.25 -2.208214 3.802193 -3.005204 3.005204 c
-3.802193 2.208214 -4.25 1.127113 -4.25 0 c
-4.25 -1.127113 -3.802193 -2.208214 -3.005204 -3.005204 c
-2.208214 -3.802193 -1.127113 -4.25 0 -4.25 c
cl

gsave
0.298 0.447 0.690 setrgbcolor
fill
grestore
stroke
grestore
} bind def
99.7426 161.078 o
201.197 211.971 o
302.652 167.156 o
404.106 173.139 o
grestore
1.500 setlinewidth
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 158.33517 m
99.742555 165.466061 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
201.1971 162.720258 m
201.1971 266.748821 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
302.651646 158.064058 m
302.651646 176.480796 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
404.106191 157.660542 m
404.106191 190.546966 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[16 6] 0 setdash
0.867 0.518 0.322 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 132.081388 m
201.1971 121.255801 l
302.651646 122.132188 l
404.106191 175.799862 l
stroke
grestore
0.750 setlinewidth
2 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 84.524 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
2 setlinejoin

0 setlinecap

0 8.5 m
-1.908369 2.626644 l
-8.08398 2.626644 l
-3.087806 -1.003289 l
-4.996175 -6.876644 l
-0 -3.246711 l
4.996175 -6.876644 l
3.087806 -1.003289 l
8.08398 2.626644 l
1.908369 2.626644 l
cl

gsave
0.867 0.518 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
99.7426 132.081 o
201.197 121.256 o
302.652 122.132 o
404.106 175.8 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.867 0.518 0.322 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 122.863562 m
99.742555 150.277453 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
201.1971 121.022518 m
201.1971 121.527071 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
302.651646 121.539208 m
302.651646 122.869867 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
404.106191 155.535776 m
404.106191 196.177438 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[4 4] 0 setdash
0.333 0.659 0.408 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 69.687673 m
201.1971 69.857907 l
302.651646 70.891917 l
404.106191 69.605709 l
stroke
grestore
0.750 setlinewidth
0 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 84.524 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
0 setlinejoin

0 setlinecap

0 8.5 m
-8.5 -8.5 l
8.5 -8.5 l
cl

gsave
0.333 0.659 0.408 setrgbcolor
fill
grestore
stroke
grestore
} bind def
99.7426 69.6877 o
201.197 69.8579 o
302.652 70.8919 o
404.106 69.6057 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.333 0.659 0.408 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 69.076094 m
99.742555 70.355997 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
201.1971 69.511135 m
201.1971 70.217289 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
302.651646 69.838992 m
302.651646 72.323139 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
404.106191 69.145291 m
404.106191 70.444266 l
stroke
grestore
4.000 setlinewidth
0 setlinecap
[12 5 6 5] 0 setdash
0.769 0.306 0.322 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 128.506486 m
201.1971 146.910614 l
302.651646 137.175782 l
404.106191 180.497045 l
stroke
grestore
0.750 setlinewidth
0 setlinejoin
[] 0 setdash
1.000 setgray
gsave
334.8 217.44 84.524 59.192 clipbox
/o {
gsave
newpath
translate
0.8 setlinewidth
0 setlinejoin

0 setlinecap

0 -12.020815 m
12.020815 0 l
0 12.020815 l
-12.020815 0 l
cl

gsave
0.769 0.306 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
99.7426 128.506 o
201.197 146.911 o
302.652 137.176 o
404.106 180.497 o
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.769 0.306 0.322 setrgbcolor
gsave
334.8 217.44 84.524 59.192 clipbox
99.742555 127.144618 m
99.742555 130.107941 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
201.1971 127.012214 m
201.1971 182.022841 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
302.651646 127.598574 m
302.651646 154.962026 l
stroke
grestore
gsave
334.8 217.44 84.524 59.192 clipbox
404.106191 153.3891 m
404.106191 206.801897 l
stroke
grestore
0.800 setlinewidth
0 setlinejoin
0.000 setgray
gsave
84.524373 59.192457 m
84.524373 276.632457 l
stroke
grestore
gsave
419.324373 59.192457 m
419.324373 276.632457 l
stroke
grestore
gsave
84.524373 59.192457 m
419.324373 59.192457 l
stroke
grestore
gsave
84.524373 276.632457 m
419.324373 276.632457 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
435.424373 127.989632 m
562.940976 127.989632 l
566.007642 127.989632 567.540976 129.522965 567.540976 132.589632 c
567.540976 260.532457 l
567.540976 263.599124 566.007642 265.132457 562.940976 265.132457 c
435.424373 265.132457 l
432.357707 265.132457 430.824373 263.599124 430.824373 260.532457 c
430.824373 132.589632 l
430.824373 129.522965 432.357707 127.989632 435.424373 127.989632 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
1.500 setlinewidth
1 setlinejoin
2 setlinecap
0.298 0.447 0.690 setrgbcolor
gsave
440.024373 247.882457 m
463.024373 247.882457 l
486.024373 247.882457 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
1 setlinejoin

0 setlinecap

0 -1.5 m
0.397805 -1.5 0.77937 -1.341951 1.06066 -1.06066 c
1.341951 -0.77937 1.5 -0.397805 1.5 0 c
1.5 0.397805 1.341951 0.77937 1.06066 1.06066 c
0.77937 1.341951 0.397805 1.5 0 1.5 c
-0.397805 1.5 -0.77937 1.341951 -1.06066 1.06066 c
-1.341951 0.77937 -1.5 0.397805 -1.5 0 c
-1.5 -0.397805 -1.341951 -0.77937 -1.06066 -1.06066 c
-0.77937 -1.341951 -0.397805 -1.5 0 -1.5 c
cl

gsave
0.298 0.447 0.690 setrgbcolor
fill
grestore
stroke
grestore
} bind def
463.024 247.882 o
grestore
gsave
504.424 239.672 moveto
(psmarker8)
show
grestore
1.500 setlinewidth
[6 2.25] 0 setdash
0.867 0.518 0.322 setrgbcolor
gsave
440.024373 215.321751 m
463.024373 215.321751 l
486.024373 215.321751 l
stroke
grestore
1.000 setlinewidth
2 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
2 setlinejoin

0 setlinecap

0 3 m
-0.673542 0.927051 l
-2.85317 0.927051 l
-1.089814 -0.354102 l
-1.763356 -2.427051 l
-0 -1.145898 l
1.763356 -2.427051 l
1.089814 -0.354102 l
2.85317 0.927051 l
0.673542 0.927051 l
cl

gsave
0.867 0.518 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
463.024 215.322 o
grestore
gsave
504.424 207.272 moveto
(psmarker9)
show
grestore
1.500 setlinewidth
1 setlinejoin
[1.5 1.5] 0 setdash
0.333 0.659 0.408 setrgbcolor
gsave
440.024373 182.761045 m
463.024373 182.761045 l
486.024373 182.761045 l
stroke
grestore
1.000 setlinewidth
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 3 m
-3 -3 l
3 -3 l
cl

gsave
0.333 0.659 0.408 setrgbcolor
fill
grestore
stroke
grestore
} bind def
463.024 182.761 o
grestore
gsave
504.424 174.551 moveto
(psmarker10)
show
grestore
1.500 setlinewidth
1 setlinejoin
[4.5 1.875 2.25 1.875] 0 setdash
0.769 0.306 0.322 setrgbcolor
gsave
440.024373 150.200338 m
463.024373 150.200338 l
486.024373 150.200338 l
stroke
grestore
1.000 setlinewidth
0 setlinejoin
[] 0 setdash
gsave
/o {
gsave
newpath
translate
1.0 setlinewidth
0 setlinejoin

0 setlinecap

0 -4.242641 m
4.242641 0 l
0 4.242641 l
-4.242641 0 l
cl

gsave
0.769 0.306 0.322 setrgbcolor
fill
grestore
stroke
grestore
} bind def
463.024 150.2 o
grestore
gsave
504.424 141.99 moveto
(psmarker11)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 1767 a
 /End PSfrag
 -600 1767 a -600 -77 a
 /Hide PSfrag
 -600
-77 a -1285 -20 a Fc(PSfrag)20 b(replacements)p -1285
11 685 4 v -600 15 a
 /Unhide PSfrag
 -600 15 a -695 151 a
  {
 -695 151 a
Black 0.000 0.000 0.000 TeXcolorrgb Fa(4)p Black Black
-695 151 a
  } 0/Place PSfrag
 -695 151 a -695 292 a
  {
 -695 292 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fa(6)p Black Black -695 292 a
  } 1/Place PSfrag
 -695 292
a -695 431 a
  {
 -695 431 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fa(8)p Black Black -695 431 a
  } 2/Place PSfrag
 -695 431 a -2083 611
a
  {
 -2083 611 a Black 0.000 0.000 0.000 TeXcolorrgb -41
x Fa(Compression)50 b(Le)-5 b(v)m(el)p Black Black -2083
611 a
  } 3/Place PSfrag
 -2083 611 a -982 750 a
  {
 -982 750 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fa(2000)p Black Black -982 750 a
  } 4/Place PSfrag
 -982
750 a -982 889 a
  {
 -982 889 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fa(4000)p Black Black -982 889 a
  } 5/Place PSfrag
 -982 889 a -982
1031 a
  {
 -982 1031 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fa(6000)p Black Black -982 1031 a
  } 6/Place PSfrag
 -982 1031 a -2184
1211 a
  {
 -2184 1211 a Black 0.000 0.000 0.000 TeXcolorrgb
-42 x Fa(Decoding)49 b(T)-7 b(ime)47 b(\(ms\))p Black
Black -2184 1211 a
  } 7/Place PSfrag
 -2184 1211 a -812 1349 a
  {
 -812 1349
a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fa(DJ)p Black
Black -812 1349 a
  } 8/Place PSfrag
 -812 1349 a -834 1485 a
  {
 -834 1485 a
Black 0.000 0.000 0.000 TeXcolorrgb Fa(PR)p Black Black
-834 1485 a
  } 9/Place PSfrag
 -834 1485 a -1007 1626 a
  {
 -1007 1626 a Black
0.000 0.000 0.000 TeXcolorrgb -2 x Fa(T)-7 b(rain)p Black
Black -1007 1626 a
  } 10/Place PSfrag
 -1007 1626 a -1049 1767 a
  {
 -1049 1767
a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fa(T)g(ruck)p
Black Black -1049 1767 a
  } 11/Place PSfrag
 -1049 1767 a 4192 1767 a
 currentpoint grestore moveto
 4192
1767 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

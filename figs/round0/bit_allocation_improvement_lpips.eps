%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: c21ce5c940e4c6dabd1a045290a429b3.dvi
%%CreationDate: Sun Jan 28 07:23:47 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 410 260
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL CMMI10
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\syjintw\AppData\Local\Temp\tmpyg9y0qve\tmp.ps
%+ C:\Users\syjintw\.matplotlib\tex.cache\c2\1c\c21ce5c940e4c6dabd1a045290a429b3.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.01.28:1523
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DE98B96A3F7E36CB37CE1EB1D
11E2CBF99F15F7C116DB632EB22A6C7A3C921FF716E9753F4068CD684517F327
58E8F5D1A42D40CCFB40C13249D90B00E1FB1F743CA143C191A39BA398B920B5
F25683596AADC66BF831DB6A5435937A0B37B5F1BC381AE33AB09D8ABD419796
3F247467259BADF061BF5F70E4BA0CD7D2227F5E20A5428CD87225C7FF28FDCD
4FB898A052A0B1A17FE1A99D03F851BF811AAE848B8F7F77D5075DEAF483E279
574CA2D0D685C7D7F56248A987EE709782646D145FCBC3309933A1310FD71115
A0B725E3EFD5C01936F03C32E26E9752568586AF8F68C03A0B150E234D3A5C32
A6EC201192FFD8BEC784F4132DEAEA3D477C0433ADAD9AA04C4B6A9E56344507
DFC06A839C74458AFE461803EDAAD78BF5F7A738766E78C1AD7686A3C54532B0
7F8856E3D629286E320BE4C2E6FCB731F6D39DA40442E648D10AADA23516331D
6E99469582FAC2901B629CE4137326A88F6E1DEC663321202D699E63A013EBB1
69289FB9333B6AEBEE1DE23F9179E939E8E50F7BE4118ECC2CC40F691AE9748D
2DD76D9D1546488B7E05ABAA458C5CE797A327685A564C11295A73FE3649A983
08BC5906C1DA356869FEA0B72C4FBCB931F9ADB92E0D1754C712F72AE86BB3D2
37159A840CCDDEA5AC5DF7A1CA1DD80CDDDAE0FBAB39361975EE9853129E4110
B676D6F655096130B2AFA9482F6006794C8902C6C1FBA20DA71AFBD8FF43B726
6414BBE146EBABA64AA813A47FAE8372C5528FD147FC39FBCE99CD1E5FFD007D
B0131D0FDB513D4F280E0FEE768A8A92CD12A452166A5C9ABE71B74569E1DD41
B82D849411C90C3CB8F91D3597D2B5C1C34689162EB4A741E46AD71C3E2F92EF
983C0CFF990C42264F805E66A8DBC8B1F083FC5F6136CAC7B79F5748CF681765
B54067A2EDE238F6657249CF57E563E6D290FB40D1348765A8481D1DE469E481
EEB8F8A422F2E0E9E655DFD6417DC8BC95BCDC6E60DEC83B2C8975577276FD8D
BDDE1366876EBCC64A3ABDC7D1A6C11C80CF098B6FF03D1FE08EF9370637DD9A
5DD48D0CC8F071BEF9B8173A6C4E227ED095BBA95B3DE028283DAAFF83008ED4
B19CAE27A55405DE1BC5680EEE1C7884E863992976D32D5EAFCE214A74C5731D
3162480D9F316B578CEE6BC5A4565BA159DFFDB5B99A76D4B0C9C7546F8F7336
8C496DF7CB909D84EF2D9C7E8BE72A74782342D4DDC371E175F725009AFAFAF8
DD4279E8708996E4389AB381E3DD97E48D7EE0788E7466F23FDFA93E8C92F737
3E2BBD43CB8103899EA8517AB8C18737EC2FAABD1BC09F6FA33793A8753A7F55
8D0C28196A0E97DA2C4EC52A24DD1FACDDFAD852DE16B4A1F2072361A0A55738
ADAFC1AC17B04381C6754327FA7C65AEAC1A283B0BBC4AF7638DA1EAE01CFE15
FB204291B0003D652DFCE6DA899EDC907556CB0EB4C766A2D241AD2F9E6D5C0F
6F6F786A20316B992F547DE9372FEEA0BE4051D0FA9138E7C6E4B118CC665F4B
861D3766A24140056237E05E5C4452AF3E1AB293BC61E4AFC91030E002C14B87
DD9FBA00895D87DC97B3C244D13204FC213738DB87C070CE821E7FB9FC44F311
B8FDB0C570F13EC21180CC9CEEC68B1E997B717212AFF80C67540AD74C1BD34E
71BC29AFE8BAF9435EBD71991A6EFE8EE62F1EA78757650E2AC26FD439BDC534
765A6E35825C99CB7AFE5A873340B50AEE34371DF153C879C33F36A5E3BE297E
7D1F11450DD0BCE7AA070D48FD2401FD0399A6CD1F4AD5BD84D00D951D4CF9A5
EEFBE4A7966EC86B1E0F410914EE8D007BA9988E5147C913B2E22993D3217C73
6570236751D9EF2217452644AA397156839E10B3B3588246A706074F0FCDD8D0
EF7ABD90A16A4715AC3AEB35D19BAB02EAAF362CB03E5798B0CB36A3BA67BB89
AE359A1FDD361632687A99AC68B43DF9DF3812874460B79F1B24A449A12C09EF
24314D339E2C6E281D166D457F08E37AC4B2F384E51CA45D81C33BA4D13E8C03
F4B60480E71CF05F787B2B565746C211F30813630C7EE7DC33FA186E0CF93660
BDBB489FB5C5BFD22467E3B7B7E93AF75D081EA69D0A80893F1EC15806130719
2A3AE791A62EF42340AE1622BE6C34C82424E1627E053537B46361861E4EAFC1
2788E020E9A0C5FB78EE0EFC3FC8C1455E18A3501C33AF14F3D1F63AD8688325
E8C9F79715F9AADBDA20625103ACECF98516B95A3F41631DB7CE4F1ACA970421
5BC52783310E19AFBAB852B9F978BA3F22F039CACA201AB53C958BF94AEACFF0
3ABA9AE68662D36CA6B019310EFC5E3769DEFCF23AA2A50EA767112553FAFB46
8FC3608CF7DD279C7F34A226735B43AE01A5A009985E893D87CEC69C9E0775F7
924DAF42ECF2B3442E7C3500F7B544A987BAA117DA42D1B95B1F28C870512F62
8D99E07D71199D68A13A22292766A0E5DE048A1AC552CF52C18D54BF73A461DE
673170E4FE3E47998C40E500D853A7C576BA1858239730BB638146311EA6E52B
F3F8341A47A9BD48DFDCFCFB4BB79CD74228D443436900EA4920AEE92DBF8560
A7283E0B99315D77913EC23B8FB48C6D935451EF314EA6827A8D32558EC9DA78
D231457707618FBC8568FE6087315E02952C4F82B3AC3556C4908B8334BD4FE8
422766A880F3518D6C47F0E1B15BB02C811F1ED8DD83CA793CACD3CBFE8B51B3
4114FDDCA1B6467A3BC36B977648CCECB95D1D16340FF238E5935ECF60D33CF0
386F6A52487FDDCB5590CE39EF65ABD2094B345C3C32C924A5FF3B7D3EC454B9
E8E4E4C1FBECFF2A27EC47A676B477BC897524A4C2516A81623DF9B8C9053282
4A7D11DCD5168A07714D3A3EFA21F313DCE5F0B872431A8F2E39E96771919AE7
E69326C3B4D429F58B36690887002D892611110BE6441A3A1DD0F7B24BDFBD6D
926AACC2535E73F96F0084DBCCBF094EA94D83A0E2F79FB6763CC98E3CC98AC6
D7B4AE7B66BD62757AEAFF4EE16223D7328E991915105EBCF84A9398B0AFB573
40655969C477411B057B7F925804A977645F780088058B2859EC036F5181ACFB
80209C99ADEB5AB816B0BEA888F989DB0251A3799F7AC8EF1B48785BA79FCB77
621175289491E7A1654F2D89AF7E35AA0F3A213360EB7C2C60EF8FA8F3AAD3AB
A246E860494281C0ADD4A7DD834FF84339766A71803F1EDA38FDC8AF770E42D3
24E8CAF8D64FF16C7C53E5B57EC5851634B78DBC70A30841017A5B1770BFFC22
E3411EA9BA0BE29CD57344A8C9D82393020A4AD2292E154F0AA840FD732E96C1
520A442A8E1CDF7E4FF51A7BC97A69878EB1640A50B166255CD2CAB98367D5B1
E417974F90371BF4BF97B675FFD859C9885E7F6A0CADC18E44BD1CC4065D71AD
EDD3D7EB4DFBCF0C6BC99FDFB74F740579C8460FA10794988A2FCCD91BFCEA5E
C4DE842DE437C3F5FF3D6957D1934E148831AE7C815BDCFDCECD662966EBD67D
335DC5F878639CEAE3E2E03FC534751C24EC1C8F1AB82953E9EA3115B3FCA17C
742D9DF10DD24AB48DDB4389A559822986C68DB89F3C4DA86F1EF4A2A929CB2E
4CF5ACEC8FB482C3BC1836A2326064C6850F1CD629A9EE05742C16C60A4341B5
05BB4602DDC56B18D23A932AAE28816D999955116FB5B015C6D1321FD2F42E88
1F5CBA918F299A849F5ED006AA52A23114F9209DEF4189B84A339700CD6E74F3
BF89884DF1DBD6646097540C5C81A8CF53AD64448E9130C01AB94B0831036797
24E41C6E007AC9E3956F1199AF032BA731BC15319B3418648AB7078D6097D4BE
1172CC5357F755C48E49F47B605A39502578556F255C9C9A2CBEDBDF024BC4FD
60E5C4FEE96C8D4DF87F7AD3E5839EE4BF82729FB02417D362C41DD7F51163B4
CCB1A9DAAF125E79D527CC49CF95075421F8D1316472E799644A9078F6F16DED
6074CD669B124A83338DD5F5C1685A091ADD31254F362C8F8D1E2155C032BB47
E25345105EA551265018388DE438DFD505DA670CF65EF6AD92D03992F39D274C
C65C06F01106EFDEC0C3D85149C4007FBF462413B4A0E85C7C9DFCF797C66F96
BEAF4DD705FE0D6852E151961A45C24034B9B61C5F1425E3C2CD3B01E5F0C914
295A9EDB37E05398A9A2DAA11F37FC6829EE4C71118AD145BB3DA2D8CC164F59
BD390F2DB7F78EE74DE932A9947B5FC0A83582F6DE53409BCECAE90FB4EC2C98
500772D1B72B841C1691C07BEB2428FC6F65CBA7FBABFD2A446D883D561A9479
3EC689B51255CF8777C1DB8F5B0DCBFB9C8A95985A0571E67A52CF6F2C8D59DF
2DD5881BE5AF673B1736FE39987766E9F9F6000B8FE97DB7A9D8C8A11E9D34ED
B183E471555163C794B0DAA79BE8E129E7F5C5AD1B7495C1BC938005F3C22E6F
BA8E9B22722DD25AE3BA2DEC2A0C92805152FD4EF643BE9EC07DCF509AF437A2
ECF2A65000E4BE6B9E623761D24C0B7CB02DD90DC8A2CBBEB71DCD80329D8AE4
7B8A922B0D8AAB4E42DE1B24F8D5F303AC2C71F002337E8D937DC25E40F84CD3
3FAD8F621EE0735D3640FF126847D225B597E0D475F3E0DD1B6911750F761F99
07A438DDF4506C6ADBAE868F82658A808785ED46B2205D9BCAEA85DAF9DFB14F
50F68FE09234A543243B3FF8E29549C849F55923903200566D86CC678FF6D5A1
99877F0481B1BFA806A353E325A73F311DE51A405899C9A7E5040AFBAC5DE1EF
BE83127A4878F4D0643460EC9526C92A00ED348D40DD39B82F01EC61A42E5D38
3DC3DE34556BEE9293FDD052114A597143E22330BF572FF87B00ECAB3D4E0B15
8B2BD84388135FB0C7E45F8AB5318584BDCE308E3FD6C0AFB248B4B9E79AB17E
A5130C478AABFE324738589C1E194C858081703C561E0C98DC65C20005D378BD
D7606E5E9FD2CBF46476A4C9577E0125810DE9DAB54738250EBE4A7C1CB52035
02748E5F6AFC8EE6E2EE98763933D814901FDEB3C6B68DF6324E9DAE1176C772
4CEE2C70F3A203377F7D1E8BE45FE62CEAC1EB396048F1CEFB98996C0D5FA0F2
BA58C1068659C262233501D7256FC7AE4D630F80323C7290B034173F947839FB
36A89170C0DB99DDAC5D864114C9F13DD817E4478A518F3406764FD8EFF23F00
F1E64770C7BB0AC835CD27980E86AE301E961A909CE457B3644337854329D8FD
22F12E56DE489EC021D980A32200FB6886033C180BE6C52FD3D93E5BA89D4A66
272C7BADE7E763339DBCC51E7325D97FE2133B2D5F0B8A72B4B3BE25B94BF57F
A372D5CF659CB8BCC3A264110C2C6A35909BA64CEE7B01A3527310A240490483
6E5C8BDAEF59F579B6B6AB8BBDF46CF5FE7F2BAAADC31A8127A48F04B774B3A0
2F0136A7CE3A8297DDDB84A8804D3B26FD8D7C552C5FB506EACF9D185A23C083
7000F3241CD64356A3F58F11C489D19100E9B08ADA2B5C7CE1BA08D29B5A677F
C1ED77F2AE164861163820B9E7E9AD15895639BF785A88E153D06ABDD57A0013
271D1F75075384E1120F805B76CD99C01EDE8F5F1DDDA31A8F04649E488A00C5
54429F72F81976F8106FC0C276CAFBF51B312963DBAACBD071C370EE0DD26255
AD4B6BF7318944FF291DC3C57A9F96EDECE581EB6B301E90CA8274F22C4DA414
3A4E0B56F5C6312E37475078B1996A96F49DD0CC045AC051F223A7A28D79004F
465282648B97ABE1362F5183F15F662460760A9DF712528D52D4335351C533ED
14A658FC3B7302756B60EF7E65F6B5778C9A827338EE423FDA4411E01FDC3AB8
119B13F6E9666B27E57D0003F773D3C4FB62B966CE30138870867886C19AC258
DE287F47AF2E34292D64DD60140B22F87B7C7B3B41F04BEB3557494B16A32387
A3A73A546441E9BC0EF3562AB7C3B35E7F260F9EF1560068AAF9712E936B434C
5D3CAC6090F0C378AF2B2AA52499C421DA5CB50A37C3E4AB6A2B0BC1F2807E30
30DF8F5BEFDBF36492D265A7B576E32FE4D1DDDF485DBAB9896AE4BEC89701F5
53BB4F0EA2A1EF97E5B5E4C753FBF42C1F976B0446A60F16BB8C7032E309C9D4
20911373602D71A58857864D6CE3D4E672913EAAFBDD441F7139AE3CE98EADD9
A2928EB7B7A435663112FBE85F03595C465CA713BDC2FE832056361928F1BF31
C29B270A176914EBAE19E7030D6E2CE8CF1CCCF0730AEB41C44DE13816C9CE16
B90EC04E7CE77DD7DE7E3650C8A5E0A6AD4E40D06B807E42484ACD693258A53F
985B5C4E6C245108AA22B1FE90DAFE51FBFA7343990A15C4E6F00C4D73D8E737
B0583EF1AD01EE2836B587A78213E58857739A40360DC0596F972E8D7578E37B
07CEE01D24BDDF8A53DB9249A6D0DD200287F89137EB4C027DA3120707FD44D3
8483D97A6B91B5C07AB2235B100182BEB175A123F369DD9BC563AA09724B78E9
F3FE28DB86514A0EC4F6A4AD699AE06B72248FE3C6164379E26CC41C7A93EC9F
C3BB5B50318727847ACB71FB49D6B31A604300AABFED9BA35362B495857111F8
D844BB4719549ED1AFD812FF1CEAE8BEC7D4042F09FDE962468E8FF73C19463C
B7E5CDEF808D53B2D5415B1AB0558ECFADC419D92C595B02AB8E4D1DC9DA17F9
43DD834FD8BDA1FE5B28E833D591665A8C0DF33BB3D8D3959AF1F3B2DB5A361C
07E06C496243D9D7A30FBAA86B2ADFE7375BB582AC084B353062263FEF6A46E6
413A88828AC205C8167B83DF6CC01159A0C79094DE646F8D21E6DAE1D5710EB1
581F1A6B012114F6CCC095342001B56A688895BA9634743060DBA35CBC5F1B33
F17F078E1FC9D5E923ED11D7EBE014C5420AD2D3C95B21A81491C590BE0275C2
1920F60F849651BB35698FB476EFDD3BB64394F356F0AA39D4C57145833DD19B
EBCC0920710C102E07B5466562EB862D1A5B12F15CA11FCC6A1AA53775A4D496
531E30CBFBDA1D46AE862E3E4C2B3360A8D87CB293347A954E4524489D4C3DFE
D17B2F92664E8F4137FCC3D181378140AB8045A084D3DCC5ABC5DF3C2D1D5868
66C5A08C58269916DBEA0104499889F44E1EB73BD6B136DFE42B1456AC0202C9
672443A7F1FBC621E7B667C5EF052E53560BB1865BF6F124061D54CCECD79A73
BF3F20E34423844399FD7FF350BCC144D835BFA8E157AD4A3D308853F48E4DD8
66D780EC23295075E14685E98AE3CB53D3AABA8E196A85753E9D028EEBB40B3D
4A3472A744B9905A2D4CF5721F4B25F73CAD8FD840CF7F54B3791520106D4576
151AD7C774906D9EA718144B3C926D8EC7203C365979364999E61C1EE895C007
5A43E633F40A7584C9784C8AE67883C9D7AF8341FA1FD81F3428716EFE52EE15
03A8C41687FD781289145C59489EFAD32B83873EBC8C23AFF4F13A96F3D9F176
2CC086D378BA585CF8613E31AF65E3DDB4AEA10E8E04BE42EE57B78BEB3E44B7
8C50316C61B6FE484CE582EB7FB481ECB7035647C141740881202D286AFCC07C
9AA589236B4DCDF942C8ECAE8311822ACD70AE170C427D588B3EDB1147D0F751
51398B14A65214F97869C2FAEFF9B4FEE9FC05F9027EC85A5770A26ABFCE9BB6
F317D1927FDCB970C7FF825827FE2A6C008801304DCA2BBA8F01DFC420ADC866
595F344D5B9B46B1D51902DCD6F8A46E28653F95496C7F853DF36DA9D8B5E379
633990D105D3EE27FC27E8F8BDAB7AE8ABAE4CE0F046CFACCFFBABE41E2167A6
ABCD8C7111B95DDBEFF4B5B4EC8329834337F67F7594CCD406C881D18EB75246
14BE7C9534AC320B4DA476C09617B1CEE6A23DC69D28C1CA951608DFDD7A2ED3
A1DF2C2B7D432CAF1D1337F2B1FA44654CD5B99105162A14121675AC9DDAE33E
26751703BA48B6418CB5DAF1F572775213A3B676167BACAF64151151866646FE
08B9545DB41516F7C2ACCCC6445053CEFD58F46A5CC087108782AB78F269CA76
2903511D00A70018AA3BC6AEB4DFC2290E189062C4AAA6F288EFE7E85D2C67FF
14765ABEF65E6C614AF3F906E9D890A823979998D37774642CBB01A1CD423EB1
47F95B5ACFEF162D7002979C16D8514CA4A9D6C1CF093574382D32564218580E
A460E36E1FCC24D0148C458B745876A5FE591BA6F8706AEBA91893597A866F28
9B75B6C623DDC0E21F80FAF7CD6DCFAE2165378F8EC271052725321073DE7594
17DF58AAFF93B9564AB6A0CF07503E6D78388251FFE0BF0C7A5BFEB97E86AD75
27C6196CDBAE8F16946F6C682C59CBADBDCCE20808A8745D3429475F4E89AA03
D33EA5A61BB6A1D0581D68597D92E2E59C0593FE137A7FE2FC5DE81EA963303F
AB4C0491F19D573EB051F2C3E3D0BF5490F6307562481F077241459504C750E5
FD3CDF00ECBF779BBEFEEAC07F47A63E04467F22640582C97265A24B297D4E16
A58389E8EB5F8E2A8D7F682867290E8E688C3ED486F64CA0A2BD5FEC39E85E13
4CA2BFF1D1ED81E42B0F30F6083055D51E6D70183FD30CC4EE9D023DDCDD5EA7
8CFB28527CA4CA531405722BC9C4C8A069484EA198D65760FBAB6405FFCB4D32
3DEE977CA9EB95EF6E5BC4223762D6D836884577E68408B2D37A45A80B6EA8EC
9363C4496E88651E59383432A76031EABCBCE4FFD0FCF3B0B3B7A7E6E1AF9430
6888E2E29BB880EFC696D77DA1F676204DAF1B1671793CD45455A0628C7EE8C8
DC3EF38482D24293E3ECF03B4A68E1F75BEF7C87FD170CC4B4163D6EB197BB06
74B26902D7534FFBD8C8348461BAAC1481F8202E117CB6CB89C383F687EF8F80
6EF0EA22FD16EEE8A453CA24FC71D36035C646C7EA80553715C303CC90DC7329
AED562079FA6E42A8EA6E6705FCABBA99A12781E75D97C5221F03AA3EE6A614C
ED228608AA23F759A8160B234F21D555596314A3B55E2C1DB82BD7DA24212043
1F61820D5ADCC81CBC55BF505873A37D69EFC526F59DABA970CB94B8CBACF31A
8EBD8AB1B969C7E4B39FED998FFC3D6487C777AC252DB48967EC868ED1977E4A
94A814D5D7B7A6799BE69FEAEE8ADE6E08F71C296EF2D2D1E090052B8F9E29B4
FCE68B369DDCC95542F9FD69A927D3CAB630A9A2D3227FF0ADAE13A0800CD1FE
ED1FCD70B4A6855E2109A878CE4621251A287A823F5E66A31AAAAFCAE6A03034
E2281BEC8D06F7B41C34EA52710B82F265007F942A15246EA5F6A79C01F6DC4F
78F6557DFC8FEF287CB787EFF59E86B4A72A199C8DC08245E415F460780114F9
E0E089B3BA3FB5F7E228E5F142DAF6C658893DFBF0DB8BEA767880B7064D05A6
AD917F01D6CC7C8C48CDD889C30913B84F0A86A657F60E3BC1C8065F21A12FD2
CDE2A2B3FC91919C7635C9C040B1498E7EAFB027E3296A5E1499FAF6D79BDF4F
6DAF0B6F6E1D1301EDE8FD6F5BAEB1C853612A330747A507C38A0CAA89FE0B28
EBA45415BC0D4D0A76D7A11670C017D355D1578F6A3183BF1695FF4AA1AA534E
0F4DAB4C28062D19014767F92C73A3CA86D6096F227EA4EDD7CCD1A973BF297F
66D2EFC33A631543E2C99FB3AC8613C8215B9F542D8110235BE95FBD6F8BE03A
FC1BA888B19ED626F6A440A6F234744894C08578CB46FA0487DC1B8FF6A31CBF
4BEDF8592C876A834F9C80690528F8634CB81F8839A70C348D1AE4276150B16E
477AFAFA64A12C174AF75DF1CD1C652726F8579C85EE45AC6B47063C273E15FA
59678998E81F5CABB1BC9737DDDB8D941425DE145DA043A710A148BB18D25142
DE876540CB8A5EA2C99F29B4A22D9E9AD133A6AE27C9A1EEEAE3890F6E58D8C1
9D6F90AFD127A508612590B89747B6BFA7EA057D586AF5A8410A54FC2AC5CCBA
78FECC74DAD0DFEF443B395C94C477E87B645C914A80C854F77FCADE8149571F
EFBC840BD375490CA2CEA2D4CB212FF2983C3FFA0E9045AB023E047EAB436526
4B7DDA8CBEC2E6CF74853B93B427A89089E953E1E2F479D0799CCD89C4D25FCD
BE772D82F92392B9224C232F38190CD8B11D5CD83479FE9D7246A47C25CD7BBC
C85BF4E098AEE276B5FF364A289222E6D4251DF41E0518A995DBCE571E2D4018
0A087B0A5E2A061E3881605DC027ED2F734267EA705606D6F3B9C93208E064E0
FD0679EE7BE9348B1608B05E8F31B235AC245F62DF2B81FB70808235C8B26707
A9C2577A3AB6800CB4C0EA9742BBDB0B2EB573082BB774BD3A77F09FAF5C0BEE
A7BA6FC475ABAC00B66F4A9398E4F318F77584BCAFF19E1B7CEDDD6D7DDD6E26
0679732E7EF99EEE1FF5B53CCF11576A5BCDDF652E904AC157A9EDBE1DD8E7CD
B65C3F0CF5F906BED2C7F18161C2CCBFC37A265AF506B75CB8F498914E17C88A
9317DB2C60BD5156085158817DF6D23A8EA5AD8C236C2F7F95EBE90AEA7B3243
50D5926BF3AAB7CF462B8C46CCC438435B9D04AFCB278FB21D39890470B3200E
5663995DEA721500BCD0885539794E5745D369EA6FDA1B21A50FB073D50190C0
BD04D4F6898BE61012BB53D2395A6CF74F70057371F1EA9B963122A15B66B12B
72C8D454F050D276F02F4EB6053600B9D729D124AE2CD6038DB08BC3CE2CE8B8
9FDEF364C224B3C87F241CABC4F995455BDFCF0165F244704AE2B065259EE821
CAAD682B251DF561E9167C3DBAB84A96C2D9BC543C24439BB8F9521BCD121E34
5BBF46B92CDE3C52068336290D74705098D4582B15F391A5B9076094B5B72571
41A512311094E29D5FBC4B1D4477569210EB8C4212CEAFBC79B61186AA832CA5
F2992432D960259DE496ACFA549F0CA051D4BEB61D042F223E439AFE0E170A07
F82101F2CB5681E3E6A516B6AF85BEEDBF752A7C1839B5075C035229738E8D48
D514B2F13B10D11BCD4CAC28AC76C2919FFF9F88D2614A06B88E7F0F6630CC06
DE807ABD0F0A32C062DC9043680233B5ADE9C44BC87E158A09EA0F18CC1BC104
58CA6C430214C2833C108795FABE5E2827EE52C04B721BFDCC224554AE463F13
39C60E1E6BACD074D3A0631792F93205A088AEC0672CC79B224276192B5AD076
6A463479307F9E60C039831936D2DF969B7AFA8018E7D9ADACC50522696F3192
95425658D4F8FAC8A9059A9E2EDEBA448626074C0263EEF26C857B28C04F1783
20C3B48D28D9D2DE0E6622594B35C3BBBB1750F0935CC8AD26509074AE65668E
AE6EDFCDD0D8778884FC42324E1E657E0488B67C7C18D5FF3510ED179443A4F3
7748890CEE7A3FC964F8F1A45A3E8477D0F379A8B723D58214B161282982E5B3
0675BCCE04597F9B2D6CD2899D5A47CFA02039D9D978F3032D2FC6BDC49C4EBE
D59B3D6FD04BFFE623C7666E5BD331CCAA89B32710451F72B84AB96E4F9F8D6D
3E90D9341AD267C2CA75E2548AF3600A0E780F6E2DBC49AE0346AEC1C6AD8D90
244828E2986F2287684DE1502848993DEE8AC888CCA0379C98AFB6721B4FB3CE
432D66914E7E3099FF2C6359F557C9027A3F6AADA385B8C4CFB8D279F35AE975
C2844072BA5762EB0D6F46DD50BB05534F8D4BBA0EEE1C570476697D12EF1AC7
8B34738EF1FB3EEAEC35C42F4F13EDEE04D73C97376F2643725685D53509FABB
A9C5D9F75EBDBCB75F2C42723F9372CB5D69D5E6E2BBA790ACA131E9976C30C7
F18FAFFE3F03467ED5ED53EEC1FEA0F7EC01EE3CF131B32C192BF1E9408E30CC
7214C41B31E8A06DD07379FA9F6F45D060D182308EA53DC7BC285D1EDA04B7D1
15F42744581F665112AF3A5E71F83C6DC05F20110579F7A3612BBF80F4BD0A76
28B5603DB314AE4C2963ECEF303968E5A14932979CB172945BE34F8844B6117A
DBF21936CB66392326F2174212B9DB6E0A53D5D0E4D917987B5A19132C8D292B
FB812BB7BFFC9EE2F8257ED0B2D60325696EC774DB6E734D5370BDEF658A0139
15826AC80799603DA60D7FFDF277E4CE7C02E9CB8C441214B01F01E20A30B216
63DF8A0A1B879AA7165C06F8C57B9AB7382281855EEFC1FF4790B24F5C442017
49C135F9DEB08A0ADF5C18C5836DE38C0AEAECE9C6BD8F6DA5C9DCF1E63C3713
B3F06CB26B6E1BD2B2A84F834C3A5136F71C8218537E639DCE4F41F3D1092855
4A0D0DFCF1C0AE2C928DCB438E1357EB88F8BA7C4640342830553F8B759C8A57
6DE475F5E542E139F0BEF610FEA85DF6BC43B0D6F78826A4FC028BADCD98C118
F7DA53859F9F9ACFAEA6A5EA22C39B67FE7C2A7A364988EE10EAAE110D3DCB6B
3275FAAB7EB5CDCE36FCF439E0A64DA044BB1B94D166B26D195E3B0E25454F43
FB5418AFE1B21BE30A486A4813A993D72E06123AD00C1AAC4EB712467C6AF7FC
04231E3D8B784F1981934BA67107B3D07FB0A5A19A1E6196590058E69AB2F683
EAF66A0A030E67417BB225ED607BE08422F855DC3E5B2AEA822F9A7843AAF246
CB315EB1D5A05AC24608E90FA3906B425F6C43DC11AC02425BAB7F7C80B760BA
F2318BAEFBECBA5044DB32CB005C85634201923A99A27E73CF24108976847D06
2EFBDE8CAE33DE580544100B0E5806466A5ACB29ABD1108FE05E7FBEDDE8AC78
75149BC74CA6F46096AFEB9DBADE49C53130FAD265F06C9F4E3A5BC82120DE0F
EBD1BC623CD6C4FDA0C9BF76F519C1B61D44C5805ED5B061E82530D793EE6E99
2E67902FCC5864CD95CE4DAFB9D0E872EC8A27F72D0376B41C806A9E7A4C5617
33E07CD9D7B12BD3EA4F70F43B29EDFFD88019F1121735F93F0895E007B1E05F
9306E2A3E049CA9352FA4E707ED02B484FE1F60865059D24A6EC8CEAACA862FD
0247ABC43B94E0DA78646982644663C92CEECF0F8A57ACBBAE0425AD00240E64
9F4EC754E04F1A6C3C3D56390E0351D541055B1C01E527DDEA49A3F4AFEC207F
F08D3682005CFE97AEF1D869CB603C05A6864D4577AC6B2EE3FF229184E84906
C34C72E2C3FB0107E4FC1782003053AD6BBAA8C5D456345D3EF4E343F0345274
D3775BBF38EB0F5E399840CCFADE276DF2BF817196872FF12D3D0D426BFF328C
AB95C32D9BE43C94BC50A9CD2731327CC33CB8DB2761BFCC77BFA8E672F154FC
B9A773E65339A9DE4874BBDEB54D842ACE7B37146DF69071FAA516500E00389F
D5F0C7D9774EE8F31759406394EAE12EBDC916A19E70A1D92D4856C4626CE64F
1ADED415757BA721F1241DACA69AF145EA083906742D7FB56041E6FCE22F589F
D10A52CCAB5B53DC787F2D3F57A68DE5B585E2295BD4748871D533AA1BBD855B
CD74B9F75073B4FBD21739C6161EB049AA061E2BE5D89B1A6BC2F16C5944A4D2
FB50FB87DC08179375193FA29DD2552E0642F12ABA73BF5BFDE146A7B0FCFF84
30D2166C6EB821F4D047E147BEF61963E0986809261AE7EED04F8E6E1D1A0234
6E717271F4290C3E91BFB17309C886704892776DE665E3013B70F180B1E7B1A2
FF7CCD7B49D561518BFEB8BB2DFE9AC7534B4C9C902FB9949E623EE5AF75A988
FAC8FFB0E447060788A68044EBDD09D2B8914BD2E4DA870D81756ADD2FD19897
124ABE422CD80F79734FD490852C8E53F9EEB35C6C0A12B711CB5643B0B2FAB9
60832318FA154E5C882B16B711A7B7728FF8CCCC949F78316F077949BBF67E69
2EDC68CFCFF3CC0B0522425A39663B3EFA794A35A99B57463B63694125BABA0B
04C20A9EDBCC92D1E5FE40E00E4C9E25FAEDB9B03D9B8610A8295A25240729C7
F3E65E3CC7D66884D0A32403EA10C116381EFA85B166B1A31142BB80C9C540AE
6C9DB58CE4BB6EE8A29291B631F3C674B39DF1EFEA3C4604283768361D0C32FB
64487ACD6394FCD9A74206EACF85A3C8F2A2235066923A36BD3FA14DD0381449
FB023FDAAAC616784D91B39A431E11612707C2310E3540235948AE523CF46A63
19D350754BC800985A5764BE7E30C93C7E360D60890653C9A9AADA22B2A193DB
650D6F0B6D846B9DA0C07F07449C40F5D8AD8F752685E6FD3964215F39BC6D0F
94583FDA1DAC8F01EFD3C614A715993F966E48CE62CF5F89C5FCD563286B3022
5094C6751EB1F9F31BDD08DC08AF5F9E086C7953866F0DDCBA85A443BB28B339
5D27A6C5EAFDA5D7D55945F950C7F6D4BFC51654F7AEBAA494B76C6A12F9EB3F
9886948656964C4EF76EF41D8C19A5B64686B2608E99EFD9B028CE5EDEBCC4A3
53556BDC16F3A0542207EA3E6E24D9952F093ABDFE2FB063FAEF2AD35ABE980C
701098AE7FC04B549FA1A623A7B8142BA652BEE5B382555D9BF4D1DEF986226A
81464E0AC66D7257B4044AEAC5D35781181BB61042EAB9D02858C9C3784D6B2E
E6AE97A277B156A44936FA34FEB4C92DEF839D8C969BB9F0C8ADF0F56FD3895E
ACEDAB005DBC5AAF15F3A3C4C40878270C4231DFE234F4C31D75276638214467
31628C482D482383129A029CB8F95C38DDA867DE050703D1E0C622A2AC7C7D3F
CF3326D5B9961AF3F88DE4CC774BADA6029E648F52054B101161001BC5015C7C
0E31938EFC62D2B9386140B4B0EA39E2B5AE11EE017EE2F601329AC69D417756
BEA404695B54633BA1E31A0D7D289113A9A8DF2B0F5FF2535395EDE942085E84
7EE30ADB8056326E4C99909820DADD2D09CD4D97C8DF6F804C1EBB551409A99D
C7DCF8D4077762B2AC6B5011F1B37F542881CACB9652E90FF1A7EE360E6FB8B2
9739A4A0F3DB745CE8101C568F14C5886788280C5BF777D2E5306DFB1ECD9F6A
221820ACFA3133B20909F124929CAAF97010571BCAB2F12F33CE41D8C28549E9
7DAB73DDC283B028AA8A12009734DCF62C98D8E66C448E10964A0334613F498B
34585B80358F01C679FDDF2CB3642D3C757DC4D54425F5D72AD4EEF741242D7B
9ED484EF1E00CBEA12E625570AA2B5EFE045A68841A658CF3B3F246C7CE440E0
095D23C8EC31B950FE5A8ED5A81ECE4EB8B2DEADDD475CAF8595ECA74CF79449
35F6CF7056DCE13EE4ECD0AA317CCB5A3E1C312660A6780C173F2C153ADAB195
D397B9A5C5F4346DD83566DF5B064F1495BF724F9499C13AA2013BE01CF333C7
48AE72C052F1D66EBEB9DEB3CF7CF2F3A90FAF3F5C9827374E686A49322A1412
0A261D1B
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
%%BeginFont: CMMI10
%!PS-AdobeFont-1.0: CMMI10 003.002
%%Title: CMMI10
%Version: 003.002
%%CreationDate: Mon Jul 13 16:17:00 2009
%%Creator: David M. Jones
%Copyright: Copyright (c) 1997, 2009 American Mathematical Society
%Copyright: (<http://www.ams.org>), with Reserved Font Name CMMI10.
% This Font Software is licensed under the SIL Open Font License, Version 1.1.
% This license is in the accompanying file OFL.txt, and is also
% available with a FAQ at: http://scripts.sil.org/OFL.
%%EndComments
FontDirectory/CMMI10 known{/CMMI10 findfont dup/UniqueID known{dup
/UniqueID get 5087385 eq exch/FontType get 1 eq and}{pop false}ifelse
{save true}{false}ifelse}{false}ifelse
11 dict begin
/FontType 1 def
/FontMatrix [0.001 0 0 0.001 0 0 ]readonly def
/FontName /CMMI10 def
/FontBBox {-32 -250 1048 750 }readonly def
/PaintType 0 def
/FontInfo 10 dict dup begin
/version (003.002) readonly def
/Notice (Copyright \050c\051 1997, 2009 American Mathematical Society \050<http://www.ams.org>\051, with Reserved Font Name CMMI10.) readonly def
/FullName (CMMI10) readonly def
/FamilyName (Computer Modern) readonly def
/Weight (Medium) readonly def
/ItalicAngle -14.04 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
/ascent 750 def
end readonly def
/Encoding 256 array
0 1 255 {1 index exch /.notdef put} for
dup 58 /period put
readonly def
currentdict end
currentfile eexec
D9D66F633B846AB284BCF8B0411B772DE5CE3C05EF98F858322DCEA45E0874C5
45D25FE192539D9CDA4BAA46D9C431465E6ABF4E4271F89EDED7F37BE4B31FB4
7934F62D1F46E8671F6290D6FFF601D4937BF71C22D60FB800A15796421E3AA7
72C500501D8B10C0093F6467C553250F7C27B2C3D893772614A846374A85BC4E
BEC0B0A89C4C161C3956ECE25274B962C854E535F418279FE26D8F83E38C5C89
974E9A224B3CBEF90A9277AF10E0C7CAC8DC11C41DC18B814A7682E5F0248674
11453BC81C443407AF41AF8A831A85A700CFC65E2181BCBFBC7878DFBD546AC2
1EF6CC527FEEA044B7C8E686367E920F575AD585387358FFF41BCB212922791C
7B0BD3BED7C6D8F3D9D52D0F181CD4D164E75851D04F64309D810A0DEA1E257B
0D7633CEFE93FEF9D2FB7901453A46F8ACA007358D904E0189AE7B7221545085
EDD3D5A3CEACD6023861F13C8A345A68115425E94B8FDCCEC1255454EC3E7A37
404F6C00A3BCCF851B929D4FE66B6D8FD1C0C80130541609759F18EF07BCD133
78CBC4A0D8A796A2574260C6A952CA73D9EB5C28356F5C90D1A59DC788762BFF
A1B6F0614958D09751C0DB2309406F6B4489125B31C5DD365B2F140CB5E42CEE
88BE11C7176E6BBC90D24E40956279FBDC9D89A6C4A1F4D27EC57F496602FBC4
C854143903A53EF1188D117C49F8B6F2498B4698C25F2C5E8D8BD833206F88FC
BD5B495EB993A26B6055BD0BBA2B3DDFD462C39E022D4A1760C845EA448DED88
98C44BAAB85CD0423E00154C4741240EB3A2290B67144A4C80C88BE3D59AD760
E553DAC4E8BA00B06398B1D0DFE96FB89449D4AE18CE8B27AFE75D2B84EFDB44
143FD887F8FB364D000651912E40B0BAEDDA5AD57A3BC0E411E1AD908C77DCE3
981985F98E258A9BB3A1B845FC4A21BCC54559E51BC0E6C22F0C38540F8C9490
88A0E23EA504FA79F8960CC9D58611C519D3ACDC63FB2FBCAE6674357D7F2285
4BCC9F54D3DA421D744D3A341DA3B494BB526C0734E1A8FC71501745399F7683
FD17EC3044419A88C3979FD2ABA5B0130907B145A8462AAF0A9B511D2C8A7C7F
347FF6AC057E6512902BFD2918E2CD31DE615F5D643764E900B60287670AE18F
FDE15545D8BC69591A8CBBB275AFFC9B14BD68DF0AAB32268FB84844D4DBC7BB
C591C1AC5102C50A9C7BAAA848DA88B0519F0F5F0813BF055CF0E3C86F633A04
B779D2E8E656DB1E09A66A85FE21CA8BA5523F472A229E83F2C4E91ABA46C733
F3C7B5775B06C97782BC225C46385BEBDC61572458EFC5CF4190AB7A9C1C92DA
29F84BAACF552089195966E3AD9E57CC914D20B6962BE80429A16D4DF1ECAA66
36C4343FADF0B2B48F12E2EB8443C4AA29D00949255F3968617F98B8ABD4CC12
048B838EE243A21AC808BD295195E4AE9027005F52258BFCA915C8D9AED9A2C0
80814F79CF943FBE3594C530A22A92E11BE80FCEC1684C4F56712D5846B0749C
9B54A979B315222F209DEE72583B03093EC38F7C5B9F9BCB21DBE8EDDAE9BE8B
75ACE6B12A31083AC8348EC84D1D29D2297A266284B7E9734E207DAF59A25F4E
4AA38509E993C5394FED76E6A2F25462685C4C86C6E8CFC9863338EC1428BDFC
74616BB1BC8948B0ED4C87C15B4405F3A7796F9DB3798FFFE8BD0A94E834817B
D5E9812E308D0CC920470A6F2CD088FCB80462BF7CB3F039A7DF3DAF5B2B5355
E083A385CD2EAF0FC181E40E96DD7E9AB9EF5C7E6866A13B8A54718E950FE097
EF0951A357114F18CE9933D28B3A77AA71E3CE884661F13284BCED5D5FD1A86D
543E588FF473DC2CF9A4DC312500135F29C2D0174B32018C8DBD40EF9A232883
710A1F2AB2CD11312300ACDF789A9B7B93D2035D81D1C84984D92D78A53A00C6
EDA94B24BBAC1AD17774A4E07E6F74ABD90415965616AD540C8ECD8C3A44EE4F
7F4F6BB6238C5062D63FA59B7BF08BE93FAEA70A2AB08FBEAAF7DBF56B95FD93
03CA406543BA6C9527D0DF01F5108D31A51778A5EB1C93F27B72B46146A353A2
01CACBC829603B9989A87CF64528682CCBA0562A8165B185C58A5C6BB72F5E89
500ACCAAB8ECEFBB2640E99EAEEC4EA979AA793D013D61D8ACF8784FF8D9398F
F6A252A709324FB39509F0B3A4E725E82F53543383C6765BE556CC897C758208
AA3AD37B0406E4A79F8F0A6C1983FC73E71CD858C0DB66ED66D5D992978614EE
1EA91EBE191E082EBA1FC040AF19A2202575C2EBEB8058833E3520FA03D2F915
85C1ED337E457B9FEEB0C6EF2735EFDA6E0D05FA641BCF698AC6B97751E8306C
4DF00A39B8581FF53DB8F8525FDB196D85950906CCB59B8EF171349AA3B567B1
6A00819947A995FB383C3C1709C9A2C113B2E40BB832B7D4A0FBA0B16A2C455F
55809CC425C403E9668DC66BE45B71A81C332FD4DB279D22A2959962304A8F18
085893DAC61317D24A8F198FDAB95F3B86F0AFD35047B868A9A17037A2829A02
BAB042F75F349E197A7EED41984C2859754CAFD0251439921C248B463B516951
2E1322C80D73F9CBCAA63A585450275AC2492E4D3FB78E800F788254DB5E610D
CF788DF5C70FF99892BCDF16133E34B24B77C8F097F546B87C603DDB8998B66E
BACB68BA27462AF54AA405682EC96D701F0D474DECD5F95CA2102DF639EB169E
D518162C2BAE45FF698B6DE15FC6E7DE48C336C40A670FD26952A6BAB09115E1
991F0073419F2CC2A1C08BE91096936AA0C37E4ED3CCCEE235476074B8FF1125
6BDE3701F85532D8BB64CCC927CC335281C95EA689706F0AC717DC2CF680C754
E5EFD7FA4BB8880B2B727A964C876D4A223069D4E6001771F0E23EAD2A4BBC80
E76675297B2EF05F52BF4E71B3EE2BE3048CF088C79540113C66AE98B2FD3CB1
B0741A215FD070882C52765009D7D711DAA2508F19AE7DDA15229A856AC49BC3
4DDF40814FF96500E4B9B02D412E94623C5FDCC76C0FB8E42DF56A904FE49D65
1DA7C53901B2EA71AB658A464D3ABDE27D9DB8D9E0B48F64E61A2495AD5D8DAB
B5E72424AD017DF37964AF911BD7FA21A5EB4775DC8E95EF0C0EB856B00D89D7
8172A1DE8530767D317B8256103E53CFB877E10686A04F5A08F8DC58D843DEBA
FD5F40597588663D103689F6EB3EB14D06E18C8078F2538B43E712DF491FC5C6
AF639256C8C6134B64D560D8476DEA6329D995E46CC4BC78841C59E73648B47E
BFA7DE0846422F738454AE77E822A083405289247BD7C478BE4974F742CD6051
E99FBB1D1B3FBABFEE855174734EE45E87D0AADF32B1283B911162A9955847FD
38944D70584FAA6B1A7191C5C134B73F98EB632B69E2F0C0F94156787C34C8A3
7622A029D58F9626B74F8A8A1F3803E0BC20E0EADEB1E99B70F1BD9F980FB751
2A842843DE42EB142A84D5D3138629AE9EAF6F3479C423E8829C8816FA6EFA27
DCE5580E65AA9854B1C64163DC318420CD993C15BFD76A8BA1182860A6B03D6D
22B8CF43CFE6C8AB27C64842E239CAE707D3086BADDE1D7C94E3BC96319470D6
8D26915C575CFDD03271D6BB9DE86A0EB6EEA6E768B224A626C62A9AB48A6EDB
44F70BB5AF991CDF9736D65933E81CC57A78F623F33EC9AF535F2F25FA4EEC90
D50DB7E87F31E971A75A33A301CA6013EEC5A4E179D695B33DADF2C98364434A
42926776000B610E17524162253F6FA638D6581C18F99EA0BD1D2E24D2424ADF
C05010D08192485153DD03930C7BF45237593E484F9851E6D464FA10FECA5D9E
0C8CCC97DE029030900CDBB491C5CF226DBF903CFE7735D939C3FDF3A20B70CE
66579B28B99313FEE914E295388C7BC8E055A2E54EA3A8206D3C8F4F7C0BA5E6
E519419FD8CE215F7B8E9BEC604A9E3FE272A0328A24E31997C8A91E0946BCF1
6943A97CBED2AB9FC636B49828BBB8B89E0BBC2653796431224895ABA5DAC41E
1854BD9764E86147FD7624F736F40DE3B7582EDDFD15C2BDE3F22B5A54D7DF10
B87A1301CE85CFC061689A890A321412A13314AE96DCD3EDA75035FDD8F4AB9B
897A2C68263A68457032C469987970648BA2D88B1C5375DFEAA35A917B8A952E
EE670427942AEDB3CB599C5746180E392837D371E15D860620ABDB6AA7772C40
A5E346661673ACA530BE3D8E3FFB895E5DA3DC23B1B43C080C77F7E47847F0F3
F3AA5CA9E4BF75FC5EBD18D19F21A7DAA3B11CABC6E4070A15F7DBC8B05EB6AA
A02EF1B078EB66D61D6AFE41DA9B36FE7EC9EF94D1EA26282A9871E2CACB3126
2AD49C2D9B50A6E47D8F2CCAD50992D1B430979A45FD9E76182A19964BB2A1F6
51779A2B258DC1DF4C2F3074621286831F3848AC152DDD2BA561E6586ADA88D3
598A2CE2CD048F027CE0008B828BD915887D7785341E8305DF2346ADB76BE99F
87B02173BDC334E9221C8DF54114A6B24C1C5340299512FA6C8C51AB4C8778CE
178CEF531C6D1B5FF0A1BE8EFF767F959BD4C345C52699A29A17B2A230842BF6
4B011217D6D24EDAC3F6D53482786F1CA33169B90ECD499407D37CE9B70DDF78
7B7547B32952535BA9ACD1E244447AE3FCED3AF28717083CF9590A09780984D6
AF0743C82AE4FB3E2BB2856A4153A3967A023FFC35382D6C22D84A924900B6A6
3DDD400E6D2418DA6C27F2FA34C075C902B89EBAE658B3C9A18EEE449DA5A379
337DE95CB7AB3F0970CF1A5D8FAD8090E495570FDFB2FBBA79244780D8035547
C5A55BB21A2270F724BF5D442CDC5BB9F09BE0CAE59B1C2270F0BDACE698F2C5
DE8F66BFB9634904B161F5BA2B1950048300D69BABD312D58D89C4ED527AF7BA
7DA2478EDC2CDEE3473DD8A8ED9D891CD1FC21F23013228BB3281B71FCE959BD
6F8E9059D682A7FCC5265A0620992D4FA8D78377EB34CE3ECA070EE3707239BC
98907DB0120CE42ABA32CF97127E28382BDDFD685674279F588D4F951216C355
821361790F64C2CC720DE97E8ECB57326C43EE47367628E05769E106868B54F4
C33C9951908DF6FC4F5ED2C7787BD8FA591BBB3E9C6C1DA94CC5E38D9B20C886
7D237572FF46DD896A4D6163408EA6CEFAC398EE041EAE29D577E75326CA17A6
B072D47A7B13EC441CE6DAA042ECD02134CBFA6809A435050413817193DAEB16
A5882C8AEA44BCF36E74E9ECCDFE7E19FF5A5DD7A94E5AB4F8702C3DA7F42325
23C808670A0490F5B373DADE40814FF9650241D3D69C91FBC5ECE728F827D9BF
C928602E05477903449E079164CA39859C4BCA60C579F490AA455F82B5050BB3
969AFB478E0D4A257B3356EA3CD62051FCE6C6B1929CFF85BFDF166BEF658E10
3A55E007F38EBBB248B3F0B8ED1925106B499B762E45113AE1AC9DE09644C84B
9C08034B297314EE69BC32DB6E7D7FB9913CE5AC17E7335979E9DCCE2BAB3725
1976155551F9706A576FE0E3ADCCF72C87683291528ECB749CB0ED291966E239
B5E3630676BD409E08F85BC1AEC9A2D4135376284A96EA24431243BD6FE8B966
95F11A4BB53F392E0AEFEA623064FF8A7002367B0A515635CB2D2DDFB9B4A8D7
FE721754E81BBA548848A235B91AD4E4F7DB19CCE2F61D277FC00AB956EB93BE
44AB4970CA56BF59506C94ED160FB1E25D3DF2988A532BDB787BFB8539D22986
FDC378AC31444E63C4727FEE121A43751043849E6DCAC5B59D0FC703AAFBBFD4
E8B7C268F21615AD02CE9DABEFA27B5FE6A6441B619539CAB1F810F1263447AA
633F5DAF483752EF1A0421740E3A811D2D2898CBF53E7F686C9223FD7235F02D
6F90D2D48CC20AB87778DE3C6FB335E0F0EC20B5DC5B65223FE117526DE2C72F
FE839DF93CB2A7D66CD900CB325F891E311BEC932F703FB4FEFA29DB8B9C88DD
375EC71B3D58C7BC59ADA91971A3BDA1ADEA629CE6CC92BD542CDDFAA7706FB2
6CDDE2DF07E56D6741916AE8E8744339816F3E6C38062747AA9FDA2A2678A6B7
EFEA870AA3A4D71B25EE3013EAB1DBA34401B867C7A41AE51E0421D41D3BB83C
E120C8FEABA6E5DEC53A689C21426D4BBCB68CB37568761C360E6D4E3596FB7D
F4DEC7918E58C0293D12D6DDA7E9DCDAAD7C939F55CD1BC4A228B31E9A904156
DA6B40B08E6ACE674618B768DD681C772A3E55FE096CF949CF3B0460ABDCD891
D17B37B355B29AB5137899C036F31DA026244FA25FB798FBE5105BDA29F46538
D3D3AC1001A7BCECE64DE94FFE6C354166A0F97256137BDFA07F6E22A3D1D2F4
9588DBAE95E895BC5E64DDCBBAA8D0A22C229B42CB717FC711E7E9DF793DF80B
9F14754585A3C7E17F37B32924B9F9870DA8635E3E18BD1DCD81EDF01834D9C6
B33F23C956C2FCBFA47D84422F583459D827D1E120B97694D12F1F54D02379C0
D288F7104F3FFCF4F76E3494F4ACBD1BE3A15543CC680924C78A473F8E311ADF
8FE00A04C6C393DE61AD3EDA5BC031E2353076A2489391B52632387CA28A7B93
FBB065A6EF3658AE80B1ADA47E9B2539E73A71FA75645F85ED8ECC257FB4CF26
B6C912DE9D0F9899E70BECCB934AD32CF49A093371A9F73DE6255EBC39DE1E7F
00D0CBDABD4D0383977E694890E71FBE5C376BE5F3A80C28987417504F515C50
909F3D31178BB9B1D085BE514F71B910A9085BD6122DDC72A150BFE266920E49
5661BCB4BAB51D6DEFE32B616963DBD989FCDD1637B294CE4E288655FBEFA1BF
7F25BBF8CF17C2D5FD161A7C2CC9CC7490D9BF15A1D35B3BFA43ADE256E88BDA
BD490D92907C57BAC408A575EC84D6AEE070148C7C9A91C03B09FDBD792E8FF0
C0B886AAD2EDD86541E5E579359D40E3AC312ACD3D8FD49F71BD533DDF8859B1
BAF17F1884E331DD07CEEF93B71D492AEBAADF7A263450A7A72210CE630A0D37
BF024BDC09ACC882816B8C22C62AE38A3A8D0F6EBC2B1B2C0B8161A8B076DD5D
4B779C0788546BB4CF57332230D237856B00D79C28A7C01D11F44B7304F69075
94B97A745DA43D1BE561372CE611C345A843834E46AD9DDB16CABCD3FA33D6F1
F6B5C0497F5EE5400B305CDC16A7EC286AA4D45D0EEBB9DA06AC9C5294D68EC9
E4DC3CA2B92CE8FC0526184A86EDC7AB34D67E60AC12D9CA8FD300235EC968BA
92C6FBDA47572BC5600F25249F60AD287CBDAE980E747FCBE7EE5CD323E733F0
63553B494D3DDEB9CC1480B5C3BB79A28E419AA65B18CB297AB383419E890E2A
CE6F98C9900CCB4675280A10CF060B8D220DDA1BE55DFA65715EABCC1AFAA271
B1F8732341613E17B231231A0D24D4D7FC198AE04D89A99C4536217769C6FBD9
5EE24A6302F97438F7C0E311C878F674B4477A5ADA3952CDE4055AC408B8174E
86F8FB797646DFFFE0ECA25D1BAB9A9F71F3926D3D85AA63E7A8C931D71E79E0
AF1EAC26FADE468F4FF7F3861D14C10E3BE1F9EAFD6D3A544E8108D5DAB5B180
3950C74818BC8AF4758A108F462EF1826647A49667F5E482038C54716856D9BC
35F29922846D2148F92F943E951D7438C73D6A60459A8003174036C64E1629CD
155D47FD04B03C023AD67CD5A70C98AB556EEAB8C48169706E5B352F6505D580
AC945171BFE62E81F8F500438AC3B64D857BA5BC54C2C4BBB237F8FA51296255
E66A92A61FE13FDE781D393557EB72CEBAD86511035F775FAC39A0479CCD400F
226709118F887F47CC2ECC8F79816D4A945B2845F50AFD62D8C9A9BBF4739496
9E644BC9F7B04803B7EE75A09EAE94365F6F374B4FCEB0B506C76297564B9B6B
8B812BC3A33929AA94692572B010E6210AEAA312BDFC88BF302244AB9D587A9B
919823FD01DE12438D960944D1977800FEB49E638C32E5B188B1CA033E0C37EE
A142F746367888AA119535F0CCAF7EAA461B790EB089D2D6962E28A398439BB7
9C9943654D7A2D765B46BC0DD1F915327F369162E1BA1BA83110B93F442905E0
523BFF5E279508A98568CD5CFD18FABBE9D17265A9081E7BF64155A2CE3C0DF7
88D00671AD65654709589BAD7EA65BBA811387ABA5CA0BC3F66D3D48597A0D1D
2C268375DF47CCF62166262AE4840AB03BF49BE67A05EF66328EC729F03CA5FF
AD3937FC053E223303565DC771ACF32E63DFB96D5030E787961D72D02C195C66
B48E9AF0309DC169CFE8D16E2818DA94693A18F027DEA0D916672480464F7E22
CA6E431FE38D3FC019BDD229E064B72C545C61C6EA55984565CCA88ACB01F744
3B4593CC8944C70F30925FB48A16342CC26D444F54CA15E5A624C4A2DAA2AEF8
404145BBA339F2A2D6FC2F3ECE54387761CA1213C8D56FF96E37C6147CA44B84
262EA87E7CC10D931E6B5B80D7F09813498497AA84ACB4AC69BC6C8481ED2953
084F560D7B1CF90555E69BD2AF7C5D944E8E3506165014652462BE1BC81CA341
E1B0725159D36DA0FFF3577D1DEBC5D91AE683FB0384
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
{restore}if
%%EndFont 
TeXDict begin 26967694 17059620 1000 600 600
(C:\Users\syjintw\.matplotlib\tex.cache\c2\1c\c21ce5c940e4c6dabd1a045290a429b3.dvi)
@start /Fa 138[75 2[50 2[75 75 2[75 1[42 1[75 1[66 1[66
1[66 12[91 1[100 1[83 3[91 1[58 5[108 68[{
 TeXBase1Encoding ReEncodeFont }16 149.44 /NimbusRomNo9L-Regu
rf /Fb 197[53 58[{}1 190.951 /CMMI10 rf /Fe 137[95 95
53 1[64 1[95 95 95 149 53 2[53 3[85 95 1[95 85 9[180
3[106 2[106 3[117 2[64 2[106 2[127 127 11[95 1[95 1[95
1[95 48[{ TeXBase1Encoding ReEncodeFont }26 190.951 /NimbusRomNo9L-Regu
rf /Ff 139[23 32 28 1[42 1[42 65 23 4[42 28 37 1[37 1[37
13[46 2[46 80[{ TeXBase1Encoding ReEncodeFont }14 83.022
/NimbusRomNo9L-Regu rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1567 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1567 a -600 1567 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 0.000000]](psmarker7)[[7(bl)1
90.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]](psmarker12)[[12(bl)1 0.000000]]13
0 -1/Begin PSfrag}{userdict /PSfrag{pop}put}ifelse
 -600 1567 a @beginspecial 0 @llx 0
@lly 410 @urx 260 @ury 4100 @rwi @clip @setspecial
%%BeginDocument: C:/Users/syjintw/AppData/Local/Temp/tmp1odkvo2b/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: bit_allocation_improvement_lpips.eps
%%Creator: Matplotlib v3.7.1, https://matplotlib.org/
%%CreationDate: Sun Jan 28 15:23:46 2024
%%BoundingBox: 0 0 410 260
%%HiResBoundingBox: 0.000000 0.000000 409.957258 259.336229
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
409.957 259.336 0 0 clipbox
gsave
-0 0 m
409.957258 0 l
409.957258 259.336229 l
-0 259.336229 l
-0 0 l
cl
grestore
gsave
67.957258 34.696229 m
402.757258 34.696229 l
402.757258 252.136229 l
67.957258 252.136229 l
cl
1.000 setgray
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
0 0 m
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
0 0 m
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
0 0 m
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
96.973258 34.696229 m
114.829258 34.696229 l
114.829258 34.694882 l
96.973258 34.694882 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
208.573258 34.696229 m
226.429258 34.696229 l
226.429258 135.99401 l
208.573258 135.99401 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
320.173258 34.696229 m
338.029258 34.696229 l
338.029258 34.626144 l
320.173258 34.626144 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
114.829258 34.696229 m
132.685258 34.696229 l
132.685258 108.198824 l
114.829258 108.198824 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
226.429258 34.696229 m
244.285258 34.696229 l
244.285258 110.277789 l
226.429258 110.277789 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
338.029258 34.696229 m
355.885258 34.696229 l
355.885258 178.024194 l
338.029258 178.024194 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
132.685258 34.696229 m
150.541258 34.696229 l
150.541258 37.858201 l
132.685258 37.858201 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
244.285258 34.696229 m
262.141258 34.696229 l
262.141258 153.066275 l
244.285258 153.066275 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
355.885258 34.696229 m
373.741258 34.696229 l
373.741258 58.324672 l
355.885258 58.324672 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
150.541258 34.696229 m
168.397258 34.696229 l
168.397258 80.30178 l
150.541258 80.30178 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
262.141258 34.696229 m
279.997258 34.696229 l
279.997258 68.447644 l
262.141258 68.447644 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
gsave
334.8 217.44 67.957 34.696 clipbox
373.741258 34.696229 m
391.597258 34.696229 l
391.597258 139.704951 l
373.741258 139.704951 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
123.757 34.6962 o
grestore
gsave
73.484 12 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
235.357 34.6962 o
grestore
gsave
198.443 12 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
346.957 34.6962 o
grestore
gsave
323.86 12 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
67.9573 34.6962 o
grestore
gsave
31.696 26.768 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
67.9573 101.601 o
grestore
gsave
31.696 93.673 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
67.9573 168.505 o
grestore
gsave
31.696 160.577 moveto
(psmarker5)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
67.9573 235.41 o
grestore
gsave
31.696 227.482 moveto
(psmarker6)
show
grestore
gsave
22.736 44.279 moveto
(psmarker7)
show
grestore
2.700 setlinewidth
2 setlinecap
0.260 setgray
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 67.957 34.696 clipbox

stroke
grestore
0.800 setlinewidth
0 setlinejoin
0.000 setgray
gsave
67.957258 34.696229 m
67.957258 252.136229 l
stroke
grestore
gsave
402.757258 34.696229 m
402.757258 252.136229 l
stroke
grestore
gsave
67.957258 34.696229 m
402.757258 34.696229 l
stroke
grestore
gsave
67.957258 252.136229 m
402.757258 252.136229 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
80.557258 186.771645 m
368.090223 186.771645 l
370.490223 186.771645 371.690223 187.971645 371.690223 190.371645 c
371.690223 239.536229 l
371.690223 241.936229 370.490223 243.136229 368.090223 243.136229 c
80.557258 243.136229 l
78.157258 243.136229 76.957258 241.936229 76.957258 239.536229 c
76.957258 190.371645 l
76.957258 187.971645 78.157258 186.771645 80.557258 186.771645 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
gsave
84.157258 223.336229 m
120.157258 223.336229 l
120.157258 235.936229 l
84.157258 235.936229 l
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
134.557 219.454 moveto
(psmarker8)
show
grestore
gsave
84.157258 197.853937 m
120.157258 197.853937 l
120.157258 210.453937 l
84.157258 210.453937 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
134.557 197.728 moveto
(psmarker9)
show
grestore
gsave
187.17159 223.336229 m
223.17159 223.336229 l
223.17159 235.936229 l
187.17159 235.936229 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
237.572 223.211 moveto
(psmarker10)
show
grestore
gsave
187.17159 197.853937 m
223.17159 197.853937 l
223.17159 210.453937 l
187.17159 210.453937 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
237.572 197.854 moveto
(psmarker11)
show
grestore
gsave
294.167177 223.336229 m
330.167177 223.336229 l
330.167177 235.936229 l
294.167177 235.936229 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
gsave
344.567 223.211 moveto
(psmarker12)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 1567 a
 /End PSfrag
 -600 1567 a -600 -268 a
 /Hide PSfrag
 -600
-268 a -1285 -212 a Ff(PSfrag)20 b(replacements)p -1285
-181 685 4 v -600 -177 a
 /Unhide PSfrag
 -600 -177 a -1438 -37 a
  {
 -1438
-37 a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fe(Broadband)p
Black Black -1438 -37 a
  } 0/Place PSfrag
 -1438 -37 a -1215 105 a
  {
 -1215
105 a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fe(Cellular)p
Black Black -1215 105 a
  } 1/Place PSfrag
 -1215 105 a -985 245 a
  {
 -985 245
a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fe(W)-8 b(iFi)p
Black Black -985 245 a
  } 2/Place PSfrag
 -985 245 a -844 384 a
  {
 -844 384
a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fe(0)p Fb(:)p
Fe(0)p Black Black -844 384 a
  } 3/Place PSfrag
 -844 384 a -844 523 a
  {
 -844
523 a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fe(0)p
Fb(:)p Fe(2)p Black Black -844 523 a
  } 4/Place PSfrag
 -844 523 a -844
662 a
  {
 -844 662 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fe(0)p Fb(:)p Fe(4)p Black Black -844 662 a
  } 5/Place PSfrag
 -844
662 a -844 804 a
  {
 -844 804 a Black 0.000 0.000 0.000 TeXcolorrgb
-3 x Fe(0)p Fb(:)p Fe(6)p Black Black -844 804 a
  } 6/Place PSfrag
 -844
804 a -2170 984 a
  {
 -2170 984 a Black 0.000 0.000 0.000
TeXcolorrgb -41 x Fe(LPIPS)48 b(Impro)m(v)m(ement)p Black
Black -2170 984 a
  } 7/Place PSfrag
 -2170 984 a -905 1124 a
  {
 -905 1124 a
Black 0.000 0.000 0.000 TeXcolorrgb -32 x Fa(Le)n(go)p
Black Black -905 1124 a
  } 8/Place PSfrag
 -905 1124 a -918 1236 a
  {
 -918
1236 a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fa(T)-5
b(rain)p Black Black -918 1236 a
  } 9/Place PSfrag
 -918 1236 a -952 1348
a
  {
 -952 1348 a Black 0.000 0.000 0.000 TeXcolorrgb -2
x Fa(T)g(ruck)p Black Black -952 1348 a
  } 10/Place PSfrag
 -952 1348 a -783
1456 a
  {
 -783 1456 a Black 0.000 0.000 0.000 TeXcolorrgb
Fa(PR)p Black Black -783 1456 a
  } 11/Place PSfrag
 -783 1456 a -766 1567
a
  {
 -766 1567 a Black 0.000 0.000 0.000 TeXcolorrgb -2
x Fa(DJ)p Black Black -766 1567 a
  } 12/Place PSfrag
 -766 1567 a 2817 1567
a
 currentpoint grestore moveto
 2817 1567 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF

%!PS-Adobe-2.0
%%Creator: dvips(k) 2021.1 (TeX Live 2021/W32TeX)  Copyright 2021 Radical Eye Software
%%Title: e86554e3b6c51cdf4a22caae18fa91c0.dvi
%%CreationDate: Sun Jan 28 07:23:44 2024
%%Pages: 1
%%PageOrder: Ascend
%%BoundingBox: 0 0 404 260
%%DocumentFonts: NimbusRomNo9L-Regu StandardSymL
%%EndComments
%DVIPSWebPage: (www.radicaleye.com)
%DVIPSCommandLine: dvips -q -R0 -o
%+ C:\Users\syjintw\AppData\Local\Temp\tmpmvhgjkc7\tmp.ps
%+ C:\Users\syjintw\.matplotlib\tex.cache\e8\65\e86554e3b6c51cdf4a22caae18fa91c0.dvi
%DVIPSParameters: dpi=600
%DVIPSSource:  TeX output 2024.01.28:1523
%%BeginProcSet: tex.pro 0 0
%!
/TeXDict 300 dict def TeXDict begin/N{def}def/B{bind def}N/S{exch}N/X{S
N}B/A{dup}B/TR{translate}N/isls false N/vsize 11 72 mul N/hsize 8.5 72
mul N/landplus90{false}def/@rigin{isls{[0 landplus90{1 -1}{-1 1}ifelse 0
0 0]concat}if 72 Resolution div 72 VResolution div neg scale isls{
landplus90{VResolution 72 div vsize mul 0 exch}{Resolution -72 div hsize
mul 0}ifelse TR}if Resolution VResolution vsize -72 div 1 add mul TR[
matrix currentmatrix{A A round sub abs 0.00001 lt{round}if}forall round
exch round exch]setmatrix}N/@landscape{/isls true N}B/@manualfeed{
statusdict/manualfeed true put}B/@copies{/#copies X}B/FMat[1 0 0 -1 0 0]
N/FBB[0 0 0 0]N/nn 0 N/IEn 0 N/ctr 0 N/df-tail{/nn 8 dict N nn begin
/FontType 3 N/FontMatrix fntrx N/FontBBox FBB N string/base X array
/BitMaps X/BuildChar{CharBuilder}N/Encoding IEn N end A{/foo setfont}2
array copy cvx N load 0 nn put/ctr 0 N[}B/sf 0 N/df{/sf 1 N/fntrx FMat N
df-tail}B/dfs{div/sf X/fntrx[sf 0 0 sf neg 0 0]N df-tail}B/E{pop nn A
definefont setfont}B/Cw{Cd A length 5 sub get}B/Ch{Cd A length 4 sub get
}B/Cx{128 Cd A length 3 sub get sub}B/Cy{Cd A length 2 sub get 127 sub}
B/Cdx{Cd A length 1 sub get}B/Ci{Cd A type/stringtype ne{ctr get/ctr ctr
1 add N}if}B/CharBuilder{save 3 1 roll S A/base get 2 index get S
/BitMaps get S get/Cd X pop/ctr 0 N Cdx 0 Cx Cy Ch sub Cx Cw add Cy
setcachedevice Cw Ch true[1 0 0 -1 -.1 Cx sub Cy .1 sub]{Ci}imagemask
restore}B/D{/cc X A type/stringtype ne{]}if nn/base get cc ctr put nn
/BitMaps get S ctr S sf 1 ne{A A length 1 sub A 2 index S get sf div put
}if put/ctr ctr 1 add N}B/I{cc 1 add D}B/bop{userdict/bop-hook known{
bop-hook}if/SI save N @rigin 0 0 moveto/V matrix currentmatrix A 1 get A
mul exch 0 get A mul add .99 lt{/QV}{/RV}ifelse load def pop pop}N/eop{
SI restore userdict/eop-hook known{eop-hook}if showpage}N/@start{
userdict/start-hook known{start-hook}if pop/VResolution X/Resolution X
1000 div/DVImag X/IEn 256 array N 2 string 0 1 255{IEn S A 360 add 36 4
index cvrs cvn put}for pop 65781.76 div/vsize X 65781.76 div/hsize X}N
/dir 0 def/dyy{/dir 0 def}B/dyt{/dir 1 def}B/dty{/dir 2 def}B/dtt{/dir 3
def}B/p{dir 2 eq{-90 rotate show 90 rotate}{dir 3 eq{-90 rotate show 90
rotate}{show}ifelse}ifelse}N/RMat[1 0 0 -1 0 0]N/BDot 260 string N/Rx 0
N/Ry 0 N/V{}B/RV/v{/Ry X/Rx X V}B statusdict begin/product where{pop
false[(Display)(NeXT)(LaserWriter 16/600)]{A length product length le{A
length product exch 0 exch getinterval eq{pop true exit}if}{pop}ifelse}
forall}{false}ifelse end{{gsave TR -.1 .1 TR 1 1 scale Rx Ry false RMat{
BDot}imagemask grestore}}{{gsave TR -.1 .1 TR Rx Ry scale 1 1 false RMat
{BDot}imagemask grestore}}ifelse B/QV{gsave newpath transform round exch
round exch itransform moveto Rx 0 rlineto 0 Ry neg rlineto Rx neg 0
rlineto fill grestore}B/a{moveto}B/delta 0 N/tail{A/delta X 0 rmoveto}B
/M{S p delta add tail}B/b{S p tail}B/c{-4 M}B/d{-3 M}B/e{-2 M}B/f{-1 M}
B/g{0 M}B/h{1 M}B/i{2 M}B/j{3 M}B/k{4 M}B/w{0 rmoveto}B/l{p -4 w}B/m{p
-3 w}B/n{p -2 w}B/o{p -1 w}B/q{p 1 w}B/r{p 2 w}B/s{p 3 w}B/t{p 4 w}B/x{
0 S rmoveto}B/y{3 2 roll p a}B/bos{/SS save N}B/eos{SS restore}B end

%%EndProcSet
%%BeginProcSet: psfrag.pro 0 0
%%
%% This is file `psfrag.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% psfrag.dtx  (with options: `filepro')
%% 
%% Copyright (c) 1996 Craig Barratt, Michael C. Grant, and David Carlisle.
%% All rights reserved.
%% 
%% This file is part of the PSfrag package.
%% 
userdict begin
/PSfragLib 90 dict def
/PSfragDict 6 dict def
/PSfrag { PSfragLib begin load exec end } bind def
end
PSfragLib begin
/RO /readonly      load def
/CP /currentpoint  load def
/CM /currentmatrix load def
/B { bind RO def } bind def
/X { exch def } B
/MD { { X } forall } B
/OE { end exec PSfragLib begin } B
/S false def
/tstr 8 string def
/islev2 { languagelevel } stopped { false } { 2 ge } ifelse def
[ /sM /tM /srcM /dstM /dM /idM /srcFM /dstFM ] { matrix def } forall
sM currentmatrix RO pop
dM defaultmatrix RO idM invertmatrix RO pop
srcFM identmatrix pop
/Hide { gsave { CP } stopped not newpath clip { moveto } if } B
/Unhide { { CP } stopped not grestore { moveto } if } B
/setrepl islev2 {{ /glob currentglobal def true setglobal array astore
                   globaldict exch /PSfrags exch put glob setglobal }}
                {{ array astore /PSfrags X }} ifelse B
/getrepl islev2 {{ globaldict /PSfrags get aload length }}
                {{ PSfrags aload length }} ifelse B
/convert {
   /src X src length string
   /c 0 def src length {
      dup c src c get dup 32 lt { pop 32 } if put /c c 1 add def
   } repeat
} B
/Begin {
    /saver save def
    srcFM exch 3 exch put
    0 ne /debugMode X 0 setrepl
    dup /S exch dict def { S 3 1 roll exch convert exch put } repeat
    srcM CM dup invertmatrix pop
    mark { currentdict { end } stopped { pop exit } if } loop
    PSfragDict counttomark { begin } repeat pop
} B
/End {
    mark { currentdict end dup PSfragDict eq { pop exit } if } loop
    counttomark { begin } repeat pop
    getrepl saver restore
    7 idiv dup /S exch dict def {
        6 array astore /mtrx X tstr cvs /K X
        S K [ S K known { S K get aload pop } if mtrx ] put
    } repeat
} B
/Place {
    tstr cvs /K X
    S K known {
        bind /proc X tM CM pop
        CP /cY X /cX X
        0 0 transform idtransform neg /aY X neg /aX X
        S K get dup length /maxiter X
        /iter 1 def {
            iter maxiter ne { /saver save def } if
            tM setmatrix aX aY translate
            [ exch aload pop idtransform ] concat
            cX neg cY neg translate cX cY moveto
            /proc load OE
            iter maxiter ne { saver restore /iter iter 1 add def } if
        } forall
        /noXY { CP /cY X /cX X } stopped def
        tM setmatrix noXY { newpath } { cX cY moveto } ifelse
    } {
        Hide OE Unhide
    } ifelse
} B
/normalize {
    2 index dup mul 2 index dup mul add sqrt div
    dup 4 -1 roll exch mul 3 1 roll mul
} B
/replace {
    aload pop MD
    CP /bY X /lX X gsave sM setmatrix
    str stringwidth abs exch abs add dup 0 eq
        { pop } { 360 exch div dup scale } ifelse
    lX neg bY neg translate newpath lX bY moveto
    str { /ch X ( ) dup 0 ch put false charpath ch Kproc } forall
    flattenpath pathbbox [ /uY /uX /lY /lX ] MD
    CP grestore moveto
    currentfont /FontMatrix get dstFM copy dup
    0 get 0 lt { uX lX /uX X /lX X } if
    3 get 0 lt { uY lY /uY X /lY X } if
    /cX uX lX add 0.5 mul def
    /cY uY lY add 0.5 mul def
    debugMode { gsave 0 setgray 1 setlinewidth
        lX lY moveto lX uY lineto uX uY lineto uX lY lineto closepath
        lX bY moveto uX bY lineto lX cY moveto uX cY lineto
        cX lY moveto cX uY lineto stroke
    grestore } if
    dstFM dup invertmatrix dstM CM srcM
    2 { dstM concatmatrix } repeat pop
    getrepl /temp X
        S str convert get {
            aload pop [ /rot /scl /loc /K ] MD
            /aX cX def /aY cY def
            loc {
                dup 66  eq { /aY bY def } { % B
                dup 98  eq { /aY lY def } { % b
                dup 108 eq { /aX lX def } { % l
                dup 114 eq { /aX uX def } { % r
                dup 116 eq { /aY uY def }   % t
                if } ifelse } ifelse } ifelse } ifelse pop
            } forall
            K srcFM rot tM rotate dstM
            2 { tM concatmatrix } repeat aload pop pop pop
            2 { scl normalize 4 2 roll } repeat
            aX aY transform
            /temp temp 7 add def
        } forall
    temp setrepl
} B
/Rif {
    S 3 index convert known { pop replace } { exch pop OE } ifelse
} B
/XA { bind [ /Kproc /str } B /XC { ] 2 array astore def } B
/xs   { pop } XA XC
/xks  { /kern load OE } XA /kern XC
/xas  { pop ax ay rmoveto } XA /ay /ax XC
/xws  { c eq { cx cy rmoveto } if } XA /c /cy /cx XC
/xaws { ax ay rmoveto c eq { cx cy rmoveto } if }
    XA /ay /ax /c /cy /cx XC
/raws { xaws { awidthshow } Rif } B
/rws  { xws { widthshow } Rif } B
/rks  { xks { kshow } Rif } B
/ras  { xas { ashow } Rif } B
/rs   { xs { show } Rif } B
/rrs { getrepl dup 2 add -1 roll //restore exec setrepl } B
PSfragDict begin
islev2 not { /restore { /rrs PSfrag } B } if
/show       { /rs   PSfrag } B
/kshow      { /rks  PSfrag } B
/ashow      { /ras  PSfrag } B
/widthshow  { /rws  PSfrag } B
/awidthshow { /raws PSfrag } B
end PSfragDict RO pop
end

%%EndProcSet
%%BeginProcSet: l3backend-dvips.pro 0 0
%%
%% This is file `l3backend-dvips.pro',
%% generated with the docstrip utility.
%%
%% The original source files were:
%%
%% l3backend-header.dtx  (with options: `header,dvips')
%% 
%% Copyright (C) 2019-2022 The LaTeX Project
%% 
%% It may be distributed and/or modified under the conditions of
%% the LaTeX Project Public License (LPPL), either version 1.3c of
%% this license or (at your option) any later version.  The latest
%% version of this license is in the file:
%% 
%%    https://www.latex-project.org/lppl.txt
%% 
%% This file is part of the "l3backend bundle" (The Work in LPPL)
%% and all files in that bundle must be distributed together.
%% 
%% File: l3backend-header.dtx
/color.sc { } def
TeXDict begin
/TeXcolorseparation { setcolor } def
end
true setglobal
/pdf.globaldict 4 dict def
false setglobal
/pdf.cvs { 65534 string cvs } def
/pdf.dvi.pt { 72.27 mul Resolution div } def
/pdf.pt.dvi { 72.27 div Resolution mul } def
/pdf.rect.ht { dup 1 get neg exch 3 get add } def
/pdf.linkmargin { 1 pdf.pt.dvi } def
/pdf.linkdp.pad { 0 } def
/pdf.linkht.pad { 0 } def
/pdf.rect
  { /Rect [ pdf.llx pdf.lly pdf.urx pdf.ury ] } def
/pdf.save.ll
  {
    currentpoint
    /pdf.lly exch def
    /pdf.llx exch def
  }
    def
/pdf.save.ur
  {
    currentpoint
    /pdf.ury exch def
    /pdf.urx exch def
  }
    def
/pdf.save.linkll
  {
    currentpoint
    pdf.linkmargin add
    pdf.linkdp.pad add
    /pdf.lly exch def
    pdf.linkmargin sub
    /pdf.llx exch def
  }
    def
/pdf.save.linkur
  {
    currentpoint
    pdf.linkmargin sub
    pdf.linkht.pad sub
    /pdf.ury exch def
    pdf.linkmargin add
    /pdf.urx exch def
  }
    def
/pdf.dest.anchor
  {
    currentpoint exch
    pdf.dvi.pt 72 add
    /pdf.dest.x exch def
    pdf.dvi.pt
    vsize 72 sub exch sub
    /pdf.dest.y exch def
  }
    def
/pdf.dest.point
  { pdf.dest.x pdf.dest.y } def
/pdf.dest2device
  {
    /pdf.dest.y exch def
    /pdf.dest.x exch def
    matrix currentmatrix
    matrix defaultmatrix
    matrix invertmatrix
    matrix concatmatrix
    cvx exec
    /pdf.dev.y exch def
    /pdf.dev.x exch def
    /pdf.tmpd exch def
    /pdf.tmpc exch def
    /pdf.tmpb exch def
    /pdf.tmpa exch def
    pdf.dest.x pdf.tmpa mul
      pdf.dest.y pdf.tmpc mul add
      pdf.dev.x add
    pdf.dest.x pdf.tmpb mul
     pdf.dest.y pdf.tmpd mul add
     pdf.dev.y add
  }
    def
/pdf.bordertracking false def
/pdf.bordertracking.begin
  {
    SDict /pdf.bordertracking true put
    SDict /pdf.leftboundary undef
    SDict /pdf.rightboundary undef
    /a where
      {
        /a
          {
            currentpoint pop
            SDict /pdf.rightboundary known dup
              {
                SDict /pdf.rightboundary get 2 index lt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.rightboundary exch put }
            ifelse
            moveto
            currentpoint pop
            SDict /pdf.leftboundary known dup
              {
                SDict /pdf.leftboundary get 2 index gt
                  { not }
                if
              }
            if
              { pop }
              { SDict exch /pdf.leftboundary exch put }
            ifelse
          }
        put
      }
    if
  }
    def
/pdf.bordertracking.end
  {
    /a where { /a { moveto } put } if
    /x where { /x { 0 exch rmoveto } put } if
    SDict /pdf.leftboundary known
      { pdf.outerbox 0 pdf.leftboundary put }
    if
    SDict /pdf.rightboundary known
      { pdf.outerbox 2 pdf.rightboundary put }
    if
    SDict /pdf.bordertracking false put
  }
    def
  /pdf.bordertracking.endpage
{
  pdf.bordertracking
    {
      pdf.bordertracking.end
      true setglobal
      pdf.globaldict
        /pdf.brokenlink.rect [ pdf.outerbox aload pop ] put
      pdf.globaldict
        /pdf.brokenlink.skip pdf.baselineskip put
      pdf.globaldict
        /pdf.brokenlink.dict
          pdf.link.dict pdf.cvs put
      false setglobal
      mark pdf.link.dict cvx exec /Rect
        [
          pdf.llx
          pdf.lly
          pdf.outerbox 2 get pdf.linkmargin add
          currentpoint exch pop
          pdf.outerbox pdf.rect.ht sub pdf.linkmargin sub
        ]
      /ANN pdf.pdfmark
    }
  if
}
  def
/pdf.bordertracking.continue
  {
    /pdf.link.dict pdf.globaldict
      /pdf.brokenlink.dict get def
    /pdf.outerbox pdf.globaldict
      /pdf.brokenlink.rect get def
    /pdf.baselineskip pdf.globaldict
      /pdf.brokenlink.skip get def
    pdf.globaldict dup dup
    /pdf.brokenlink.dict undef
    /pdf.brokenlink.skip undef
    /pdf.brokenlink.rect undef
    currentpoint
    /pdf.originy exch def
    /pdf.originx exch def
    /a where
      {
        /a
          {
            moveto
            SDict
            begin
            currentpoint pdf.originy ne exch
              pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
    /x where
      {
        /x
          {
            0 exch rmoveto
            SDict
            begin
            currentpoint
            pdf.originy ne exch pdf.originx ne or
              {
                pdf.save.linkll
                /pdf.lly
                  pdf.lly pdf.outerbox 1 get sub def
                pdf.bordertracking.begin
              }
            if
            end
          }
        put
      }
    if
  }
    def
/pdf.breaklink
  {
    pop
    counttomark 2 mod 0 eq
      {
        counttomark /pdf.count exch def
          {
           pdf.count 0 eq { exit } if
           counttomark 2 roll
           1 index /Rect eq
             {
               dup 4 array copy
               dup dup
                 1 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add sub
                 3 exch put
               dup
                 pdf.outerbox 2 get
                 pdf.linkmargin add
                 2 exch put
               dup dup
                 3 get
                 pdf.outerbox pdf.rect.ht
                 pdf.linkmargin 2 mul add add
                 1 exch put
               /pdf.currentrect exch  def
               pdf.breaklink.write
                 {
                   pdf.currentrect
                   dup
                     pdf.outerbox 0 get
                     pdf.linkmargin sub
                     0 exch put
                   dup
                     pdf.outerbox 2 get
                     pdf.linkmargin add
                     2 exch put
                   dup dup
                     1 get
                     pdf.baselineskip add
                     1 exch put
                   dup dup
                     3 get
                     pdf.baselineskip add
                     3 exch put
                   /pdf.currentrect exch def
                   pdf.breaklink.write
                  }
                1 index 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                2 index 1 get sub
                pdf.baselineskip div round cvi 1 sub
                exch
              repeat
              pdf.currentrect
              dup
                pdf.outerbox 0 get
                pdf.linkmargin sub
                0 exch put
              dup dup
                1 get
                pdf.baselineskip add
                1 exch put
              dup dup
                3 get
                pdf.baselineskip add
                3 exch put
              dup 2 index 2 get  2 exch put
              /pdf.currentrect exch def
              pdf.breaklink.write
              SDict /pdf.pdfmark.good false put
              exit
            }
            { pdf.count 2 sub /pdf.count exch def }
          ifelse
        }
      loop
    }
  if
  /ANN
}
  def
/pdf.breaklink.write
  {
    counttomark 1 sub
    index /_objdef eq
      {
        counttomark -2 roll
        dup wcheck
          {
            readonly
            counttomark 2 roll
          }
          { pop pop }
        ifelse
      }
    if
    counttomark 1 add copy
    pop pdf.currentrect
    /ANN pdfmark
  }
    def
/pdf.pdfmark
  {
    SDict /pdf.pdfmark.good true put
    dup /ANN eq
      {
        pdf.pdfmark.store
        pdf.pdfmark.dict
          begin
            Subtype /Link eq
            currentdict /Rect known and
            SDict /pdf.outerbox known and
            SDict /pdf.baselineskip known and
              {
                Rect 3 get
                pdf.linkmargin 2 mul add
                pdf.outerbox pdf.rect.ht add
                Rect 1 get sub
                pdf.baselineskip div round cvi 0 gt
                  { pdf.breaklink }
                if
              }
            if
          end
        SDict /pdf.outerbox undef
        SDict /pdf.baselineskip undef
        currentdict /pdf.pdfmark.dict undef
      }
    if
    pdf.pdfmark.good
      { pdfmark }
      { cleartomark }
    ifelse
  }
    def
/pdf.pdfmark.store
  {
    /pdf.pdfmark.dict 65534 dict def
    counttomark 1 add copy
    pop
      {
        dup mark eq
          {
            pop
            exit
          }
          {
            pdf.pdfmark.dict
            begin def end
          }
        ifelse
      }
    loop
}
  def
%% 
%%
%% End of file `l3backend-dvips.pro'.

%%EndProcSet
%%BeginProcSet: 8r.enc 0 0
% File 8r.enc  TeX Base 1 Encoding  Revision 2.0  2002-10-30
%
% @@psencodingfile@{
%   author    = "S. Rahtz, P. MacKay, Alan Jeffrey, B. Horn, K. Berry,
%                W. Schmidt, P. Lehman",
%   version   = "2.0",
%   date      = "27nov06",
%   filename  = "8r.enc",
%   email     = "tex-fonts@@tug.org",
%   docstring = "This is the encoding vector for Type1 and TrueType
%                fonts to be used with TeX.  This file is part of the
%                PSNFSS bundle, version 9"
% @}
% 
% The idea is to have all the characters normally included in Type 1 fonts
% available for typesetting. This is effectively the characters in Adobe
% Standard encoding, ISO Latin 1, Windows ANSI including the euro symbol,
% MacRoman, and some extra characters from Lucida.
% 
% Character code assignments were made as follows:
% 
% (1) the Windows ANSI characters are almost all in their Windows ANSI
% positions, because some Windows users cannot easily reencode the
% fonts, and it makes no difference on other systems. The only Windows
% ANSI characters not available are those that make no sense for
% typesetting -- rubout (127 decimal), nobreakspace (160), softhyphen
% (173). quotesingle and grave are moved just because it's such an
% irritation not having them in TeX positions.
% 
% (2) Remaining characters are assigned arbitrarily to the lower part
% of the range, avoiding 0, 10 and 13 in case we meet dumb software.
% 
% (3) Y&Y Lucida Bright includes some extra text characters; in the
% hopes that other PostScript fonts, perhaps created for public
% consumption, will include them, they are included starting at 0x12.
% These are /dotlessj /ff /ffi /ffl.
% 
% (4) hyphen appears twice for compatibility with both ASCII and Windows.
%
% (5) /Euro was assigned to 128, as in Windows ANSI
%
% (6) Missing characters from MacRoman encoding incorporated as follows:
%
%     PostScript      MacRoman        TeXBase1
%     --------------  --------------  --------------
%     /notequal       173             0x16
%     /infinity       176             0x17
%     /lessequal      178             0x18
%     /greaterequal   179             0x19
%     /partialdiff    182             0x1A
%     /summation      183             0x1B
%     /product        184             0x1C
%     /pi             185             0x1D
%     /integral       186             0x81
%     /Omega          189             0x8D
%     /radical        195             0x8E
%     /approxequal    197             0x8F
%     /Delta          198             0x9D
%     /lozenge        215             0x9E
%
/TeXBase1Encoding [
% 0x00
 /.notdef /dotaccent /fi /fl
 /fraction /hungarumlaut /Lslash /lslash
 /ogonek /ring /.notdef /breve
 /minus /.notdef /Zcaron /zcaron
% 0x10
 /caron /dotlessi /dotlessj /ff
 /ffi /ffl /notequal /infinity
 /lessequal /greaterequal /partialdiff /summation
 /product /pi /grave /quotesingle
% 0x20
 /space /exclam /quotedbl /numbersign
 /dollar /percent /ampersand /quoteright
 /parenleft /parenright /asterisk /plus
 /comma /hyphen /period /slash
% 0x30
 /zero /one /two /three
 /four /five /six /seven
 /eight /nine /colon /semicolon
 /less /equal /greater /question
% 0x40
 /at /A /B /C
 /D /E /F /G
 /H /I /J /K
 /L /M /N /O
% 0x50
 /P /Q /R /S
 /T /U /V /W
 /X /Y /Z /bracketleft
 /backslash /bracketright /asciicircum /underscore
% 0x60
 /quoteleft /a /b /c
 /d /e /f /g
 /h /i /j /k
 /l /m /n /o
% 0x70
 /p /q /r /s
 /t /u /v /w
 /x /y /z /braceleft
 /bar /braceright /asciitilde /.notdef
% 0x80
 /Euro /integral /quotesinglbase /florin
 /quotedblbase /ellipsis /dagger /daggerdbl
 /circumflex /perthousand /Scaron /guilsinglleft
 /OE /Omega /radical /approxequal
% 0x90
 /.notdef /.notdef /.notdef /quotedblleft
 /quotedblright /bullet /endash /emdash
 /tilde /trademark /scaron /guilsinglright
 /oe /Delta /lozenge /Ydieresis
% 0xA0
 /.notdef /exclamdown /cent /sterling
 /currency /yen /brokenbar /section
 /dieresis /copyright /ordfeminine /guillemotleft
 /logicalnot /hyphen /registered /macron
% 0xB0
 /degree /plusminus /twosuperior /threesuperior
 /acute /mu /paragraph /periodcentered
 /cedilla /onesuperior /ordmasculine /guillemotright
 /onequarter /onehalf /threequarters /questiondown
% 0xC0
 /Agrave /Aacute /Acircumflex /Atilde
 /Adieresis /Aring /AE /Ccedilla
 /Egrave /Eacute /Ecircumflex /Edieresis
 /Igrave /Iacute /Icircumflex /Idieresis
% 0xD0
 /Eth /Ntilde /Ograve /Oacute
 /Ocircumflex /Otilde /Odieresis /multiply
 /Oslash /Ugrave /Uacute /Ucircumflex
 /Udieresis /Yacute /Thorn /germandbls
% 0xE0
 /agrave /aacute /acircumflex /atilde
 /adieresis /aring /ae /ccedilla
 /egrave /eacute /ecircumflex /edieresis
 /igrave /iacute /icircumflex /idieresis
% 0xF0
 /eth /ntilde /ograve /oacute
 /ocircumflex /otilde /odieresis /divide
 /oslash /ugrave /uacute /ucircumflex
 /udieresis /yacute /thorn /ydieresis
] def


%%EndProcSet
%%BeginProcSet: texps.pro 0 0
%!
TeXDict begin/rf{findfont dup length 1 add dict begin{1 index/FID ne 2
index/UniqueID ne and{def}{pop pop}ifelse}forall[1 index 0 6 -1 roll
exec 0 exch 5 -1 roll VResolution Resolution div mul neg 0 0]FontType 0
ne{/Metrics exch def dict begin Encoding{exch dup type/integertype ne{
pop pop 1 sub dup 0 le{pop}{[}ifelse}{FontMatrix 0 get div Metrics 0 get
div def}ifelse}forall Metrics/Metrics currentdict end def}{{1 index type
/nametype eq{exit}if exch pop}loop}ifelse[2 index currentdict end
definefont 3 -1 roll makefont/setfont cvx]cvx def}def/ObliqueSlant{dup
sin S cos div neg}B/SlantFont{4 index mul add}def/ExtendFont{3 -1 roll
mul exch}def/ReEncodeFont{CharStrings rcheck{/Encoding false def dup[
exch{dup CharStrings exch known not{pop/.notdef/Encoding true def}if}
forall Encoding{]exch pop}{cleartomark}ifelse}if/Encoding exch def}def
end

%%EndProcSet
%%BeginProcSet: special.pro 0 0
%!
TeXDict begin/SDict 200 dict N SDict begin/@SpecialDefaults{/hs 612 N
/vs 792 N/ho 0 N/vo 0 N/hsc 1 N/vsc 1 N/ang 0 N/CLIP 0 N/rwiSeen false N
/rhiSeen false N/letter{}N/note{}N/a4{}N/legal{}N}B/@scaleunit 100 N
/@hscale{@scaleunit div/hsc X}B/@vscale{@scaleunit div/vsc X}B/@hsize{
/hs X/CLIP 1 N}B/@vsize{/vs X/CLIP 1 N}B/@clip{/CLIP 2 N}B/@hoffset{/ho
X}B/@voffset{/vo X}B/@angle{/ang X}B/@rwi{10 div/rwi X/rwiSeen true N}B
/@rhi{10 div/rhi X/rhiSeen true N}B/@llx{/llx X}B/@lly{/lly X}B/@urx{
/urx X}B/@ury{/ury X}B/magscale true def end/@MacSetUp{userdict/md known
{userdict/md get type/dicttype eq{userdict begin md length 10 add md
maxlength ge{/md md dup length 20 add dict copy def}if end md begin
/letter{}N/note{}N/legal{}N/od{txpose 1 0 mtx defaultmatrix dtransform S
atan/pa X newpath clippath mark{transform{itransform moveto}}{transform{
itransform lineto}}{6 -2 roll transform 6 -2 roll transform 6 -2 roll
transform{itransform 6 2 roll itransform 6 2 roll itransform 6 2 roll
curveto}}{{closepath}}pathforall newpath counttomark array astore/gc xdf
pop ct 39 0 put 10 fz 0 fs 2 F/|______Courier fnt invertflag{PaintBlack}
if}N/txpose{pxs pys scale ppr aload pop por{noflips{pop S neg S TR pop 1
-1 scale}if xflip yflip and{pop S neg S TR 180 rotate 1 -1 scale ppr 3
get ppr 1 get neg sub neg ppr 2 get ppr 0 get neg sub neg TR}if xflip
yflip not and{pop S neg S TR pop 180 rotate ppr 3 get ppr 1 get neg sub
neg 0 TR}if yflip xflip not and{ppr 1 get neg ppr 0 get neg TR}if}{
noflips{TR pop pop 270 rotate 1 -1 scale}if xflip yflip and{TR pop pop
90 rotate 1 -1 scale ppr 3 get ppr 1 get neg sub neg ppr 2 get ppr 0 get
neg sub neg TR}if xflip yflip not and{TR pop pop 90 rotate ppr 3 get ppr
1 get neg sub neg 0 TR}if yflip xflip not and{TR pop pop 270 rotate ppr
2 get ppr 0 get neg sub neg 0 S TR}if}ifelse scaleby96{ppr aload pop 4
-1 roll add 2 div 3 1 roll add 2 div 2 copy TR .96 dup scale neg S neg S
TR}if}N/cp{pop pop showpage pm restore}N end}if}if}N/normalscale{
Resolution 72 div VResolution 72 div neg scale magscale{DVImag dup scale
}if 0 setgray}N/@beginspecial{SDict begin/SpecialSave save N gsave
normalscale currentpoint TR @SpecialDefaults count/ocount X/dcount
countdictstack N}N/@setspecial{CLIP 1 eq{newpath 0 0 moveto hs 0 rlineto
0 vs rlineto hs neg 0 rlineto closepath clip}if ho vo TR hsc vsc scale
ang rotate rwiSeen{rwi urx llx sub div rhiSeen{rhi ury lly sub div}{dup}
ifelse scale llx neg lly neg TR}{rhiSeen{rhi ury lly sub div dup scale
llx neg lly neg TR}if}ifelse CLIP 2 eq{newpath llx lly moveto urx lly
lineto urx ury lineto llx ury lineto closepath clip}if/showpage{}N
/erasepage{}N/setpagedevice{pop}N/copypage{}N newpath}N/@endspecial{
count ocount sub{pop}repeat countdictstack dcount sub{end}repeat
grestore SpecialSave restore end}N/@defspecial{SDict begin}N
/@fedspecial{end}B/li{lineto}B/rl{rlineto}B/rc{rcurveto}B/np{/SaveX
currentpoint/SaveY X N 1 setlinecap newpath}N/st{stroke SaveX SaveY
moveto}N/fil{fill SaveX SaveY moveto}N/ellipse{/endangle X/startangle X
/yrad X/xrad X/savematrix matrix currentmatrix N TR xrad yrad scale 0 0
1 startangle endangle arc savematrix setmatrix}N end

%%EndProcSet
%%BeginProcSet: color.pro 0 0
%!
TeXDict begin/setcmykcolor where{pop}{/setcmykcolor{dup 10 eq{pop
setrgbcolor}{1 sub 4 1 roll 3{3 index add neg dup 0 lt{pop 0}if 3 1 roll
}repeat setrgbcolor pop}ifelse}B}ifelse/TeXcolorcmyk{setcmykcolor}def
/TeXcolorrgb{setrgbcolor}def/TeXcolorgrey{setgray}def/TeXcolorgray{
setgray}def/TeXcolorhsb{sethsbcolor}def/currentcmykcolor where{pop}{
/currentcmykcolor{currentrgbcolor 10}B}ifelse/DC{exch dup userdict exch
known{pop pop}{X}ifelse}B/GreenYellow{0.15 0 0.69 0 setcmykcolor}DC
/Yellow{0 0 1 0 setcmykcolor}DC/Goldenrod{0 0.10 0.84 0 setcmykcolor}DC
/Dandelion{0 0.29 0.84 0 setcmykcolor}DC/Apricot{0 0.32 0.52 0
setcmykcolor}DC/Peach{0 0.50 0.70 0 setcmykcolor}DC/Melon{0 0.46 0.50 0
setcmykcolor}DC/YellowOrange{0 0.42 1 0 setcmykcolor}DC/Orange{0 0.61
0.87 0 setcmykcolor}DC/BurntOrange{0 0.51 1 0 setcmykcolor}DC
/Bittersweet{0 0.75 1 0.24 setcmykcolor}DC/RedOrange{0 0.77 0.87 0
setcmykcolor}DC/Mahogany{0 0.85 0.87 0.35 setcmykcolor}DC/Maroon{0 0.87
0.68 0.32 setcmykcolor}DC/BrickRed{0 0.89 0.94 0.28 setcmykcolor}DC/Red{
0 1 1 0 setcmykcolor}DC/OrangeRed{0 1 0.50 0 setcmykcolor}DC/RubineRed{
0 1 0.13 0 setcmykcolor}DC/WildStrawberry{0 0.96 0.39 0 setcmykcolor}DC
/Salmon{0 0.53 0.38 0 setcmykcolor}DC/CarnationPink{0 0.63 0 0
setcmykcolor}DC/Magenta{0 1 0 0 setcmykcolor}DC/VioletRed{0 0.81 0 0
setcmykcolor}DC/Rhodamine{0 0.82 0 0 setcmykcolor}DC/Mulberry{0.34 0.90
0 0.02 setcmykcolor}DC/RedViolet{0.07 0.90 0 0.34 setcmykcolor}DC
/Fuchsia{0.47 0.91 0 0.08 setcmykcolor}DC/Lavender{0 0.48 0 0
setcmykcolor}DC/Thistle{0.12 0.59 0 0 setcmykcolor}DC/Orchid{0.32 0.64 0
0 setcmykcolor}DC/DarkOrchid{0.40 0.80 0.20 0 setcmykcolor}DC/Purple{
0.45 0.86 0 0 setcmykcolor}DC/Plum{0.50 1 0 0 setcmykcolor}DC/Violet{
0.79 0.88 0 0 setcmykcolor}DC/RoyalPurple{0.75 0.90 0 0 setcmykcolor}DC
/BlueViolet{0.86 0.91 0 0.04 setcmykcolor}DC/Periwinkle{0.57 0.55 0 0
setcmykcolor}DC/CadetBlue{0.62 0.57 0.23 0 setcmykcolor}DC
/CornflowerBlue{0.65 0.13 0 0 setcmykcolor}DC/MidnightBlue{0.98 0.13 0
0.43 setcmykcolor}DC/NavyBlue{0.94 0.54 0 0 setcmykcolor}DC/RoyalBlue{1
0.50 0 0 setcmykcolor}DC/Blue{1 1 0 0 setcmykcolor}DC/Cerulean{0.94 0.11
0 0 setcmykcolor}DC/Cyan{1 0 0 0 setcmykcolor}DC/ProcessBlue{0.96 0 0 0
setcmykcolor}DC/SkyBlue{0.62 0 0.12 0 setcmykcolor}DC/Turquoise{0.85 0
0.20 0 setcmykcolor}DC/TealBlue{0.86 0 0.34 0.02 setcmykcolor}DC
/Aquamarine{0.82 0 0.30 0 setcmykcolor}DC/BlueGreen{0.85 0 0.33 0
setcmykcolor}DC/Emerald{1 0 0.50 0 setcmykcolor}DC/JungleGreen{0.99 0
0.52 0 setcmykcolor}DC/SeaGreen{0.69 0 0.50 0 setcmykcolor}DC/Green{1 0
1 0 setcmykcolor}DC/ForestGreen{0.91 0 0.88 0.12 setcmykcolor}DC
/PineGreen{0.92 0 0.59 0.25 setcmykcolor}DC/LimeGreen{0.50 0 1 0
setcmykcolor}DC/YellowGreen{0.44 0 0.74 0 setcmykcolor}DC/SpringGreen{
0.26 0 0.76 0 setcmykcolor}DC/OliveGreen{0.64 0 0.95 0.40 setcmykcolor}
DC/RawSienna{0 0.72 1 0.45 setcmykcolor}DC/Sepia{0 0.83 1 0.70
setcmykcolor}DC/Brown{0 0.81 1 0.60 setcmykcolor}DC/Tan{0.14 0.42 0.56 0
setcmykcolor}DC/Gray{0 0 0 0.50 setcmykcolor}DC/Black{0 0 0 1
setcmykcolor}DC/White{0 0 0 0 setcmykcolor}DC end

%%EndProcSet
%%BeginFont: NimbusRomNo9L-Regu
%!PS-AdobeFont-1.0: NimbusRomNo9L-Regu 1.05
%%CreationDate: Wed Dec 22 1999
% Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development
% (URW)++,Copyright 1999 by (URW)++ Design & Development
% See the file COPYING (GNU General Public License) for license conditions.
% As a special exception, permission is granted to include this font
% program in a Postscript or PDF file that consists of a document that
% contains text to be displayed or printed using this font, regardless
% of the conditions or license applying to the document itself.
12 dict begin
/FontInfo 10 dict dup begin
/version (1.05) readonly def
/Notice ((URW)++,Copyright 1999 by (URW)++ Design & Development. See the file COPYING (GNU General Public License) for license conditions. As a special exception, permission is granted to include this font program in a Postscript or PDF file that consists of a document that contains text to be displayed or printed using this font, regardless of the conditions or license applying to the document itself.) readonly def
/Copyright (Copyright (URW)++,Copyright 1999 by (URW)++ Design & Development) readonly def
/FullName (Nimbus Roman No9 L Regular) readonly def
/FamilyName (Nimbus Roman No9 L) readonly def
/Weight (Regular) readonly def
/ItalicAngle 0.0 def
/isFixedPitch false def
/UnderlinePosition -100 def
/UnderlineThickness 50 def
end readonly def
/FontName /NimbusRomNo9L-Regu def
/PaintType 0 def
/WMode 0 def
/FontBBox {-168 -281 1000 924} readonly def
/FontType 1 def
/FontMatrix [0.001 0.0 0.0 0.001 0.0 0.0] readonly def
/Encoding StandardEncoding def
currentdict end
currentfile eexec
D9D66F633B846A989B9974B0179FC6CC445BC2C03103C68570A7B354A4A280AE
6FBF7F9888E039AB60FCAF852EB4CE3AFEB979D5EA70FDE44A2AE5C8C0166C27
BF9665EEA11C7D2329C1A211DD26BB372BE5822F5EA70D99EB578C7BEFD44CDF
045A363056E5E1CC51525EA6FC061DCEBB337208EFF729802376A2801424F670
0E7E6397B28F15BC10B40012B0A3EAEB2693E8F7F627C4C9C7C6C5BFF105C1E4
1B2B9E8F09253B76040D268B80719E1B3F5A55AB7B8E152A40E590419249F2E4
C36159F8E54B532468E36965A38646781AB0B7F6A3E851FD10CAA49ADFC1E546
2FD2EC6150DC6E19523050F6148348A561AD8D2E2721EFF8A570CB33460A745B
926C889304C09753C2D78FB0CA95DC6DE5B8C524752C83601E7E9F73DF660674
F05AD83A166DA9BE89F22FEABD4B2665960F6FB5BC32928E1230C212E5D69CEE
0B3311A1738A11747AE263106916D8E95F25B25B4BC6AFB03B79ABB95DDA518B
41A49458111D2A1433C043627EF9460D324FFE22935F4F6DA88B8B91AE95B34E
08408A34EC8EAC3F65B6AE3E3E2524867EE9D29068F81E4372F4470BEEB4D6BE
EE4DF956BECC0CB77F8490117B22B2FB75C938ED0A5E208D88BC38B2AB8B9CFB
F1D53084B6F43DF336481ECA0AA2D5317BC83FC0E1D4DB01D0B7707EEF217E94
A7F985102DED27D8E8B009F7EF6DB91B91E78BFAE7BD688E10B3DC9AC77CDEE8
47AA4DC8EC78241E593D26EC7A60696151A2AE5325D736E99E01BDCBDE69579F
92EEEC224B6757EEDC64A75455BB665DF42A0E4CE7B99BF3E7D66F8FFC8C13F9
D7A1FF7A9D5FF7AC43396779F11C9B008C33A2043D48B61B88B03104B1425F09
675B559CA4302C001EE80D2B739CC0FD1023BF4F1FF9C01E892E59CCA7C26011
B8E0B6D29CC29FC72792FDA5E7D5D88EF98F9DBA960C96534C399C54865EAB86
0FA2E0D6C7C44B553EAC1574D55E7970744D4792FFFBDCE6FB4365BDBC2965BB
2E9EDAD9E0EBF0B620DB415AD98297F5AE83D9C710436657E74D26E83957C745
89834337035A7501803947F6880B70E56A3A404C62D57B849D28804CBE0F5884
435A0E12DCC9BA414ABB732BFBAE237001F557DEA5E972BA0838A3C7C9EB75AA
4A050DA0A529BDFFBF9011C360564FD17A02C18860AF6B86EFD4E2C125686C9A
5E114E95C71FC89A5DE9C589BFE5AC0480CFF716345265D2435EDAE67CFC4801
5BC08E7A48D683ACDB91E05F469C0C8919D73A5D07A1CCB173E30E76680ACB09
02A40A3E11916198BD69F1A26E88330F50692D0D5917E99E7A01B327413E24AA
E98EA484E45897E6AE4D6997B6E8BBF61C9406E916D56985CB2BD297E8ACFC6E
CF2D2281AD84696B7C6CB584BD85CC20BA14ADD3BC3E25DB91124C0ACF22E902
3CFBF04CC40DE331991E9075D22AB5EE0E849B340050E6C417C664A782D05549
DB2EF572F193B1C12B4635C2B358747046DE585DE98B96A3F7E36CB37CE1EB1D
11E2CBF99F15F7C116DB632EB22A6C7A3C921FF716E9753F4068CD684517F327
58E8F5D1A42D40CCFB40C13249D90B00E1FB1F743CA143C191A39BA398B920B5
F25683596AADC66BF831DB6A5435937A0B37B5F1BC381AE33AB09D8ABD419796
3F247467259BADF061BF5F70E4BA0CD7D2227F5E20A5428CD87225C7FF28FDCD
4FB898A052A0B1A17FE1A99D03F851BF811AAE848B8F7F77D5075DEAF483E279
574CA2D0D685C7D7F56248A987EE709782646D145FCBC3309933A1310FD71115
A0B725E3EFD5C01936F03C32E26E9752568586AF8F68C03A0B150E234D3A5C32
A6EC201192FFD8BEC784F4132DEAEA3D477C0433ADAD9AA04C4B6A9E56344507
DFC06A839C74458AFE461803EDAAD78BF5F7A738766E78C1AD7686A3C54532B0
7F8856E3D629286E320BE4C2E6FCB731F6D39DA40442E648D10AADA23516331D
6E99469582FAC2901B629CE4137326A88F6E1DEC663321202D699E63A013EBB1
69289FB9333B6AEBEE1DE23F9179E939E8E50F7BE4118ECC2CC40F691AE9748D
2DD76D9D1546488B7E05ABAA458C5CE797A327685A564C11295A73FE3649A983
08BC5906C1DA356869FEA0B72C4FBCB931F9ADB92E0D1754C712F72AE86BB3D2
37159A840CCDDEA5AC5DF7A1CA1DD80CDDDAE0FBAB39361975EE9853129E4110
B676D6F655096130B2AFA9482F6006794C8902C6C1FBA20DA71AFBD8FF43B726
6414BBE146EBABA64AA813A47FAE8372C5528FD147FC39FBCE99CD1E5FFD007D
B0131D0FDB513D4F280E0FEE768A8A92CD12A452166A5C9ABE71B74569E1DD41
B82D849411C90C3CB8F91D3597D2B5C1C34689162EB4A741E46AD71C3E2F92EF
983C0CFF990C42264F805E66A8DBC8B1F083FC5F6136CAC7B79F5748CF681765
B54067A2EDE238F6657249CF57E563E6D290FB40D1348765A8481D1DE469E481
EEB8F8A422F2E0E9E655DFD6417DC8BC95BCDC6E60DEC83B2C8975577276FD8D
BDDE1366876EBCC64A3ABDC7D1A6C11C80CF098B6FF03D1FE08EF9370637DD9A
5DD48D0CC8F071BEF9B8173A6C4E227ED095BBA95B3DE028283DAAFF83008ED4
B19CAE27A55405DE1BC5680EEE1C7884E863992976D32D5EAFCE214A74C5731D
3162480D9F316B578CEE6BC5A4565BA159DFFDB5B99A76D4B0C9C7546F8F7336
8C496DF7CB909D84EF2D9C7E8BE72A74782342D4DDC371E175F725009AFAFAF8
DD4279E8708996E4389AB381E3DD97E48D7EE0788E7466F23FDFA93E8C92F737
3E2BBD43CB8103899EA8517AB8C18737EC2FAABD1BC09F6FA33793A8753A7F55
8D0C28196A0E97DA2C4EC52A24DD1FACDDFAD852DE16B4A1F2072361A0A55738
ADAFC1AC17B04381C6754327FA7C65AEAC1A283B0BBC4AF7638DA1EAE01CFE15
FB204291B0003D652DFCE6DA899EDC907556CB0EB4C766A2D241AD2F9E6D5C0F
6F6F786A20316B992F547DE9372FEEA0BE4051D0FA9138E7C6E4B118CC665F4B
861D3766A24140056237E05E5C4452AF3E1AB293BC61E4AFC91030E002C14B87
DD9FBA00895D87DC97B3C244D13204FC213738DB87C070CE821E7FB9FC44F311
B8FDB0C570F13EC21180CC9CEEC68B1E997B717212AFF80C67540AD74C1BD34E
71BC29AFE8BAF9435EBD71991A6EFE8EE62F1EA78757650E2AC26FD439BDC534
765A6E35825C99CB7AFE5A873340B50AEE34371DF153C879C33F36A5E3BE297E
7D1F11450DD0BCE7AA070D48FD2401FD0399A6CD1F4AD5BD84D00D951D4CF9A5
EEFBE4A7966EC86B1E0F410914EE8D007BA9988E5147C913B2E22993D3217C73
6570236751D9EF2217452644AA397156839E10B3B3588246A706074F0FCDD8D0
EF7ABD90A16A4715AC3AEB35D19BAB02EAAF362CB03E5798B0CB36A3BA67BB89
AE359A1FDD361632687A99AC68B43DF9DF3812874460B79F1B24A449A12C09EF
24314D339E2C6E281D166D457F08E37AC4B2F384E51CA45D81C33BA4D13E8C03
F4B60480E71CF05F787B2B565746C211F30813630C7EE7DC33FA186ACA56F834
9C249464D35FEBCE1885763B8DB1BF48CE9912291F6C28F8FFC6DDEDD3048821
DEE61AEEF9862229F0489E0DBB6193F4489B952E7DCC78F25D7C515247606226
2A67530B2F73EE6A1DB6F209374DEAAF6B3BD4B4B28F24BC26C77FCEE4F5FC25
DA53070C2BBB44E28D1B5CA0FE0408AEAED7C49959C9B1690EAD9BFF28E42BD0
5A7B1DE9E493D6C6863B710F686C46172AFDDBB2E06461EBC609ECAF7792E470
706A8FC2C2ED400F10656393658208DCE8F204F84AB174CDACCF5DEFED01141E
E2E8053DE10C53A0C768D6853F87D05617C5E55C7416C29A27BE5BD9698C9484
AFF6873BEED3F9698D71B91903E04F1881EB3A44D8C1AFEAB666552ACE170271
D4F4AFF845E36C36EB87559E5786B43C7DDF00B856C14AC12D72F4DF8A80A1A0
F45C2285C8FD0AF574F02957C276FA6E95971A517B327E470E7277AAFACDE31C
476E3D2246EBC69353B00381103820C9F457933CB3E05823B59836F8DE5374A7
A8509A466111BD10638D8471EF80B11A7CD8968CD0148D5BC7CF82B3B017C0C2
BACDA5638756116A6DA14E3A1B45E8AEA512E5FE8CD3E189343153D7EEF441E7
A4533F8F54DBC0D01C9BFD1A09712CA1F678274D3101C5E726FBFD1A43FE6D5E
74290DAA0C94583206FE66F5373AF3CA6D9F519CE2A14E25994F298F14ABB0D4
608B1B26BF4798CFF82D381C75D4D64F6A283C3A46E06CCF45227F9650183AD9
9ED8BEA57BDDDF8010189E4C03678907A192C78EC99000C44562B5BCCCF77226
C214ADDFC7640EF185FA99BA638F1EB611B4F83E2896C5EB3742ACAE6A1500B6
4835A139964424711255AD5797D426067BCC552A167191FD90A1987D371691C0
7BEB2428FC62E1307D4670C92D7236CD1D191CA574B355ED389230A5AD45AA40
3678EE2904BDC470931D2F43F92DC94F90F982B05CC9801BFA0B826AE1790EA6
906CAC83605B885B790AFCBDBC53BB8CDE8CB21FF1CB0250441330B26B9B58A6
B5DA683D6258C4C2FA1A7631EAD2FFF58DF8B0B63E4D1ACEA5A115B622315854
FB4300D81DA5BD5511EFA0ED7590442F195B29BE7EC1EC0A068D6977F87ECBF3
7DE88FE1FC244CE25F9EC957E22A5CC9526931F25EA8E4F963F9FF707E8F9127
D45C3A9784293F2305CACEF32C3313947B08FFE42A5E4D2536BC276765AA087A
A4CDC1F06E5A048F00C11A345DA94C96235790DA7CD183440E0494A2203E48F9
79F052CE26A040D8D3E30A63243E9F7DBE231C3DE32B82A38A9BA8E2B01B3E29
D6D60714F18EE60E6B7E2ED47E8E18285ED961ACC52E50F44E54C91326E48109
3C909067BEDB9C6A2155A7689A824B564BE95D2E035F9FF9E9BACA74E951339F
AD5776CBFF33020EFA7E9C396B60AC514364478CA2FC8C6AEB231DB11C14EA3C
ABD99ACBDA6B71C05CE3ACD8AA4A2CD82E7EE0C934B0D09E33EEDA7238D5B2FB
D42D4406979B376C8604E2507955A16F775A14C8D3F127A14B321CE32CC028F2
A47AB4A1E76ED13016063B99D7C0429CD426AF9CD9C35372E0A6B90A6A848CEE
1E2833E4F157A6E1D45DF424BE6DCFEBD915BEE2AE4770E90FFCA99A425CAA46
5C3DD484429CAC1A913AEBF551D32E41FA74008E7919F1710B910C1606DDE311
9DC3BFE55DEE1AF58852B50FD3884410A7B77F47D006E329B5592535E911EB0B
F8D18845893F59221410C176B7EB9B986154E767F4DD7373D2E090CE356984C4
240777BE5E51E570BD135E3CD4C130FFD5EBA5C71470EBB4A108FF77025B7681
DBE1896163D0EB543249139F6BB1CE1113D64B375A591E5B6D177A3E42525D2F
36D5102E8DB6FFC8039417A0D61750E1EE624DDF0414274BFBF372840036E3D1
E71C93111F531B0D8E1F96007319B83C7F0DD201D74F5585F98F1E9FA16185B6
9CD866009A659D36A46E5DFCCD9049A53440202E2A9DDAC2DE503B8112B8B2FC
476E628EF62D9E03AB3AE2656A51C23933FC4EDEAAD832E8191D91E097D5C667
B80595E4A2BAD35ED28FCDBD555F389BA5D63E8BE4455BBF900741E2B07295AB
C03A04789D6D2C38488F08BE85334852267155E95953279222709CCD298759C7
D35F377E78946C6823C2BE01D1145E293C5C91E4AF0E92D61A74F314BAB0E3EE
C5C238FAAFB5C77EE22F8C6B3249836E90FDCDE1FAA0A79EE7BB28A367EFFA13
129AC3CCD00CDE0D16F64B07914A9226391745A5A35FF5372297D077C7CF5828
3EF057AF532F12ACE0FE35771CD48E7F99EAAFBA59E6D521D2128510C08650DD
ABEFC00A4CAC4363107948FF0CFCB2961E58AFF904389B0DB7B13FB16D30387B
86A3582F3777E1EEFECFE24E4CD8C6953A5C3B4BF27BA8A317BA18287D241F5C
2944415E2C941F291BE9137089355D32757F3674D786E57CA1229401BF634D44
5C93FDC157796BFA5CEE6F662CE8868C1CF7905F6286FA59341E68A60540DCB1
971B19A226EA8995628F77E61D8DA97BF05D0546FD4DD8C7A95BC217EBBF8028
FFAFA7BEF609DC694DD71C1C6EF00A8A55B6CB2F2E58E760A0B62AAFDF922F44
7DB9FFC5604B82B36D6DFE1C12FF4026BE57CE87C43CD58E4190656F7B352E24
890560FD2003557B11E20DF09B4D1B004E09B4CA8677A959917DF9D5F04A510C
5941F83318E76520BFE146C917E2B5324EBEDF7EB96A2E6C2297EB8656E59E82
D8B8D8D9C3E664D0826777A754076C4C3D0A68B32DBAED4B5C074DA8681C2397
F448C46BA164AC7BE0C0A73FB423A2A5862D91085B4E047C7F92AF7461811CDA
6D6215BE2990B4F194CF371C1A07A95681A598232B4F17C90B1F928AE9D2F1BA
2D3363EDFA1FFD7BC6553AFE3E7BC6F4601360A7462EFA11B131B70FD5509D40
C202ACF1153F67CED8B7722D9379F30231361D0335E03BA431ECC488B4A3B05E
94AB79495771AE15AB865CF16CF6173CB95EE292D8F2EBE5334E04FF4C609148
DBD0A3F7B3FA09F1BBDE491C30FD0196D1E6BB80DD9D157743CBA9720F71F4A2
3F81E37771D3B5C06078D4B1E33E398290BDC4E98A17E62F7005BE97F19E87AB
0A049B1260CBE7EEA199D39C2CD83B83EF4FF32B384B76574A5049D9216272F6
67546E7F5623039A8D49085ACB83B160C466909F562BD4C26A24DB3B94D8D1B5
0DAD534D89F706B491117B02515763A712672FA9DC450F245281DB06B129721A
9137AB49DBB6B66FD9D2B913165B63D10B1D72AA748CB116B87E0562C790273C
2BBD2F41A2D5DBDB990CAEFEFD5AE37E7C5D2C432201EEEA2BBDA218F78AB528
52080700F10FD6F44F4451A92F91A4DED1EBD0A2D0C0DFA70008AA2E243802CD
82506ADB59865406CB7B38AB5D24696D88D35B69DAF8C9416E9B5096439C0129
4DAC260A9AAE7B07A5EE24F20FA5B17E3209DF9F81567747542BD1857B6F5060
D755EBDF24702BE0D79C81597D49BF022A2D851A47A2D3257F8810F45DA7C89A
A59AD9E5B0F8570465446BD060CC117CC2B1B137814854BE88A4B571293181F9
8039645643B11341903F99DD215303A531FBC16DA0BEFD0A6BDD70826FF57696
082829A026CE5B36ADA68263A760F8287DD35EA093B61DE89472ED84A1D3DF8E
49EDFB3000CE63C56C588247A02388A26CCC72C4218F578BF9F11DCC3FE95BE1
21A7157A42672ABACEC64F1C0C61A3CA481CE5D74B8D57712E5A885FFE4CEDB4
5348EEE15DFFDA250334C4BC825803820CE7B7BADDED1A83285823516DC76F5E
BD7D72625E685F9BC0103A59C0057187156946EACA94BFF01FB5C81D72067DEA
45E0EFB5220BF4712AA2B67CDB36D571A859D8E9DCBE3FC68F25F7CCB33E1FE5
A23AB292771A11AD9CCD2A50E6ADEA39CC60CAE354FCCEC5E6BEF28381AEDFD1
2621F0EF25F02C42A17050874A29EB1BD29126AEED2F15E15ABCDA1ED8DAFB66
7DAFBE9A2AE1FCE691C69336D2DCEE319D2685B8133A6FBA5E5899206EC82067
853A3D0E57396E9D542BFE1019833E740F793381F28C49C09EBD3188764D99AD
8C1A617328EF48F68464F45A0D62D77A4C3C7866999504BCE0BAA075275DD3F7
B4AAAC8BDB58E9A58789D4C1358C4068EF415A7F3884C477F6AC472D8B504453
0B33095755FD69A33D9E78BB5FF7B27D7A40DC64E1A25B4FA057A5AAA357AAA3
DD0D863BC8A392473B97E1E54D62049C3E64858FDEC0A2E08DB5A229D64696AC
F18110607A91F86151106FF91DC94A6CD1CE641C8300C594FB80AE7417DCDC67
5CEC58EEB54FF569D858B70EDC540ACCCB990F7DCC5C14B60B317DAD74DAB5DC
766F4070A715BB125147F6D6809D05416517E62D3185E1ECB1628EDBBA8148EA
7FE28F16E043FF869BBEDFD821636C27C2190B53D69CBC8B1EF3B18345D753F4
AFB1FE83B4AF235223E3FB9330B9B61C6C54309B7B2BCDC8E84B2DC063B96EBC
FA5EF988FEF24BD0AACF45C77145E6D47565FF544F80DDBD2120FEEF7D34868E
D7D0FDC556030DF5832841D00D5118B1A54BE2CE6792174C06904D0EF6F9B748
A2553A6B515A8A7A1F6FD58F42F3C9E58ECAAACE5928889E82545E2103021467
4EAB94BA85A1D62693FB50EEC4EA3F89CB942B09321E85F5368F71DB01DE924D
ADCB322583134461EB3978C584DEA3B2A11DF0545A5D47B9886CD02FCDA35171
4585C059249C56AB9F04B68EC8F2E510F6A12881565FBA264BC5D3382801513C
88B58E7FCC6AB0FDA8BEB8A52984BD4DD4476EE0D4456A80199EEDB5321BF0C4
F6731B7423FF43EBA4573F9B934AD53A8B906FCEEAEADAD9955327100476C03B
131A04FAF2FF0BCEE905BB404B58D8203A174028CBB2A2F1384F0D0FE095AFD4
B9D3DE1FBF2AD98445AFCDE984046A28A95C12238244824AC8000E498ACD184C
185F9A1237C121F3F6EE514B29F80BB82E252AD4D698A28FAD03A6D1FAE8D786
8BA80737F5B649CF3EBD55027BAFEE5A8936FD2E4B7248C721A2AB6DEBDB0DFB
467C2251159956FFBBA95676E08D82182FFC33D38B2479461D77CEB2CA58DC08
63F7C2FA68C72DB1F3D7CFDE067F715DC930743D3D6592C07A6F92055B04BB46
8B69A205720FA347BD3581A8CBCCA376675A47B77F60A161FA5DE6B9329B6A9E
5189A626C9DD6682D156BB2B72784126420B23808BF2E33023013BE170C5A907
7170020699005F6C0D105DBDE191415DE5A4D03E997B09638639B04229B10355
842C2AC27353857E9208260AE6AF249C1304ED4822DDB8332606CB22816970CD
9F0B307D0F0BD125565F1236AE888EE32FA4D058A2DA48BA4A1F3882A29703A0
8F5A3EDF7A36E0B648834780DCBECBD9B22413D43BE9239DCA5D7AC233AFA248
83826E766B73B47D0C36637001ABCEDB30005E652C4EFE34284E403BA1B4C1EB
B85531A1BB5F1C3F6A385DA0FB289FA3DA1A5836D890611110EE3B155E32AD26
04D3DB7AE88103529F3814C54E36BDED43E6817B07AA754B52398B185C9C8207
965CF783EFCD286C4A69B2D48512BA6F62A151573640CC57E6FAB11F92DCE88C
14EDCB7AA60FFE493AB33413FB84F35B3C0016089A6C4D67EA0050A34B74913C
FE94687B5B38750616F6DADA390B4641F27573D4354920B90DA95B5899C9FE40
9D491DB422E2CF3821E693592A6CE609354C2D51A2321554AF2252858B31863D
0EFEAA6C8CE3B066A7C6A2626635CD202D499070A88E13EFAEF12DDF571ABDB6
295AFC0E2909211E814D3F1011477B63CB4B29ED6BC20BF5B8B1DA20009D4490
DD9F0E942CEA6EFBBCE128141F1FEBC6C9C79BE3BA3702152BCEC78E9470FAA8
6BFA30F7F2ABA1BBBED017D5EAED0D84A66F07AFBCF65F7C1BDAFF8F96681F70
2C108AFA1535F2B6B36A91CCBE54353F36F4E203F8DAA14D0FE79DD930033C7C
A309640ADDAA8E651090AA6F99D9F39C0C4E3681DE3F1C10D4D4F7BD5C89F7E9
5838F79578DB47FC1C2F3F0E4BFF4AE80F37E06CEE3DDDF4C21013F989EA66BE
E2458114A364791D8FA90E08A69CFD5D966A36C4C2066A52499C6D415C39F60D
10EA6AF3F5E834B59BF072B35C27D639F29D26DA576324E7FAE892C5BBA8BDBB
0294DE096AC815C38D030EEA6618549365848E09B9F677FEAC505B3B4568598E
621BB7A2FFB0FFC63B7D9F12B2F4A61E66537C09C5CC28AFB5E239B9282A896F
0E97B5AAA8A46AB2CC7F0A186DB754E3D03ABC8B3DA3F4F6C2DB54682F72DFB7
E5B753A44EA785E273ED52156C072485C5377874A00CE95A425ECA18EFF46C8A
B67AEA24D667B93B37D721D6F28B7382355A91424DFC32890E1539C42E80C827
321977F786D7766D0563CB09824E9F025B1F8692E1E8CBCACEA334DCF44E739D
E8C200F1791A2A994916B59D3D92CD121962CA8E19101904A1E9F0E2B6623394
7EA65F1B8A55871A334EE76FC99D9C494E9EA14D8FA65D54D202395D3F3F9C47
AA9D6753E1FBAAF535DDAC92B591F2516DB91EB7354A48713B4B8730DB89D56E
ECE72D7992DC7BC40928727115EAF07BA8A6125EBB7ED869B4796E3DDBCBDB90
A4444C4174EC59949A839517D879F615AC39A2F284A460D2D6B0E4E40FB2CACD
937ECBCDCDABC3A22423BEDB9D28DEE9382418C5920F06B4EF598BC258B0F823
702CA7186A58CE186A08173C123BFEF72B9FF4613CCDE3D8C408148F47774795
2B1BC5E0568AE3BDFBDB8295B01C0742475BE2721C72150ECD32BD7E0F9B25F3
B832585776052FF4259FCEB70188CDBD00DFDE03CCC5709F6D80ECBC96330355
BE2195687386C5863A4D3B725F6F115BD32DA6F3D09D178C7370258AA83F257C
723F98E28D8AB0C4376FD1AA60059E53EF32FBF614EF8FB097D36E39C56CDE19
8D295CD8BE53D903BDF543A3A9C4445C3F39512D3ACD896034D7F6EECFBABD78
992986B216C0F57464D8D14E54270B239224A0CDF758C70B7F8B434E5A256770
C084DE2D55ABC3144B66A4C267807152C46E16F01F148495FE90C789935D87D8
4DBCB67DF1E09DC6420EEA1F8E16EA24B02C92D1C3AD05DC5ED1B38DE6051724
3059083F5E07E64BF7DCCF84F9B04D08E9FDDE1A89BE65DE7B0CB4DACDAE1FC4
F892A2F092A3E459A38116FA5F8498FD5AFC79B778CC40F4F63FA2845A54BB3E
342D8157822D42F334B8793F13FB6797C5E5249F87F2117AD26CDC5AE2850EF1
0EE452B49AAEFB2F85ED60963551940DE4888AAD7232E4346A5BFE8DA3DA8F93
3097EE615767510AADA4364CC2035DB3CD08B107110A2FC8A6033CF6063243A8
C192D0763ACDFBAEC50F70C8A109103177786D6F091A1D5C37DC89CF313CD159
86DBC59350DA129DC0FDC4BE50D5A5CD8DAB4109CD47BC0247D39A4C30897166
21AE996B4079044466CCDBEF218B2ECEB6B15C37DF0CDB33E479A03EB33FF647
D7083E1D19F5F43684250F2EF8C1E77099FE3EC02E190CA8ACE1C86E0EC2BD12
033E36D6F091425647BA286B251F827B4AFD3AD930AF497EDCA3507526581199
E65B1D8E5FD9EA2C907EDE46B67047B5715C65761536F888C3C39EE4851CF2A5
88D698B46FB83704EC4F3B6B5F8AED06176BE86C1FC647365497914866F3D7D9
3EC9FE63F2DA52C1E371D57B511BD23AC816BA522198398728EFD22371A49AE8
79DDEB699251E5A92FEC69320688672BCCCDFE1801DC3359A82D031E95E14C34
E3D33DB3BE958098AEC1EB0F1B1DBDA22F6E793C31EB751FEC10CF5B0E755F9D
6709A34E9B92970D66A6C473EE1917CA2664BBE6D74D11AB2D2D8EE5CAAA52C8
05988A92CA93E607A7599BA049F9781DB760D60E2F36D2E29FF7AF32CC38F4F4
E6966227C54BAF334912B5F95060A568184DF72CCD4FD69BE2E638D1B9CA0467
952835BA7B396815CECCA18146C96709CFF862E8552A78A2DD415F312D653513
ADE6EDE9E560BA16573295F4DC6F150BECFCAB9AC7528E3792B8C87BF92E6A39
E5CFBED9A6B0093FC96F298AD1B5807C33A89AB14673D373872C891B54B03BFB
B05D94BC32BBD9B63477E629422E9B727E909B751F4CDC6547F9D72805E61ABD
FC1C570F49408FA6BD5C2B6D5B95D16AA4BAE01BBBF1C500EA0B43A9E52C2A97
EFB0D86DD9BF2F3AB34DE24D16AF0158EDA53C21005D27AD1EAAB824262042E2
ED8FC597B470ACBE4E27F6AE19EE8D7572AA6ABD408BD9C0E8653A86DA27176F
8E9257CB36EC875339EB25DADAA0E1A671E9ECD3D2405815CB2104827B60B8EE
9CA25C10E11ED27AEBC274E6FCDEB02442CBB7BFF9EAB5E6E856E3C4B178FE62
4B1AED5AA201D467D1E213B2A0E953A41568B362D8B0611B3248836DD9152074
F5EE57AA9E2467932513B65BEA5A7D0E8A5AA8007C21C1EDE0CBCF1AC4B243DB
E74162DE9DE1C1EDE6A0DE6D59985A767AB5F135A35A8E10E17D646A6097540C
5C81A8CF53AD64448E9130C01AB94B0165E01FF295C9CD39D97DF78A991A8AA4
3640ABAF6B75806EF0477B3411533CA4B6BCEAF16DED024D6F0F00ECA9B40227
9E15456C72C9D5D0A44F2547C832BA3D991F5EE602E2F1348B2F930C2F482F17
D107B1AA4C38913405A06F037C4184CA5445D5B4F43726D9BC891653DA679F20
C9DA7D41FBB12CFF132C7CF956F627EC8A046F005FC4E331AAAFEA5C905FC0D1
2C6ECB60F72D16E6767045459128DAF4CEC098942A57659130CE0C8CB226F1BC
70AF5D71B0F83384D9F9DA3D467CD72797017348ED29D7C8C396A07EB96D9070
35516625388373EEEF0D2F4216916D8EC97E89ED5CD37A5D14188AA679C8D06F
E44D978949C5C3A80DC5E3CEACD449EF85D68E16B5AE0ACF68CECA87F1535FEE
6EEBC67F90818206B95ADD734EBF0F4AC531D1590368D32CA7EAD87D6D12938C
8C15B972D3698E478603573F9FFDD42D1DA7BA6D125B96B6B31086ECE9AFB51B
C1A3A9396EE80AA54A3ADA86D9AFDC9308931CB1A5D61AF1BC9F0170AD6717AF
08CD7E73817463238E45EDDAA8AC55A23D7AD7BC8EB1833FBE9454C520F41D28
650AA3DB6586E8FACB2374B7116C3845EEA1FCF667E5CF20244097D4BF017AA7
DC31044B55C4828B656EE4F0F6F2D99CE0042C62ED647ED8B0B6B2180687720F
EB6A07A41636256D64C88DFF031EA587A35D9E7828FC08F91630FE67CAD1E186
BCC67F3BBF4E40FBFCD8A659F009BADD5EA14ED6BD6108AD1FA01E91AD89F09B
7D5B60FBDF5E92DD4A968997492D32934E6FBDD9560A5C39E7D4A1BDC2F359B9
A01F1B535A97071668FA7F14EA9FCB6D134369A329F12E17AA375C796401BDC4
02A250524E4896B2DD4CD3520CEADBE5B89648C437B22FED93F9F54AB39E77DA
EFCF2105D5D75F78405FA205C9BA1B874C47E0152FA637C8912EE7CA2C3297F8
F4AE17B19BFAB8B2E8476A1F086E46EE66DA350AC19F9DA4A691ED45309F6EC0
920ECCB004538162B149BC91BF1FD343FE2D2204B68B156392C84123EC7187BA
B1D95EEBED97FDBE2EC72657A6D7128CEC55E165674CF426EC44E20EDF20D6E2
0BB4BD51A26D0B5D763D41DF72E16B08BC240F58A6AB00616D36E685C58DA174
E444155B488A28D4869B20E1F68BD548212BAEDD4E979F27B43688EE1A6C6072
070EC33A86602F8B98C2ED6B93CF62F87FEF83836C00A6849F84689471B3CA94
B2C485D65B44FDA9A2D92ECBCC099BFF2AA4F9CD8CDAEACC69031A732ABD45AE
B15D340D63572E6CDBE3BE2796D8045505B6193D65B676E51DB15FE328790BDA
52462C676BADC0D3E4F8C24B0864892823B3BB3D0F787DBCA95A7F6F9B264D55
E3D2228183153A74DEDFC3928949F102F48D074A6C2A57ED4A1AC23341E3F455
D0CC21307598343E6E02F6FEB5B4DC3DFC4A6DF0D39784266AB254D4967F46BF
2C13FD8324D5FD6E41AC58B5B434E6B6141FC0AB79FAFD6A428E73C57DC94485
6FE02EA222CB1A5428B36E2E8F5B76258B528A719819037904BD1B2D3B486B3A
7D7B94A95DB2053990349D9E4D5E440197E51D69EF04870B895A66D9805B3BB6
5237E69EE4FB594D63DA5CF6C3D6491814CAABB2B5DE1A34A7D2AA2CD240ADFA
F44DC1DAA42FA1223CCF792D1A88CD2822A62891FBE767DE42B55DBEC6889954
2041CBCE3D5F6EB1C5D752DB29C68D96AF6BF1FA9BD6EB9343BB11B2E4F4619C
9FC7385149C47AF98C372A236F199AEFB36CB7F32C0515F7334A44D07D845318
7801CC5CD18F5006AF5C97DF097AAF8768FACCF701B6A191ADCB2C0946D48EC0
1A688FB6A772DB56E957149E3DA63CA7C1AC0B45BE75A319427C4B64799D3408
E4B22F111A4364398BF1AB45960683AF5F0D9EC55F82FE0EE06942E0B28EE61C
21F4638F2767A838B6EE0036DB603409E192DB057618BC222B93BA4C59967503
8CAC86FD9D05E70BA5C42A0127F71C918AAAF3BB48EF19AFF08E0803703D3515
5634DD59194A2DFA03054FD02FF70178E395CCD0DBFF28E8E4BE7A7B0B6393DB
EB89517EA6BD518874B5B033853325028F59136D581A01F6EB3F8F0C437F334E
31F3E2253D39851F3CCE4A1534233A0FBE4D038B39F4A23194D288D966E0662A
452349C694357217024CA744D3BBA6995B724594691B3D12BB8D74363B04C828
0C8D129A75E92263601727E812E1BEA60572722AF94EDFCE955DC3308498E5F9
5005050B755E46236886DE97901754ECF5D3D991492C84A64D276A583AC4EEF0
827B57A5A62886457112DCAB26F59667EFC2FBF334264D2B93A17195D949274F
2C017973B3B0C457340250231CB1816CBC76289DFEC976177400DFD36AF7B1C3
29912DEBF2F1FCCF6D390EFB2F868F096A5C87AEDE2E53DEE6E50E2601BD0CF7
1C3849543D3C7508191DF53870C94FEA1210CDD983E8B2ADB02B6F247FE052A0
133509A9383F34EA4F3F90AAE5FFF38EB45376FD6C3BAD047FBB806D50364AA8
3648CC80AAA1B6479DD3D866A701AA2776AF8836901B5F954FEA8E63FFB3747C
FA037F88F72D059A12626370ADEEC7282AD3D59D81DF7850CA74B01E9E360265
D8E7EB5B27A2EEF6140A94B5828589FA68F05F0B1777217FD53B3245412D7C3B
B39FB24F9C16AF0CEE830A77252285AC8B9BD818AF0894AE4AC2DBD29B3B127F
3103231C44637946CBF66A4493BB4BF3AD36CE29D5714AAFDBFB16EC56DE12FC
24CDDE958C3AF7BB56392C846409F9B7B55BDCED35CE3586FB9BE2B4BDF2E3EF
C63EBB140A62DC82C57468AAB6D9F7C300D45346A86EA9EED6E85EC967C9E356
1BDFF8913638C14D96F4FAA997123EC24D28AF6F71D140E407693F027E072867
51F44FD73F2BB1CE1F45770646752315D1F19EF3EB8DBA7B07C0E32E5D5D607C
F07E8D1473FFEB519A0E2727CA69874F7EA39E252E1F1A8F5074DC2F59601A88
FDFEA295AA82365CB44475271FB7F7DF4ACAD271CDF65CB8145294D4FE353BDC
972ADEE0D4EE156A7F09D99B6085A262946E5603EEDFF29F15C6CF7E95EE8983
A48562BEF666CF9A6C46CC071660A95F5AF3A7FAEEBE22DF10392A5098A62404
DD96340911E9BE778DF963CD6B7DCE4B9116316C387E28333216D8D83A518E60
BC2E15AB887B89714E110D90108B33C0E0961A7E000E9ACDEED31FADFC74C8E2
46705B5E5E2F20D41E1F781A9ABB190C1F0C4DA4A69DA517BECDE58FD0CD69A8
010EFB35909E46E406BE7BE4EE3C7C9EAEB3D473486796A6EF5DFAAA1E8C4F11
3845C0D09B5709EE9C2ED0271BB6FB1B6E4F4BBED8DD39B71AFF9E6B0EE36E75
8BFDAD95A35BC0F2C1E1328459FBEA8DC6336EE56B7D5D9329E2DCFE6491081E
FC5EDD75F09220FC0EF4B15F87E396682FC9DFFD3248ADE7E4346240BE42A96B
B1A57087BD4A020CC16583600261F05DFD037EE193E9D1406FF36A6FF97E68F9
A9E4E5BA95A2BAC3EE11FDA9B1B6646F8616853D69A1FBAA8C4EA560B55CC334
0A6702F19BCE30733785EC5602DE6F32F9FCF7E09892C182688C76069D8DA402
9AA2CD675E848A3006E32F0C6F0889B4B8E897B8A15316C00D87A7F172FE52ED
ACE81913AA408661F450A4ADE9F613DA6EFC55D3AF1025944FACB6D51A85B56A
E145C6A286EB808ACED42CCBBF8A368BA2A93A52B79D1467871D92F0D3CD0E45
5E73E51CD8451F6FB4A40E3F7038883A9959E2377C1BF39C8B8733D3BABE7770
FE4541F9541D12226DE8182FD35311C87935F89230236CFC195D5E3E5DB7BF36
9FC5D8CED7DAA30453BA7A9155A0E6AF0CB44E824BC61F6B0D04D3F71CF7F536
6A4D88CD75CABB7BBCE2B01920C0AC3C228BE1F727F922BC0397B85C2113D0B3
522B669243B1A940DB1F6103A57547946BD485EFC8DE44D6DF2BA78BC987F47C
986BFE99AED8A6AEDF7DCA6D0742EB9F8E59CB6E4103868D28BFB29C0CB2F088
C40ECDCDD903A39FDF0F541E9FB6A12CB2EA00C45B37E9F37974065C3C617CA6
2BFEAADBB3968F519C32CA1ED0BCB662390A569FE84B75DFD67EA5959A5FC8E1
14B51AA2E899511AB71ECB5F7D3AA95215AD649B0BC95A212E7103113BF952ED
4C8065743E82A751CCAC0CBBA556A61CC20D7BBEA3986AC9173E80593AAA10BF
496811AAF21131BAAB1421C098269B7DF82FCAEB4FA2A1D900886D39576D4F9C
87749AD50D1DBCBD3EBEE7F86413934C46A27AE93F1254DA0B8D7FD11D578404
AC6740C0C73B9525B8C7D5FE579C92892761EC20C26E5937AACC2E03F45E44F5
A16AA7385F666DDC39C68131429B223FBF746D97D2918039824DC58B8B42D457
5C079D21D120141E75B5085C6FF90D99DAD624DA2F3E64D126BA262DCE7FB3DC
496D9AE542842805DEE1055EDF5DEE6F02CDD1C8304943157A2080FF84B59038
03F508840C2AB92C9A6D3A5513E0FBFE29617DE7032DBB5E8424CE56265BF4C6
065644C6846B150B9BBEE5DC5D7D892E9FFE2809C28A09074BF20E5043B8842C
02DB9FC964329D344147804F8503041E55835DAC0348706DAD0FEF6C0968409B
92A9EDBAA8AEAE7CFB75470F582B85F742AF0A2B404414B93B9403B602863DD1
26861B5AD252FDF30ED48AA4F008F1A037D3564BD0A033C6954ADD9D3306C4ED
0A31ED46FFD36087A94337CB3B0E82036C785F95A88A4E5EBE25B9455CF0E212
918493B531C91AA8F9B910812726DD5D49E57B1B9FEA7228E980656C19D1DB0A
FF5725AD7ED28A6E2DA02E589B79E962D4291D31D86677EFD7B5304B9802BB5E
87150B572A524018B4317C711B1D12C764EDE0DFB19AAFD2284B2EB8CF40389B
00D9C7CB3ED6B5C1CADEF510
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000
cleartomark
%%EndFont 
TeXDict begin 26550190 17059620 1000 600 600
(C:\Users\syjintw\.matplotlib\tex.cache\e8\65\e86554e3b6c51cdf4a22caae18fa91c0.dvi)
@start /Fa 138[75 2[50 2[75 75 2[75 1[42 1[75 1[66 1[66
1[66 12[91 1[100 1[83 3[91 1[58 5[108 68[{
 TeXBase1Encoding ReEncodeFont }16 149.44 /NimbusRomNo9L-Regu
rf /Fc 137[95 95 53 1[64 1[95 95 95 149 53 2[53 3[85
95 1[95 85 9[180 3[106 127 1[106 1[138 4[64 2[106 2[127
127 13[95 1[95 1[95 6[64 64 40[{ TeXBase1Encoding ReEncodeFont }28
190.951 /NimbusRomNo9L-Regu rf /Fd 139[23 32 28 1[42
1[42 65 23 4[42 28 37 1[37 1[37 13[46 2[46 80[{
 TeXBase1Encoding ReEncodeFont }14 83.022 /NimbusRomNo9L-Regu
rf end
%%EndProlog
%%BeginSetup
%%Feature: *Resolution 600dpi
TeXDict begin
% dvips-unknown
statusdict /setpageparams known { hsize vsize 0 1 statusdict begin {
setpageparams } stopped end } { true } ifelse { statusdict /setpage known
{ hsize vsize 1 statusdict begin { setpage } stopped pop end } if } if
 end
%%EndSetup
%%Page: 1 1
TeXDict begin 1 0 bop Black Black Black -600 1567 a
 gsave currentpoint currentpoint translate 0 neg rotate neg exch neg
exch translate
 -600
1567 a -600 1567 a
 /PSfrag where{pop(psmarker0)[[0(bl)1 0.000000]](psmarker1)[[1(bl)1
0.000000]](psmarker2)[[2(bl)1 0.000000]](psmarker3)[[3(bl)1 0.000000]](psmarker4)[[4(bl)1
0.000000]](psmarker5)[[5(bl)1 0.000000]](psmarker6)[[6(bl)1 90.000000]](psmarker7)[[7(bl)1
0.000000]](psmarker8)[[8(bl)1 0.000000]](psmarker9)[[9(bl)1 0.000000]](psmarker10)[[10(bl)1
0.000000]](psmarker11)[[11(bl)1 0.000000]]12 0 -1/Begin PSfrag}{userdict
/PSfrag{pop}put}ifelse
 -600 1567 a @beginspecial 0 @llx 0
@lly 404 @urx 260 @ury 4040 @rwi @clip @setspecial
%%BeginDocument: C:/Users/syjintw/AppData/Local/Temp/tmptcpl65np/tmp.ps
%!PS-Adobe-3.0 EPSF-3.0
%%Title: bit_allocation_improvement_psnr.eps
%%Creator: Matplotlib v3.7.1, https://matplotlib.org/
%%CreationDate: Sun Jan 28 15:23:43 2024
%%BoundingBox: 0 0 404 260
%%HiResBoundingBox: 0.000000 0.000000 403.610301 259.336229
%%EndComments
%%BeginProlog
/mpldict 10 dict def
mpldict begin
/_d { bind def } bind def/m { moveto } _d/l { lineto } _d/r { rlineto } _d/c { curveto } _d/cl { closepath } _d/ce { closepath eofill } _d/box {
      m
      1 index 0 r
      0 exch r
      neg 0 r
      cl
    } _d/clipbox {
      box
      clip
      newpath
    } _d/sc { setcachedevice } _d
end
%%EndProlog
mpldict begin
0 0 translate
403.61 259.336 0 0 clipbox
gsave
0 0 m
403.610301 0 l
403.610301 259.336229 l
0 259.336229 l
0 0 l
cl
grestore
gsave
61.610301 34.696229 m
396.410301 34.696229 l
396.410301 252.136229 l
61.610301 252.136229 l
cl
1.000 setgray
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
0 0 m
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
0 0 m
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
0 0 m
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
90.626301 68.148536 m
108.482301 68.148536 l
108.482301 65.903812 l
90.626301 65.903812 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
202.226301 68.148536 m
220.082301 68.148536 l
220.082301 182.033499 l
202.226301 182.033499 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
313.826301 68.148536 m
331.682301 68.148536 l
331.682301 45.605106 l
313.826301 45.605106 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
108.482301 68.148536 m
126.338301 68.148536 l
126.338301 171.624353 l
108.482301 171.624353 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
220.082301 68.148536 m
237.938301 68.148536 l
237.938301 95.584777 l
220.082301 95.584777 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
331.682301 68.148536 m
349.538301 68.148536 l
349.538301 182.760621 l
331.682301 182.760621 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
126.338301 68.148536 m
144.194301 68.148536 l
144.194301 117.858905 l
126.338301 117.858905 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
237.938301 68.148536 m
255.794301 68.148536 l
255.794301 126.809137 l
237.938301 126.809137 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
349.538301 68.148536 m
367.394301 68.148536 l
367.394301 132.750111 l
349.538301 132.750111 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
144.194301 68.148536 m
162.050301 68.148536 l
162.050301 139.209693 l
144.194301 139.209693 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
255.794301 68.148536 m
273.650301 68.148536 l
273.650301 91.00243 l
255.794301 91.00243 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
gsave
334.8 217.44 61.61 34.696 clipbox
367.394301 68.148536 m
385.250301 68.148536 l
385.250301 137.157522 l
367.394301 137.157522 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
0.800 setlinewidth
1 setlinejoin
0 setlinecap
[] 0 setdash
0.000 setgray
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
117.41 34.6962 o
grestore
gsave
67.137 12 moveto
(psmarker0)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
229.01 34.6962 o
grestore
gsave
192.096 12 moveto
(psmarker1)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

0 0 m
0 -3.5 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
340.61 34.6962 o
grestore
gsave
317.513 12 moveto
(psmarker2)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
61.6103 68.1485 o
grestore
gsave
43.153 60.22 moveto
(psmarker3)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
61.6103 135.053 o
grestore
gsave
31.696 127.125 moveto
(psmarker4)
show
grestore
gsave
/o {
gsave
newpath
translate
0.8 setlinewidth
1 setlinejoin

0 setlinecap

-0 0 m
-3.5 0 l

gsave
0.000 setgray
fill
grestore
stroke
grestore
} bind def
61.6103 201.958 o
grestore
gsave
31.696 194.03 moveto
(psmarker5)
show
grestore
gsave
22.736 21.686 moveto
(psmarker6)
show
grestore
2.700 setlinewidth
2 setlinecap
0.260 setgray
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
gsave
334.8 217.44 61.61 34.696 clipbox

stroke
grestore
0.800 setlinewidth
0 setlinejoin
0.000 setgray
gsave
61.610301 34.696229 m
61.610301 252.136229 l
stroke
grestore
gsave
396.410301 34.696229 m
396.410301 252.136229 l
stroke
grestore
gsave
61.610301 34.696229 m
396.410301 34.696229 l
stroke
grestore
gsave
61.610301 252.136229 m
396.410301 252.136229 l
stroke
grestore
1.000 setlinewidth
0 setlinecap
0.800 setgray
gsave
74.210301 186.771645 m
361.743266 186.771645 l
364.143266 186.771645 365.343266 187.971645 365.343266 190.371645 c
365.343266 239.536229 l
365.343266 241.936229 364.143266 243.136229 361.743266 243.136229 c
74.210301 243.136229 l
71.810301 243.136229 70.610301 241.936229 70.610301 239.536229 c
70.610301 190.371645 l
70.610301 187.971645 71.810301 186.771645 74.210301 186.771645 c
cl
gsave
1.000 setgray
fill
grestore
stroke
grestore
gsave
77.810301 223.336229 m
113.810301 223.336229 l
113.810301 235.936229 l
77.810301 235.936229 l
cl
0.195 0.453 0.633 setrgbcolor
fill
grestore
gsave
128.21 219.454 moveto
(psmarker7)
show
grestore
gsave
77.810301 197.853937 m
113.810301 197.853937 l
113.810301 210.453937 l
77.810301 210.453937 l
cl
0.882 0.505 0.173 setrgbcolor
fill
grestore
gsave
128.21 197.728 moveto
(psmarker8)
show
grestore
gsave
180.824633 223.336229 m
216.824633 223.336229 l
216.824633 235.936229 l
180.824633 235.936229 l
cl
0.229 0.571 0.229 setrgbcolor
fill
grestore
gsave
231.225 223.211 moveto
(psmarker9)
show
grestore
gsave
180.824633 197.853937 m
216.824633 197.853937 l
216.824633 210.453937 l
180.824633 210.453937 l
cl
0.753 0.239 0.242 setrgbcolor
fill
grestore
gsave
231.225 197.854 moveto
(psmarker10)
show
grestore
gsave
287.82022 223.336229 m
323.82022 223.336229 l
323.82022 235.936229 l
287.82022 235.936229 l
cl
0.578 0.446 0.699 setrgbcolor
fill
grestore
gsave
338.22 223.211 moveto
(psmarker11)
show
grestore

end
showpage

%%EndDocument
 @endspecial -600 1567 a
 /End PSfrag
 -600 1567 a -600 -127 a
 /Hide PSfrag
 -600
-127 a -1285 -70 a Fd(PSfrag)20 b(replacements)p -1285
-39 685 4 v -600 -36 a
 /Unhide PSfrag
 -600 -36 a -1438 105 a
  {
 -1438 105
a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fc(Broadband)p
Black Black -1438 105 a
  } 0/Place PSfrag
 -1438 105 a -1215 246 a
  {
 -1215
246 a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fc(Cellular)p
Black Black -1215 246 a
  } 1/Place PSfrag
 -1215 246 a -985 387 a
  {
 -985 387
a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fc(W)-8 b(iFi)p
Black Black -985 387 a
  } 2/Place PSfrag
 -985 387 a -695 526 a
  {
 -695 526
a Black 0.000 0.000 0.000 TeXcolorrgb -3 x Fc(0)p Black
Black -695 526 a
  } 3/Place PSfrag
 -695 526 a -791 665 a
  {
 -791 665 a Black
0.000 0.000 0.000 TeXcolorrgb -3 x Fc(20)p Black Black
-791 665 a
  } 4/Place PSfrag
 -791 665 a -791 804 a
  {
 -791 804 a Black 0.000 0.000 0.000
TeXcolorrgb -3 x Fc(40)p Black Black -791 804 a
  } 5/Place PSfrag
 -791
804 a -2546 984 a
  {
 -2546 984 a Black 0.000 0.000 0.000
TeXcolorrgb -41 x Fc(PSNR)48 b(Impro)m(v)m(ement)g(\(dB\))p
Black Black -2546 984 a
  } 6/Place PSfrag
 -2546 984 a -905 1124 a
  {
 -905
1124 a Black 0.000 0.000 0.000 TeXcolorrgb -32 x Fa(Le)n(go)p
Black Black -905 1124 a
  } 7/Place PSfrag
 -905 1124 a -918 1236 a
  {
 -918
1236 a Black 0.000 0.000 0.000 TeXcolorrgb -2 x Fa(T)-5
b(rain)p Black Black -918 1236 a
  } 8/Place PSfrag
 -918 1236 a -952 1348
a
  {
 -952 1348 a Black 0.000 0.000 0.000 TeXcolorrgb -2
x Fa(T)g(ruck)p Black Black -952 1348 a
  } 9/Place PSfrag
 -952 1348 a -783
1456 a
  {
 -783 1456 a Black 0.000 0.000 0.000 TeXcolorrgb
Fa(PR)p Black Black -783 1456 a
  } 10/Place PSfrag
 -783 1456 a -766 1567
a
  {
 -766 1567 a Black 0.000 0.000 0.000 TeXcolorrgb -2
x Fa(DJ)p Black Black -766 1567 a
  } 11/Place PSfrag
 -766 1567 a 2767 1567
a
 currentpoint grestore moveto
 2767 1567 a Black Black Black eop end
%%Trailer

userdict /end-hook known{end-hook}if
%%EOF
